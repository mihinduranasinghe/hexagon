{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The Hexagon toolkit is meant to provide abstraction from underlying technologies (data storage, HTTP server engines, etc.) to be able to change them with minimum impact. It is designed to fit in applications that conforms to the Hexagonal Architecture (also called Clean Architecture or Ports and Adapters Architecture ). To see some simple examples you can read the Quick Start page. For more information you can check the Developer Guide . You can read the Core or HTTP Server modules documentation. Hello World \u00b6 Simple Hello World HTTP example. import com.hexagonkt.http.httpDate import com.hexagonkt.http.server.Server import com.hexagonkt.http.server.ServerPort import com.hexagonkt.http.server.jetty.JettyServletAdapter import com.hexagonkt.injection.InjectionManager.bindObject /** * Service server. It is created lazily to allow ServerPort injection (set up in main). */ val server : Server by lazy { Server { before { response . setHeader ( \"Date\" , httpDate ()) } get ( \"/hello/{name}\" ) { ok ( \"Hello, ${pathParameters[\" name \"]}!\" , \"text/plain\" ) } } } /** * Start the service from the command line. */ fun main () { bindObject < ServerPort >( JettyServletAdapter ()) // Bind Jetty server to HTTP Server Port server . start () } Features \u00b6 Hexagon's high-level features. Simple to Use : Hexagon is focused in allowing you to use the features you use the most in your daily coding in the easiest way. Easy to Hack : The library is done to be lean and simple so you can tweak it to suit your needs instead relying on third parties. Pluggable Adapters : Adding an adapter is just implementing the port's interface. You can code your own adapters from scratch or tune the existing ones. Kotlin First : The library is coded in Kotlin for coding with Kotlin. No strings attached to Java (as a Language). Properly Tested : Project's coverage is checked in every Pull Request. It is also stress tested at TechEmpower Frameworks Benchmark . Modular : Each feature is isolated in its own module. Use only the modules you need without unneeded dependencies. Architecture \u00b6 How Hexagon fits in your architecture in a picture. Ports \u00b6 Ports with their provided implementations (Adapters). PORT ADAPTERS HTTP Server Jetty , Servlet Templates Pebble Serialization Formats JSON , YAML Settings Environment , Files , Resources","title":"Home"},{"location":"#hello-world","text":"Simple Hello World HTTP example. import com.hexagonkt.http.httpDate import com.hexagonkt.http.server.Server import com.hexagonkt.http.server.ServerPort import com.hexagonkt.http.server.jetty.JettyServletAdapter import com.hexagonkt.injection.InjectionManager.bindObject /** * Service server. It is created lazily to allow ServerPort injection (set up in main). */ val server : Server by lazy { Server { before { response . setHeader ( \"Date\" , httpDate ()) } get ( \"/hello/{name}\" ) { ok ( \"Hello, ${pathParameters[\" name \"]}!\" , \"text/plain\" ) } } } /** * Start the service from the command line. */ fun main () { bindObject < ServerPort >( JettyServletAdapter ()) // Bind Jetty server to HTTP Server Port server . start () }","title":"Hello World"},{"location":"#features","text":"Hexagon's high-level features. Simple to Use : Hexagon is focused in allowing you to use the features you use the most in your daily coding in the easiest way. Easy to Hack : The library is done to be lean and simple so you can tweak it to suit your needs instead relying on third parties. Pluggable Adapters : Adding an adapter is just implementing the port's interface. You can code your own adapters from scratch or tune the existing ones. Kotlin First : The library is coded in Kotlin for coding with Kotlin. No strings attached to Java (as a Language). Properly Tested : Project's coverage is checked in every Pull Request. It is also stress tested at TechEmpower Frameworks Benchmark . Modular : Each feature is isolated in its own module. Use only the modules you need without unneeded dependencies.","title":"Features"},{"location":"#architecture","text":"How Hexagon fits in your architecture in a picture.","title":"Architecture"},{"location":"#ports","text":"Ports with their provided implementations (Adapters). PORT ADAPTERS HTTP Server Jetty , Servlet Templates Pebble Serialization Formats JSON , YAML Settings Environment , Files , Resources","title":"Ports"},{"location":"api/","text":"Modules \u00b6 Core Scheduler Web Ports \u00b6 HTTP Server HTTP Client Store Messaging Templates Adapters \u00b6 HTTP Server \u00b6 Jetty Servlet HTTP Client \u00b6 Async HTTP Client Store \u00b6 MongoDB Messaging \u00b6 RabbitMQ Templates \u00b6 Pebble","title":"API"},{"location":"api/#modules","text":"Core Scheduler Web","title":"Modules"},{"location":"api/#ports","text":"HTTP Server HTTP Client Store Messaging Templates","title":"Ports"},{"location":"api/#adapters","text":"","title":"Adapters"},{"location":"api/#http-server","text":"Jetty Servlet","title":"HTTP Server"},{"location":"api/#http-client","text":"Async HTTP Client","title":"HTTP Client"},{"location":"api/#store","text":"MongoDB","title":"Store"},{"location":"api/#messaging","text":"RabbitMQ","title":"Messaging"},{"location":"api/#templates","text":"Pebble","title":"Templates"},{"location":"create_services/","text":"Cloning a Starter repository \u00b6 To create a new Hexagon service, you can clone a minimum running example using the Gradle Starter or the Maven Starter . From scratch \u00b6 You can write a Gradle project from scratch (Gradle 5.3 or newer is required) using the following build . gradle : plugins { id 'org.jetbrains.kotlin.jvm' version '1.3.50' } apply plugin: 'kotlin' apply plugin: 'application' mainClassName = 'HelloKt' repositories { jcenter () } dependencies { compile ( \"com.hexagonkt:http_server_jetty:$hexagonVersion\" ) } From a template \u00b6 You can create a service from a Lazybones template. To do so type: lazybones create hexagon - service srvName curl -s get.sdkman.io | bash && source ~/.sdkman/bin/sdkman-init.sh sdk i lazybones mkdir ~/.lazybones lazybones config set bintrayRepositories pledbrook/lazybones-templates jamming/maven lazybones create hexagon-service srvName -Pgroup = org.example -Pversion = 0 .1 -Pdescription = Description cd srvName ./gradlew","title":"Create Services"},{"location":"create_services/#cloning-a-starter-repository","text":"To create a new Hexagon service, you can clone a minimum running example using the Gradle Starter or the Maven Starter .","title":"Cloning a Starter repository"},{"location":"create_services/#from-scratch","text":"You can write a Gradle project from scratch (Gradle 5.3 or newer is required) using the following build . gradle : plugins { id 'org.jetbrains.kotlin.jvm' version '1.3.50' } apply plugin: 'kotlin' apply plugin: 'application' mainClassName = 'HelloKt' repositories { jcenter () } dependencies { compile ( \"com.hexagonkt:http_server_jetty:$hexagonVersion\" ) }","title":"From scratch"},{"location":"create_services/#from-a-template","text":"You can create a service from a Lazybones template. To do so type: lazybones create hexagon - service srvName curl -s get.sdkman.io | bash && source ~/.sdkman/bin/sdkman-init.sh sdk i lazybones mkdir ~/.lazybones lazybones config set bintrayRepositories pledbrook/lazybones-templates jamming/maven lazybones create hexagon-service srvName -Pgroup = org.example -Pversion = 0 .1 -Pdescription = Description cd srvName ./gradlew","title":"From a template"},{"location":"developer_guide/","text":"Toolkit Structure \u00b6 The project is composed by modules, each module provide a single functionality. There are three kind of modules: The ones that provide a functionality that does not depend on different implementations, like hexagon_scheduler or hexagon_core . Modules that define a \"Port\": these are interfaces to a feature that may have different implementations (ie: port_http_server or port_store ). They can not be used by themselves and in their place, an adapter implementing them should be added to the list of dependencies. Adapter modules, which are Port implementations for a given tool. store_mongodb and messaging_rabbitmq are examples of this type of modules. All ports are independent from each other. Some modules can depend on several Ports, however dependencies to Adapters won't be allowed. Hexagon Core \u00b6 The Hexagon Core module is used by all other libraries, so it would be added to your project anyway just by using any adapter. The main features it has are: Helpers : JVM information, a logger and other useful utilities. Dependency Injection : bind classes to creation closures or instances and inject them. Instance Serialization : parse/serialize data in different formats to class instances. Configuration Settings : load settings from different data sources and formats. Other Modules \u00b6 The following libraries provide extra features not bound to different implementations. They will not use dependencies outside the Hexagon toolkit. Scheduling : this module allows services to execute tasks periodically using Cron expressions. Toolkit Ports \u00b6 These modules define features that need an specific implementation. You can use many implementations of each port at the same time. You can even provide a custom implementations if you want to optimize a particular use case. These are the implemented ports: HTTP Server : describes how to use HTTP routing and HTML templates for Web services. HTTP Client : documentation to use the HTTP client module to connect to other services. Storage : gives an overview of how to store data using different data stores. Messaging : how to support asynchronous communication with messages through message brokers. Templates : describes how to render pages using template engines.","title":"Developer Guide"},{"location":"developer_guide/#toolkit-structure","text":"The project is composed by modules, each module provide a single functionality. There are three kind of modules: The ones that provide a functionality that does not depend on different implementations, like hexagon_scheduler or hexagon_core . Modules that define a \"Port\": these are interfaces to a feature that may have different implementations (ie: port_http_server or port_store ). They can not be used by themselves and in their place, an adapter implementing them should be added to the list of dependencies. Adapter modules, which are Port implementations for a given tool. store_mongodb and messaging_rabbitmq are examples of this type of modules. All ports are independent from each other. Some modules can depend on several Ports, however dependencies to Adapters won't be allowed.","title":"Toolkit Structure"},{"location":"developer_guide/#hexagon-core","text":"The Hexagon Core module is used by all other libraries, so it would be added to your project anyway just by using any adapter. The main features it has are: Helpers : JVM information, a logger and other useful utilities. Dependency Injection : bind classes to creation closures or instances and inject them. Instance Serialization : parse/serialize data in different formats to class instances. Configuration Settings : load settings from different data sources and formats.","title":"Hexagon Core"},{"location":"developer_guide/#other-modules","text":"The following libraries provide extra features not bound to different implementations. They will not use dependencies outside the Hexagon toolkit. Scheduling : this module allows services to execute tasks periodically using Cron expressions.","title":"Other Modules"},{"location":"developer_guide/#toolkit-ports","text":"These modules define features that need an specific implementation. You can use many implementations of each port at the same time. You can even provide a custom implementations if you want to optimize a particular use case. These are the implemented ports: HTTP Server : describes how to use HTTP routing and HTML templates for Web services. HTTP Client : documentation to use the HTTP client module to connect to other services. Storage : gives an overview of how to store data using different data stores. Messaging : how to support asynchronous communication with messages through message brokers. Templates : describes how to render pages using template engines.","title":"Toolkit Ports"},{"location":"examples/","text":"Todo-Backend \u00b6 Sample application for the Todo-Backend project which implements TodoMVC backends. You can check the code here . Real World \u00b6 Hexagon RealWorld demo backend implementation. The source code is available here . Benchmark \u00b6 This is an application for checking the TechEmpower Web Framework Benchmarks . It is an internal Hexagon module. You can find the code here . Flyhopper \u00b6 Example REST service using Ryanair's APIs. You can find the repository here . Gradle Starter \u00b6 Hexagon starter project using Gradle as the build tool. The source code is inside this GitHub repository . Maven Starter \u00b6 Hexagon example service built with Maven. The sources are located here .","title":"Examples"},{"location":"examples/#todo-backend","text":"Sample application for the Todo-Backend project which implements TodoMVC backends. You can check the code here .","title":"Todo-Backend"},{"location":"examples/#real-world","text":"Hexagon RealWorld demo backend implementation. The source code is available here .","title":"Real World"},{"location":"examples/#benchmark","text":"This is an application for checking the TechEmpower Web Framework Benchmarks . It is an internal Hexagon module. You can find the code here .","title":"Benchmark"},{"location":"examples/#flyhopper","text":"Example REST service using Ryanair's APIs. You can find the repository here .","title":"Flyhopper"},{"location":"examples/#gradle-starter","text":"Hexagon starter project using Gradle as the build tool. The source code is inside this GitHub repository .","title":"Gradle Starter"},{"location":"examples/#maven-starter","text":"Hexagon example service built with Maven. The sources are located here .","title":"Maven Starter"},{"location":"gradle/","text":"Build Variables \u00b6 The build process and imported build scripts (like the ones documented here) use variables to customize their behaviour. It is possible to add/change variables of a build from the following places: In the project's gradle . properties file. In your user's gradle configuration: ~/ . gradle / gradle . properties . Passing them from the command line with the following switch: - Pkey = val . Defining a project's extra property inside build . gradle . Ie: project . ext . key = 'val' . For examples and reference, check .travis.yml , build.gradle and gradle.properties . Helper scripts \u00b6 These scripts can be added to your build to include a whole new capability to your building logic. To use them, you can import the online versions, or copy them to your gradle directory before importing the script. You can import these scripts by adding add apply from : $ gradleScripts / $ script . gradle to your build . gradle file some of them may require additional plugins inside the plugins section in the root build . gradle . Check toolkit's build . gradle files for examples. Bintray \u00b6 This script setup the project/module for publishing in Bintray . It publishes all artifacts attached to the mavenJava publication (check kotlin.gradle publishing section) at the bare minimum binaries are published. For an Open Source project, you must include sources and javadoc also. To use it apply $ gradleScripts / bintray . gradle and add the id 'com.jfrog.bintray' version 'VERSION' plugin to the root build . gradle . To setup this script's parameters, check the build variables section . This helper settings are: bintrayKey (REQUIRED): if not defined will try to load BINTRAY_KEY environment variable. bintrayUser (REQUIRED): or BINTRAY_USER environment variable if not defined. bintrayRepo (REQUIRED): Bintray's repository to upload the artifacts. license (REQUIRED): the license used to publish in Bintray. vcsUrl (REQUIRED): code repository location. Dokka \u00b6 This script setup Dokka tool and add a JAR with the project's code documentation to the published JARs. All modules' Markdown files are added to the documentation and test classes ending in SamplesTest are available to be referenced as samples. To use it apply $ gradleScripts / dokka . gradle and add the id 'org.jetbrains.dokka' version 'VERSION' plugin to the root build . gradle . The format for the generated documentation will be javadoc to make it compatible with current IDEs. Icons \u00b6 Create web icons (favicon and thumbnails for browsers/mobile) from image SVGs (logos). For image rendering you will need rsvg (librsvg2-bin) and imagemagick installed in the development machine. To use it apply $ gradleScripts / icons . gradle to your build . gradle . To setup this script's parameters, check the build variables section . This helper settings are: logoSmall (REQUIRED): SVG file used to render the small logo. Used for the favicon. logoLarge (REQUIRED): SVG file used to render the large logo. logoWide (REQUIRED): SVG file used to render the wide logo. Used for MS Windows tiles. JMH \u00b6 This scripts adds support for running JMH micro benchmarks . To use it apply $ gradleScripts / jmh . gradle and add the id 'me.champeau.gradle.jmh' version 'VERSION' plugin to the root build . gradle . To setup this script's parameters, check the build variables section . This helper settings are: jmhBenchmarkVersion: JMH version. The default is 1.21. iterations (REQUIRED): number of measurement iterations to do. benchmarkModes (REQUIRED): benchmark mode. Available modes are: Throughput/thrpt, AverageTime/avgt, SampleTime/sample, SingleShotTime/ss, All/all batchSize (REQUIRED): number of benchmark method calls per operation (some benchmark modes can ignore this setting). fork (REQUIRED): how many times to forks a single benchmark. Use 0 to disable forking altogether. operationsPerInvocation (REQUIRED): operations per invocation. timeOnIteration (REQUIRED): time to spend at each measurement iteration. warmup (REQUIRED): time to spend at each warmup iteration. warmupBatchSize (REQUIRED): number of benchmark method calls per operation. warmupIterations (REQUIRED): number of warmup iterations to do. Sample benchmark code: import org.openjdk.jmh.annotations.Benchmark open class Benchmark { @Benchmark fun foo () { println ( \"foo bench\" ) Thread . sleep ( 100L ) } @Benchmark fun bar () { println ( \"bar bench\" ) Thread . sleep ( 100L ) } } JUnit \u00b6 Uses JUnit 5 as the test framework. To use it apply $ gradleScripts / junit . gradle to your build . gradle . To setup this script's parameters, check the build variables section . This helper settings are: junitVersion: JUnit version (5+), the default value is: 5.5.1. Kotlin \u00b6 Adds Kotlin's Gradle plugin. It sets up: Java version Repositories Kotlin dependencies Resource processing (replacing build variables) Cleaning (deleting runtime files as logs and dump files) Tests (pass properties, output and mocks) Setup coverage report IDE settings for IntelliJ and Eclipse (download dependencies' sources and API documentation) Published artifacts (binaries, sources and test): sourceJar and testJar tasks Jar with dependencies: jarAll task To use it apply $ gradleScripts / kotlin . gradle and add the id 'org.jetbrains.kotlin.jvm' version 'VERSION' plugin to the root build . gradle . To setup this script's parameters, check the build variables section . This helper settings are: kotlinVersion (REQUIRED): Kotlin version. kotlinCoroutinesVersion (REQUIRED): Kotlin coroutines version. mockkVersion: MockK mocking library version. If no value is supplied, version 1.9.3 is taken. jacocoVersion: Jacoco code coverage tool version. Kotlin JS \u00b6 This script provides the following tasks for compiling Kotlin to JavaScript: jsAll : compiles the project to JavaScript including all of its dependencies. It copies all the resulting files to build / js . assembleWeb : copies all project resources and JavaScript files to build / web . IMPORTANT: This script must be applied at the end of the build script. To use it apply $ gradleScripts / kotlin_js . gradle at the end of the build script, also apply the kotlin2js plugin. And finally, add the id 'org.jetbrains.kotlin.jvm' version 'VERSION' plugin to the root build . gradle . Applying this script at the beginning won't work until it allows dependencies to be merged (a bug). To setup this script's parameters, check the build variables section . This helper settings are: javaScriptDirectory: JavaScript directory inside the web directory. By default it is: \"js\". Service \u00b6 Gradle's script for a service or application. It adds two extra tasks: buildInfo: add configuration file ( service . properties ) with build variables to the package. serve: Run the service in another thread. This allow the possibility to 'watch' source changes. To run the services and watch for changes you need to execute this task with the --continuous ( - t ) Gradle flag. Ie: gw - t serve . To use it apply $ gradleScripts / service . gradle to your build . gradle . JBake \u00b6 Adds support for site generation using JBake . To generate the site execute: gw bake and to test it run: gw bakePreview . The preview site will be served at: http://localhost:8888 . You can change the port defining the sitePort variable inside gradle . properties . To use it apply $ gradleScripts / jbake . gradle and add the id 'org.jbake.site' version 'VERSION' plugin to the root build . gradle . JBake content folder can not be changed (it seems a bug). To generate clean URLs, add the following settings: configuration [ 'uri.noExtension' ] = true configuration [ 'uri.noExtension.prefix' ] = '/' To setup this script's parameters, check the build variables section . This helper settings are: siteHost: site canonical URL, by default it is: \"\". configData: JBake settings map. It is an empty map by default. jbakeVersion: JBake version. By default: \"2.6.4\". sitePort: preview site port for development. It is \"8888\" if not set. SonarQube \u00b6 Set up the project to be analyzed by the SonarQube instance running in the cloud . To use it apply $ gradleScripts / sonarqube . gradle and add the id 'org.sonarqube' version 'VERSION' plugin to the root build . gradle . To setup this script's parameters, check the build variables section . This helper settings are: sonarqubeProject (REQUIRED): ID used to locate the project in SonarQube host. sonarqubeOrganization (REQUIRED): organization owning the project. sonarqubeHost: SonarQube server to be used. By default it is: https : // sonarcloud . io . sonarqubeToken (REQUIRED): If not set, the SONARQUBE_TOKEN environment variable will be used. TestNG \u00b6 Uses TestNG as the test framework. To use it apply $ gradleScripts / testng . gradle to your build . gradle . To setup this script's parameters, check the build variables section . This helper settings are: testngVersion: TestNG version, the default value is: 6.14.3.","title":"Gradle Helpers"},{"location":"gradle/#build-variables","text":"The build process and imported build scripts (like the ones documented here) use variables to customize their behaviour. It is possible to add/change variables of a build from the following places: In the project's gradle . properties file. In your user's gradle configuration: ~/ . gradle / gradle . properties . Passing them from the command line with the following switch: - Pkey = val . Defining a project's extra property inside build . gradle . Ie: project . ext . key = 'val' . For examples and reference, check .travis.yml , build.gradle and gradle.properties .","title":"Build Variables"},{"location":"gradle/#helper-scripts","text":"These scripts can be added to your build to include a whole new capability to your building logic. To use them, you can import the online versions, or copy them to your gradle directory before importing the script. You can import these scripts by adding add apply from : $ gradleScripts / $ script . gradle to your build . gradle file some of them may require additional plugins inside the plugins section in the root build . gradle . Check toolkit's build . gradle files for examples.","title":"Helper scripts"},{"location":"gradle/#bintray","text":"This script setup the project/module for publishing in Bintray . It publishes all artifacts attached to the mavenJava publication (check kotlin.gradle publishing section) at the bare minimum binaries are published. For an Open Source project, you must include sources and javadoc also. To use it apply $ gradleScripts / bintray . gradle and add the id 'com.jfrog.bintray' version 'VERSION' plugin to the root build . gradle . To setup this script's parameters, check the build variables section . This helper settings are: bintrayKey (REQUIRED): if not defined will try to load BINTRAY_KEY environment variable. bintrayUser (REQUIRED): or BINTRAY_USER environment variable if not defined. bintrayRepo (REQUIRED): Bintray's repository to upload the artifacts. license (REQUIRED): the license used to publish in Bintray. vcsUrl (REQUIRED): code repository location.","title":"Bintray"},{"location":"gradle/#dokka","text":"This script setup Dokka tool and add a JAR with the project's code documentation to the published JARs. All modules' Markdown files are added to the documentation and test classes ending in SamplesTest are available to be referenced as samples. To use it apply $ gradleScripts / dokka . gradle and add the id 'org.jetbrains.dokka' version 'VERSION' plugin to the root build . gradle . The format for the generated documentation will be javadoc to make it compatible with current IDEs.","title":"Dokka"},{"location":"gradle/#icons","text":"Create web icons (favicon and thumbnails for browsers/mobile) from image SVGs (logos). For image rendering you will need rsvg (librsvg2-bin) and imagemagick installed in the development machine. To use it apply $ gradleScripts / icons . gradle to your build . gradle . To setup this script's parameters, check the build variables section . This helper settings are: logoSmall (REQUIRED): SVG file used to render the small logo. Used for the favicon. logoLarge (REQUIRED): SVG file used to render the large logo. logoWide (REQUIRED): SVG file used to render the wide logo. Used for MS Windows tiles.","title":"Icons"},{"location":"gradle/#jmh","text":"This scripts adds support for running JMH micro benchmarks . To use it apply $ gradleScripts / jmh . gradle and add the id 'me.champeau.gradle.jmh' version 'VERSION' plugin to the root build . gradle . To setup this script's parameters, check the build variables section . This helper settings are: jmhBenchmarkVersion: JMH version. The default is 1.21. iterations (REQUIRED): number of measurement iterations to do. benchmarkModes (REQUIRED): benchmark mode. Available modes are: Throughput/thrpt, AverageTime/avgt, SampleTime/sample, SingleShotTime/ss, All/all batchSize (REQUIRED): number of benchmark method calls per operation (some benchmark modes can ignore this setting). fork (REQUIRED): how many times to forks a single benchmark. Use 0 to disable forking altogether. operationsPerInvocation (REQUIRED): operations per invocation. timeOnIteration (REQUIRED): time to spend at each measurement iteration. warmup (REQUIRED): time to spend at each warmup iteration. warmupBatchSize (REQUIRED): number of benchmark method calls per operation. warmupIterations (REQUIRED): number of warmup iterations to do. Sample benchmark code: import org.openjdk.jmh.annotations.Benchmark open class Benchmark { @Benchmark fun foo () { println ( \"foo bench\" ) Thread . sleep ( 100L ) } @Benchmark fun bar () { println ( \"bar bench\" ) Thread . sleep ( 100L ) } }","title":"JMH"},{"location":"gradle/#junit","text":"Uses JUnit 5 as the test framework. To use it apply $ gradleScripts / junit . gradle to your build . gradle . To setup this script's parameters, check the build variables section . This helper settings are: junitVersion: JUnit version (5+), the default value is: 5.5.1.","title":"JUnit"},{"location":"gradle/#kotlin","text":"Adds Kotlin's Gradle plugin. It sets up: Java version Repositories Kotlin dependencies Resource processing (replacing build variables) Cleaning (deleting runtime files as logs and dump files) Tests (pass properties, output and mocks) Setup coverage report IDE settings for IntelliJ and Eclipse (download dependencies' sources and API documentation) Published artifacts (binaries, sources and test): sourceJar and testJar tasks Jar with dependencies: jarAll task To use it apply $ gradleScripts / kotlin . gradle and add the id 'org.jetbrains.kotlin.jvm' version 'VERSION' plugin to the root build . gradle . To setup this script's parameters, check the build variables section . This helper settings are: kotlinVersion (REQUIRED): Kotlin version. kotlinCoroutinesVersion (REQUIRED): Kotlin coroutines version. mockkVersion: MockK mocking library version. If no value is supplied, version 1.9.3 is taken. jacocoVersion: Jacoco code coverage tool version.","title":"Kotlin"},{"location":"gradle/#kotlin-js","text":"This script provides the following tasks for compiling Kotlin to JavaScript: jsAll : compiles the project to JavaScript including all of its dependencies. It copies all the resulting files to build / js . assembleWeb : copies all project resources and JavaScript files to build / web . IMPORTANT: This script must be applied at the end of the build script. To use it apply $ gradleScripts / kotlin_js . gradle at the end of the build script, also apply the kotlin2js plugin. And finally, add the id 'org.jetbrains.kotlin.jvm' version 'VERSION' plugin to the root build . gradle . Applying this script at the beginning won't work until it allows dependencies to be merged (a bug). To setup this script's parameters, check the build variables section . This helper settings are: javaScriptDirectory: JavaScript directory inside the web directory. By default it is: \"js\".","title":"Kotlin JS"},{"location":"gradle/#service","text":"Gradle's script for a service or application. It adds two extra tasks: buildInfo: add configuration file ( service . properties ) with build variables to the package. serve: Run the service in another thread. This allow the possibility to 'watch' source changes. To run the services and watch for changes you need to execute this task with the --continuous ( - t ) Gradle flag. Ie: gw - t serve . To use it apply $ gradleScripts / service . gradle to your build . gradle .","title":"Service"},{"location":"gradle/#jbake","text":"Adds support for site generation using JBake . To generate the site execute: gw bake and to test it run: gw bakePreview . The preview site will be served at: http://localhost:8888 . You can change the port defining the sitePort variable inside gradle . properties . To use it apply $ gradleScripts / jbake . gradle and add the id 'org.jbake.site' version 'VERSION' plugin to the root build . gradle . JBake content folder can not be changed (it seems a bug). To generate clean URLs, add the following settings: configuration [ 'uri.noExtension' ] = true configuration [ 'uri.noExtension.prefix' ] = '/' To setup this script's parameters, check the build variables section . This helper settings are: siteHost: site canonical URL, by default it is: \"\". configData: JBake settings map. It is an empty map by default. jbakeVersion: JBake version. By default: \"2.6.4\". sitePort: preview site port for development. It is \"8888\" if not set.","title":"JBake"},{"location":"gradle/#sonarqube","text":"Set up the project to be analyzed by the SonarQube instance running in the cloud . To use it apply $ gradleScripts / sonarqube . gradle and add the id 'org.sonarqube' version 'VERSION' plugin to the root build . gradle . To setup this script's parameters, check the build variables section . This helper settings are: sonarqubeProject (REQUIRED): ID used to locate the project in SonarQube host. sonarqubeOrganization (REQUIRED): organization owning the project. sonarqubeHost: SonarQube server to be used. By default it is: https : // sonarcloud . io . sonarqubeToken (REQUIRED): If not set, the SONARQUBE_TOKEN environment variable will be used.","title":"SonarQube"},{"location":"gradle/#testng","text":"Uses TestNG as the test framework. To use it apply $ gradleScripts / testng . gradle to your build . gradle . To setup this script's parameters, check the build variables section . This helper settings are: testngVersion: TestNG version, the default value is: 6.14.3.","title":"TestNG"},{"location":"help/","text":"Support \u00b6 Please check if your issue already exists at the project board or issues list before creating a new one. To notify bugs create a new bug issue using Github. You can request a new feature using the new feature Github template. If you want to prioritize issues, add the reaction on them. Help \u00b6 You can use Slack for questions, comments, etc. you can also create a Github issue tagged as question.","title":"Help and Support"},{"location":"help/#support","text":"Please check if your issue already exists at the project board or issues list before creating a new one. To notify bugs create a new bug issue using Github. You can request a new feature using the new feature Github template. If you want to prioritize issues, add the reaction on them.","title":"Support"},{"location":"help/#help","text":"You can use Slack for questions, comments, etc. you can also create a Github issue tagged as question.","title":"Help"},{"location":"quick_start/","text":"Simple HTTP service \u00b6 In this guide, we are going to create a sample HTTP service. You can read the Core or HTTP Server modules documentation for more information. You can start by cloning a starter project ( Gradle Starter or Maven Starter ). Or you can create a project from scratch following these steps: Configure Kotlin in Gradle or Maven . Setup the JCenter repository (follow the link and click on the Set me up ! button). Add the dependency in Gradle or Maven : build.gradle implementation ( \"com.hexagonkt:http_server_jetty:$hexagonVersion\" ) pom.xml <dependency> <groupId> com.hexagonkt </groupId> <artifactId> http_server_jetty </artifactId> <version> $hexagonVersion </version> </dependency> Write the code in the src / main / kotlin / Hello . kt file: import com.hexagonkt.http.httpDate import com.hexagonkt.http.server.Server import com.hexagonkt.http.server.ServerPort import com.hexagonkt.http.server.jetty.JettyServletAdapter import com.hexagonkt.injection.InjectionManager.bindObject /** * Service server. It is created lazily to allow ServerPort injection (set up in main). */ val server : Server by lazy { Server { before { response . setHeader ( \"Date\" , httpDate ()) } get ( \"/hello/{name}\" ) { ok ( \"Hello, ${pathParameters[\" name \"]}!\" , \"text/plain\" ) } } } /** * Start the service from the command line. */ fun main () { bindObject < ServerPort >( JettyServletAdapter ()) // Bind Jetty server to HTTP Server Port server . start () } Run the service and view the results at: http://localhost:2010/hello/world You can check the Developer Guide for more details. Or you can clone the Gradle Starter or Maven Starter for a minimal fully working example (including tests). Books Example \u00b6 A simple CRUD example showing how to manage book resources. Here you can check the full test . data class Book ( val author : String , val title : String ) private val books : MutableMap < Int , Book > = linkedMapOf ( 100 to Book ( \"Miguel de Cervantes\" , \"Don Quixote\" ), 101 to Book ( \"William Shakespeare\" , \"Hamlet\" ), 102 to Book ( \"Homer\" , \"The Odyssey\" ) ) val server : Server by lazy { Server ( adapter ) { post ( \"/books\" ) { // Require fails if parameter does not exists val author = queryParameters . require ( \"author\" ). first () val title = queryParameters . require ( \"title\" ). first () val id = ( books . keys . max () ?: 0 ) + 1 books += id to Book ( author , title ) send ( 201 , id ) } get ( \"/books/{id}\" ) { // Path parameters *must* exist an error is thrown if they are not present val bookId = pathParameters [ \"id\" ]. toInt () val book = books [ bookId ] if ( book != null ) // ok() is a shortcut to send(200) ok ( \"Title: ${book.title}, Author: ${book.author}\" ) else send ( 404 , \"Book not found\" ) } put ( \"/books/{id}\" ) { val bookId = pathParameters [ \"id\" ]. toInt () val book = books [ bookId ] if ( book != null ) { books += bookId to book . copy ( author = queryParameters [ \"author\" ] ?. first () ?: book . author , title = queryParameters [ \"title\" ] ?. first () ?: book . title ) ok ( \"Book with id '$bookId' updated\" ) } else { send ( 404 , \"Book not found\" ) } } delete ( \"/books/{id}\" ) { val bookId = pathParameters [ \"id\" ]. toInt () val book = books [ bookId ] books -= bookId if ( book != null ) ok ( \"Book with id '$bookId' deleted\" ) else send ( 404 , \"Book not found\" ) } // Matches path's requests with *any* HTTP method as a fallback (return 404 instead 405) any ( \"/books/{id}\" ) { send ( 405 ) } get ( \"/books\" ) { ok ( books . keys . joinToString ( \" \" , transform = Int :: toString )) } } } Session Example \u00b6 Example showing how to use sessions. Here you can check the full test . val server : Server by lazy { Server ( adapter ) { path ( \"/session\" ) { get ( \"/id\" ) { ok ( session . id ?: \"null\" ) } get ( \"/access\" ) { ok ( session . lastAccessedTime ?. toString () ?: \"null\" ) } get ( \"/new\" ) { ok ( session . isNew ()) } path ( \"/inactive\" ) { get { ok ( session . maxInactiveInterval ?: \"null\" ) } put ( \"/{time}\" ) { session . maxInactiveInterval = pathParameters [ \"time\" ]. toInt () } } get ( \"/creation\" ) { ok ( session . creationTime ?: \"null\" ) } post ( \"/invalidate\" ) { session . invalidate () } path ( \"/{key}\" ) { put ( \"/{value}\" ) { session . set ( pathParameters [ \"key\" ], pathParameters [ \"value\" ]) } get { ok ( session . get ( pathParameters [ \"key\" ]). toString ()) } delete { session . remove ( pathParameters [ \"key\" ]) } } get { val attributes = session . attributes val attributeTexts = attributes . entries . map { it . key + \" : \" + it . value } response . setHeader ( \"attributes\" , attributeTexts . joinToString ( \", \" )) response . setHeader ( \"attribute values\" , attributes . values . joinToString ( \", \" )) response . setHeader ( \"attribute names\" , attributes . keys . joinToString ( \", \" )) response . setHeader ( \"creation\" , session . creationTime . toString ()) response . setHeader ( \"id\" , session . id ?: \"\" ) response . setHeader ( \"last access\" , session . lastAccessedTime . toString ()) response . status = 200 } } } } Cookies Example \u00b6 Demo server to show the use of cookies. Here you can check the full test . val server : Server by lazy { Server ( adapter ) { post ( \"/assertNoCookies\" ) { if ( request . cookies . isNotEmpty ()) halt ( 500 ) } post ( \"/addCookie\" ) { val name = queryParameters [ \"cookieName\" ] ?. first () val value = queryParameters [ \"cookieValue\" ] ?. first () response . addCookie ( HttpCookie ( name , value )) } post ( \"/assertHasCookie\" ) { val cookieName = queryParameters . require ( \"cookieName\" ). first () val cookieValue = request . cookies [ cookieName ] ?. value if ( queryParameters [ \"cookieValue\" ] ?. first () != cookieValue ) halt ( 500 ) } post ( \"/removeCookie\" ) { response . removeCookie ( queryParameters . require ( \"cookieName\" ). first ()) } } } Error Handling Example \u00b6 Code to show how to handle callback exceptions and HTTP error codes. Here you can check the full test . class CustomException : IllegalArgumentException () val server : Server by lazy { Server ( adapter ) { error ( UnsupportedOperationException :: class ) { response . setHeader ( \"error\" , it . message ?: it . javaClass . name ) send ( 599 , \"Unsupported\" ) } error ( IllegalArgumentException :: class ) { response . setHeader ( \"runtimeError\" , it . message ?: it . javaClass . name ) send ( 598 , \"Runtime\" ) } // Catching `Exception` handles any unhandled exception before (it has to be the last) error ( Exception :: class ) { send ( 500 , \"Root handler\" ) } // It is possible to execute a handler upon a given status code before returning error ( 588 ) { send ( 578 , \"588 -> 578\" ) } get ( \"/exception\" ) { throw UnsupportedOperationException ( \"error message\" ) } get ( \"/baseException\" ) { throw CustomException () } get ( \"/unhandledException\" ) { error ( \"error message\" ) } get ( \"/halt\" ) { halt ( \"halted\" ) } get ( \"/588\" ) { halt ( 588 ) } } } Filters Example \u00b6 This example shows how to add filters before and after route execution. Here you can check the full test . private val users : Map < String , String > = mapOf ( \"Turing\" to \"London\" , \"Dijkstra\" to \"Rotterdam\" ) private val server : Server by lazy { Server ( adapter ) { before { attributes [ \"start\" ] = nanoTime () } before ( \"/protected/*\" ) { val authorization = request . headers [ \"Authorization\" ] ?: halt ( 401 , \"Unauthorized\" ) val credentials = authorization . first (). removePrefix ( \"Basic \" ) val userPassword = String ( Base64 . getDecoder (). decode ( credentials )). split ( \":\" ) // Parameters set in call attributes are accessible in other filters and routes attributes [ \"username\" ] = userPassword [ 0 ] attributes [ \"password\" ] = userPassword [ 1 ] } // All matching filters are run in order unless call is halted before ( \"/protected/*\" ) { if ( users [ attributes [ \"username\" ]] != attributes [ \"password\" ]) halt ( 403 , \"Forbidden\" ) } get ( \"/protected/hi\" ) { ok ( \"Hello ${attributes[\" username \"]}!\" ) } // After filters are ran even if request was halted before after { response . setHeader ( \"time\" , nanoTime () - attributes [ \"start\" ] as Long ) } } } Files Example \u00b6 The following code shows how to serve resources and receive files. Here you can check the full test . private val server : Server by lazy { Server ( adapter ) { path ( \"/static\" ) { get ( \"/files/*\" , Resource ( \"assets\" )) // Serve `assets` resources on `/html/*` get ( \"/resources/*\" , File ( directory )) // Serve `test` folder on `/pub/*` } get ( \"/html/*\" , Resource ( \"assets\" )) // Serve `assets` resources on `/html/*` get ( \"/pub/*\" , File ( directory )) // Serve `test` folder on `/pub/*` get ( Resource ( \"public\" )) // Serve `public` resources folder on `/*` post ( \"/multipart\" ) { ok ( request . parts . keys . joinToString ( \":\" )) } post ( \"/file\" ) { val part = request . parts . values . first () val content = part . inputStream . reader (). readText () ok ( content ) } post ( \"/form\" ) { fun serializeMap ( map : Map < String , List < String >>): List < String > = listOf ( map . map { \"${it.key}:${it.value.joinToString(\" , \")}}\" }. joinToString ( \"\\n\" ) ) val queryParams = serializeMap ( queryParameters ) val formParams = serializeMap ( formParameters ) val params = serializeMap ( parameters ) response . headers [ \"queryParams\" ] = queryParams response . headers [ \"formParams\" ] = formParams response . headers [ \"params\" ] = params } } } CORS Example \u00b6 This example shows how to set up CORS for REST APIs used from the browser. Here you can check the full test . val server : Server by lazy { Server ( adapter ) { corsPath ( \"/default\" , CorsSettings ()) corsPath ( \"/example/org\" , CorsSettings ( \"example.org\" )) corsPath ( \"/no/credentials\" , CorsSettings ( supportCredentials = false )) corsPath ( \"/only/post\" , CorsSettings ( allowedMethods = setOf ( POST ))) corsPath ( \"/cache\" , CorsSettings ( preFlightMaxAge = 10 )) corsPath ( \"/exposed/headers\" , CorsSettings ( exposedHeaders = setOf ( \"head\" ))) corsPath ( \"/allowed/headers\" , CorsSettings ( allowedHeaders = setOf ( \"head\" ))) } } private fun Router . corsPath ( path : String , settings : CorsSettings ) { path ( path ) { // CORS settings can change for different routes cors ( settings ) get ( \"/path\" ) { ok ( request . method ) } post ( \"/path\" ) { ok ( request . method ) } put ( \"/path\" ) { ok ( request . method ) } delete ( \"/path\" ) { ok ( request . method ) } get { ok ( request . method ) } post { ok ( request . method ) } put { ok ( request . method ) } delete { ok ( request . method ) } } }","title":"Quick Start"},{"location":"quick_start/#simple-http-service","text":"In this guide, we are going to create a sample HTTP service. You can read the Core or HTTP Server modules documentation for more information. You can start by cloning a starter project ( Gradle Starter or Maven Starter ). Or you can create a project from scratch following these steps: Configure Kotlin in Gradle or Maven . Setup the JCenter repository (follow the link and click on the Set me up ! button). Add the dependency in Gradle or Maven : build.gradle implementation ( \"com.hexagonkt:http_server_jetty:$hexagonVersion\" ) pom.xml <dependency> <groupId> com.hexagonkt </groupId> <artifactId> http_server_jetty </artifactId> <version> $hexagonVersion </version> </dependency> Write the code in the src / main / kotlin / Hello . kt file: import com.hexagonkt.http.httpDate import com.hexagonkt.http.server.Server import com.hexagonkt.http.server.ServerPort import com.hexagonkt.http.server.jetty.JettyServletAdapter import com.hexagonkt.injection.InjectionManager.bindObject /** * Service server. It is created lazily to allow ServerPort injection (set up in main). */ val server : Server by lazy { Server { before { response . setHeader ( \"Date\" , httpDate ()) } get ( \"/hello/{name}\" ) { ok ( \"Hello, ${pathParameters[\" name \"]}!\" , \"text/plain\" ) } } } /** * Start the service from the command line. */ fun main () { bindObject < ServerPort >( JettyServletAdapter ()) // Bind Jetty server to HTTP Server Port server . start () } Run the service and view the results at: http://localhost:2010/hello/world You can check the Developer Guide for more details. Or you can clone the Gradle Starter or Maven Starter for a minimal fully working example (including tests).","title":"Simple HTTP service"},{"location":"quick_start/#books-example","text":"A simple CRUD example showing how to manage book resources. Here you can check the full test . data class Book ( val author : String , val title : String ) private val books : MutableMap < Int , Book > = linkedMapOf ( 100 to Book ( \"Miguel de Cervantes\" , \"Don Quixote\" ), 101 to Book ( \"William Shakespeare\" , \"Hamlet\" ), 102 to Book ( \"Homer\" , \"The Odyssey\" ) ) val server : Server by lazy { Server ( adapter ) { post ( \"/books\" ) { // Require fails if parameter does not exists val author = queryParameters . require ( \"author\" ). first () val title = queryParameters . require ( \"title\" ). first () val id = ( books . keys . max () ?: 0 ) + 1 books += id to Book ( author , title ) send ( 201 , id ) } get ( \"/books/{id}\" ) { // Path parameters *must* exist an error is thrown if they are not present val bookId = pathParameters [ \"id\" ]. toInt () val book = books [ bookId ] if ( book != null ) // ok() is a shortcut to send(200) ok ( \"Title: ${book.title}, Author: ${book.author}\" ) else send ( 404 , \"Book not found\" ) } put ( \"/books/{id}\" ) { val bookId = pathParameters [ \"id\" ]. toInt () val book = books [ bookId ] if ( book != null ) { books += bookId to book . copy ( author = queryParameters [ \"author\" ] ?. first () ?: book . author , title = queryParameters [ \"title\" ] ?. first () ?: book . title ) ok ( \"Book with id '$bookId' updated\" ) } else { send ( 404 , \"Book not found\" ) } } delete ( \"/books/{id}\" ) { val bookId = pathParameters [ \"id\" ]. toInt () val book = books [ bookId ] books -= bookId if ( book != null ) ok ( \"Book with id '$bookId' deleted\" ) else send ( 404 , \"Book not found\" ) } // Matches path's requests with *any* HTTP method as a fallback (return 404 instead 405) any ( \"/books/{id}\" ) { send ( 405 ) } get ( \"/books\" ) { ok ( books . keys . joinToString ( \" \" , transform = Int :: toString )) } } }","title":"Books Example"},{"location":"quick_start/#session-example","text":"Example showing how to use sessions. Here you can check the full test . val server : Server by lazy { Server ( adapter ) { path ( \"/session\" ) { get ( \"/id\" ) { ok ( session . id ?: \"null\" ) } get ( \"/access\" ) { ok ( session . lastAccessedTime ?. toString () ?: \"null\" ) } get ( \"/new\" ) { ok ( session . isNew ()) } path ( \"/inactive\" ) { get { ok ( session . maxInactiveInterval ?: \"null\" ) } put ( \"/{time}\" ) { session . maxInactiveInterval = pathParameters [ \"time\" ]. toInt () } } get ( \"/creation\" ) { ok ( session . creationTime ?: \"null\" ) } post ( \"/invalidate\" ) { session . invalidate () } path ( \"/{key}\" ) { put ( \"/{value}\" ) { session . set ( pathParameters [ \"key\" ], pathParameters [ \"value\" ]) } get { ok ( session . get ( pathParameters [ \"key\" ]). toString ()) } delete { session . remove ( pathParameters [ \"key\" ]) } } get { val attributes = session . attributes val attributeTexts = attributes . entries . map { it . key + \" : \" + it . value } response . setHeader ( \"attributes\" , attributeTexts . joinToString ( \", \" )) response . setHeader ( \"attribute values\" , attributes . values . joinToString ( \", \" )) response . setHeader ( \"attribute names\" , attributes . keys . joinToString ( \", \" )) response . setHeader ( \"creation\" , session . creationTime . toString ()) response . setHeader ( \"id\" , session . id ?: \"\" ) response . setHeader ( \"last access\" , session . lastAccessedTime . toString ()) response . status = 200 } } } }","title":"Session Example"},{"location":"quick_start/#cookies-example","text":"Demo server to show the use of cookies. Here you can check the full test . val server : Server by lazy { Server ( adapter ) { post ( \"/assertNoCookies\" ) { if ( request . cookies . isNotEmpty ()) halt ( 500 ) } post ( \"/addCookie\" ) { val name = queryParameters [ \"cookieName\" ] ?. first () val value = queryParameters [ \"cookieValue\" ] ?. first () response . addCookie ( HttpCookie ( name , value )) } post ( \"/assertHasCookie\" ) { val cookieName = queryParameters . require ( \"cookieName\" ). first () val cookieValue = request . cookies [ cookieName ] ?. value if ( queryParameters [ \"cookieValue\" ] ?. first () != cookieValue ) halt ( 500 ) } post ( \"/removeCookie\" ) { response . removeCookie ( queryParameters . require ( \"cookieName\" ). first ()) } } }","title":"Cookies Example"},{"location":"quick_start/#error-handling-example","text":"Code to show how to handle callback exceptions and HTTP error codes. Here you can check the full test . class CustomException : IllegalArgumentException () val server : Server by lazy { Server ( adapter ) { error ( UnsupportedOperationException :: class ) { response . setHeader ( \"error\" , it . message ?: it . javaClass . name ) send ( 599 , \"Unsupported\" ) } error ( IllegalArgumentException :: class ) { response . setHeader ( \"runtimeError\" , it . message ?: it . javaClass . name ) send ( 598 , \"Runtime\" ) } // Catching `Exception` handles any unhandled exception before (it has to be the last) error ( Exception :: class ) { send ( 500 , \"Root handler\" ) } // It is possible to execute a handler upon a given status code before returning error ( 588 ) { send ( 578 , \"588 -> 578\" ) } get ( \"/exception\" ) { throw UnsupportedOperationException ( \"error message\" ) } get ( \"/baseException\" ) { throw CustomException () } get ( \"/unhandledException\" ) { error ( \"error message\" ) } get ( \"/halt\" ) { halt ( \"halted\" ) } get ( \"/588\" ) { halt ( 588 ) } } }","title":"Error Handling Example"},{"location":"quick_start/#filters-example","text":"This example shows how to add filters before and after route execution. Here you can check the full test . private val users : Map < String , String > = mapOf ( \"Turing\" to \"London\" , \"Dijkstra\" to \"Rotterdam\" ) private val server : Server by lazy { Server ( adapter ) { before { attributes [ \"start\" ] = nanoTime () } before ( \"/protected/*\" ) { val authorization = request . headers [ \"Authorization\" ] ?: halt ( 401 , \"Unauthorized\" ) val credentials = authorization . first (). removePrefix ( \"Basic \" ) val userPassword = String ( Base64 . getDecoder (). decode ( credentials )). split ( \":\" ) // Parameters set in call attributes are accessible in other filters and routes attributes [ \"username\" ] = userPassword [ 0 ] attributes [ \"password\" ] = userPassword [ 1 ] } // All matching filters are run in order unless call is halted before ( \"/protected/*\" ) { if ( users [ attributes [ \"username\" ]] != attributes [ \"password\" ]) halt ( 403 , \"Forbidden\" ) } get ( \"/protected/hi\" ) { ok ( \"Hello ${attributes[\" username \"]}!\" ) } // After filters are ran even if request was halted before after { response . setHeader ( \"time\" , nanoTime () - attributes [ \"start\" ] as Long ) } } }","title":"Filters Example"},{"location":"quick_start/#files-example","text":"The following code shows how to serve resources and receive files. Here you can check the full test . private val server : Server by lazy { Server ( adapter ) { path ( \"/static\" ) { get ( \"/files/*\" , Resource ( \"assets\" )) // Serve `assets` resources on `/html/*` get ( \"/resources/*\" , File ( directory )) // Serve `test` folder on `/pub/*` } get ( \"/html/*\" , Resource ( \"assets\" )) // Serve `assets` resources on `/html/*` get ( \"/pub/*\" , File ( directory )) // Serve `test` folder on `/pub/*` get ( Resource ( \"public\" )) // Serve `public` resources folder on `/*` post ( \"/multipart\" ) { ok ( request . parts . keys . joinToString ( \":\" )) } post ( \"/file\" ) { val part = request . parts . values . first () val content = part . inputStream . reader (). readText () ok ( content ) } post ( \"/form\" ) { fun serializeMap ( map : Map < String , List < String >>): List < String > = listOf ( map . map { \"${it.key}:${it.value.joinToString(\" , \")}}\" }. joinToString ( \"\\n\" ) ) val queryParams = serializeMap ( queryParameters ) val formParams = serializeMap ( formParameters ) val params = serializeMap ( parameters ) response . headers [ \"queryParams\" ] = queryParams response . headers [ \"formParams\" ] = formParams response . headers [ \"params\" ] = params } } }","title":"Files Example"},{"location":"quick_start/#cors-example","text":"This example shows how to set up CORS for REST APIs used from the browser. Here you can check the full test . val server : Server by lazy { Server ( adapter ) { corsPath ( \"/default\" , CorsSettings ()) corsPath ( \"/example/org\" , CorsSettings ( \"example.org\" )) corsPath ( \"/no/credentials\" , CorsSettings ( supportCredentials = false )) corsPath ( \"/only/post\" , CorsSettings ( allowedMethods = setOf ( POST ))) corsPath ( \"/cache\" , CorsSettings ( preFlightMaxAge = 10 )) corsPath ( \"/exposed/headers\" , CorsSettings ( exposedHeaders = setOf ( \"head\" ))) corsPath ( \"/allowed/headers\" , CorsSettings ( allowedHeaders = setOf ( \"head\" ))) } } private fun Router . corsPath ( path : String , settings : CorsSettings ) { path ( path ) { // CORS settings can change for different routes cors ( settings ) get ( \"/path\" ) { ok ( request . method ) } post ( \"/path\" ) { ok ( request . method ) } put ( \"/path\" ) { ok ( request . method ) } delete ( \"/path\" ) { ok ( request . method ) } get { ok ( request . method ) } post { ok ( request . method ) } put { ok ( request . method ) } delete { ok ( request . method ) } } }","title":"CORS Example"},{"location":"hexagon_core/","text":"hexagon_core This module holds utilities used in other libraries of the toolkit. Check the packages' documentation for more details. You can find a quick recap of the main features in the sections below. Logger \u00b6 The following code block shows the most common use cases for the Logger class: val classLogger : Logger = Logger ( Runtime :: class ) // Logger for the `Runtime` class val instanceLogger : Logger = Logger ( this ) // Logger for this instance's class logger . info { \"\"\" You can add a quick log without declaring a Logger using 'com.hexagonkt.helpers.logger'. It is a default logger created for the System class (same as `Logger(System::class)`). \"\"\" } classLogger . trace { \"Message only evaluated if trace enabled at ${Jvm.id}\" } classLogger . debug { \"Message only evaluated if debug enabled at ${Jvm.id}\" } classLogger . warn { \"Message only evaluated if warn enabled at ${Jvm.id}\" } classLogger . info { \"Message only evaluated if info enabled at ${Jvm.id}\" } val exception = IllegalStateException ( \"Exception\" ) classLogger . warn ( exception ) { \"Warning with exception\" } classLogger . error ( exception ) { \"Error message with exception\" } classLogger . error { \"Error without an exception\" } classLogger . time ( \"Logs the time used to run the following block of code\" ) { val message = \"Block of code to be timed\" assert ( message . isNotBlank ()) } instanceLogger . flare { \"Prints a log that stands out for ease searching\" } Dependency injection \u00b6 You can take advantage of dependency injection using the InjectionManager object. You can bind supplier functions or objects to classes. If a class is already bound, later calls to bind * methods are ignored. However, you can use the forceBind * methods if you need to override a binding (in tests for example). Check this sample to bind constructor functions or objects to classes, and inject them later: // Bind classes to functions (create a different instance with each `inject` call) InjectionManager . bind < Date > { java . sql . Date ( System . currentTimeMillis ()) } // Bind classes to objects (returns the same instance for all `inject` calls) InjectionManager . bindObject < String >( \"STR\" ) // You can use labels to inject different instances InjectionManager . bind < Date >( \"+1h\" ) { java . sql . Date ( System . currentTimeMillis () + 3 _600_000 ) } InjectionManager . bindObject < String >( \"toolkit\" , \"Hexagon\" ) val currentSqlDate = InjectionManager . inject < Date >() val currentSqlDateInferredType : Date = InjectionManager . inject () // Inject different values for a class using tags (can be any type, not only string) val nextHourSqlDate : Date = InjectionManager . inject ( \"+1h\" ) val nextHourSqlDateInferredType : Date = InjectionManager . inject ( \"+1h\" ) // Injecting classes bound to objects return always the same instance val defaultString = InjectionManager . inject < String >() val taggedString : String = InjectionManager . inject ( \"toolkit\" ) // Overriding previously bound classes is not allowed (ignored) InjectionManager . bindObject < String >( \"STR Ignored\" ) val ignoredBinding = InjectionManager . inject < String >() // You can overwrite previously bound classes using `forceBind*` methods InjectionManager . forceBindObject < String >( \"STR Overridden\" ) val overriddenBinding = InjectionManager . inject < String >() Serialization \u00b6 The core module has utilities to serialize/parse data classes to JSON and YAML. Read the following snippet for details: val jason = Person ( \"Jason\" , \"Jackson\" , LocalDate . of ( 1989 , 12 , 31 )) val jasonJson = jason . serialize ( Json ) // Can also be Yaml or an string: \"application/json\" val parsedJason = jasonJson . parse ( Person :: class ) assert ( jason == parsedJason ) assert ( jason !== parsedJason ) Settings \u00b6 This module helps loading external settings from different sources. You can change the settings sources, the default ones are (bottom sources override top ones): Resource / service . yaml . Environment variables starting with SERVICE_ . System properties starting with service . File . / service . yaml from the application run directory. Resource / service_test . yaml . Below there is a code fragment showing how to add a custom settings source and load its properties: SettingsManager . settingsSources += ObjectSource ( \"stringProperty\" to \"str\" , \"integerProperty\" to 101 , \"booleanProperty\" to true ) assert ( SettingsManager . settings [ \"stringProperty\" ] == \"str\" ) assert ( SettingsManager . settings [ \"integerProperty\" ] == 101 ) assert ( SettingsManager . settings [ \"booleanProperty\" ] == true ) Packages \u00b6 Name Summary com.hexagonkt.helpers JVM information, a logger class and other useful utilities. com.hexagonkt.http HTTP code shared between clients and servers and independent of third party libraries. com.hexagonkt.injection Utilities to bind classes to creation closures or instances, and inject instances of those classes later. com.hexagonkt.serialization Parse/serialize data in different formats to class instances. com.hexagonkt.settings Load settings from different data sources and formats. Index \u00b6 All Types","title":"Core"},{"location":"hexagon_core/#logger","text":"The following code block shows the most common use cases for the Logger class: val classLogger : Logger = Logger ( Runtime :: class ) // Logger for the `Runtime` class val instanceLogger : Logger = Logger ( this ) // Logger for this instance's class logger . info { \"\"\" You can add a quick log without declaring a Logger using 'com.hexagonkt.helpers.logger'. It is a default logger created for the System class (same as `Logger(System::class)`). \"\"\" } classLogger . trace { \"Message only evaluated if trace enabled at ${Jvm.id}\" } classLogger . debug { \"Message only evaluated if debug enabled at ${Jvm.id}\" } classLogger . warn { \"Message only evaluated if warn enabled at ${Jvm.id}\" } classLogger . info { \"Message only evaluated if info enabled at ${Jvm.id}\" } val exception = IllegalStateException ( \"Exception\" ) classLogger . warn ( exception ) { \"Warning with exception\" } classLogger . error ( exception ) { \"Error message with exception\" } classLogger . error { \"Error without an exception\" } classLogger . time ( \"Logs the time used to run the following block of code\" ) { val message = \"Block of code to be timed\" assert ( message . isNotBlank ()) } instanceLogger . flare { \"Prints a log that stands out for ease searching\" }","title":"Logger"},{"location":"hexagon_core/#dependency-injection","text":"You can take advantage of dependency injection using the InjectionManager object. You can bind supplier functions or objects to classes. If a class is already bound, later calls to bind * methods are ignored. However, you can use the forceBind * methods if you need to override a binding (in tests for example). Check this sample to bind constructor functions or objects to classes, and inject them later: // Bind classes to functions (create a different instance with each `inject` call) InjectionManager . bind < Date > { java . sql . Date ( System . currentTimeMillis ()) } // Bind classes to objects (returns the same instance for all `inject` calls) InjectionManager . bindObject < String >( \"STR\" ) // You can use labels to inject different instances InjectionManager . bind < Date >( \"+1h\" ) { java . sql . Date ( System . currentTimeMillis () + 3 _600_000 ) } InjectionManager . bindObject < String >( \"toolkit\" , \"Hexagon\" ) val currentSqlDate = InjectionManager . inject < Date >() val currentSqlDateInferredType : Date = InjectionManager . inject () // Inject different values for a class using tags (can be any type, not only string) val nextHourSqlDate : Date = InjectionManager . inject ( \"+1h\" ) val nextHourSqlDateInferredType : Date = InjectionManager . inject ( \"+1h\" ) // Injecting classes bound to objects return always the same instance val defaultString = InjectionManager . inject < String >() val taggedString : String = InjectionManager . inject ( \"toolkit\" ) // Overriding previously bound classes is not allowed (ignored) InjectionManager . bindObject < String >( \"STR Ignored\" ) val ignoredBinding = InjectionManager . inject < String >() // You can overwrite previously bound classes using `forceBind*` methods InjectionManager . forceBindObject < String >( \"STR Overridden\" ) val overriddenBinding = InjectionManager . inject < String >()","title":"Dependency injection"},{"location":"hexagon_core/#serialization","text":"The core module has utilities to serialize/parse data classes to JSON and YAML. Read the following snippet for details: val jason = Person ( \"Jason\" , \"Jackson\" , LocalDate . of ( 1989 , 12 , 31 )) val jasonJson = jason . serialize ( Json ) // Can also be Yaml or an string: \"application/json\" val parsedJason = jasonJson . parse ( Person :: class ) assert ( jason == parsedJason ) assert ( jason !== parsedJason )","title":"Serialization"},{"location":"hexagon_core/#settings","text":"This module helps loading external settings from different sources. You can change the settings sources, the default ones are (bottom sources override top ones): Resource / service . yaml . Environment variables starting with SERVICE_ . System properties starting with service . File . / service . yaml from the application run directory. Resource / service_test . yaml . Below there is a code fragment showing how to add a custom settings source and load its properties: SettingsManager . settingsSources += ObjectSource ( \"stringProperty\" to \"str\" , \"integerProperty\" to 101 , \"booleanProperty\" to true ) assert ( SettingsManager . settings [ \"stringProperty\" ] == \"str\" ) assert ( SettingsManager . settings [ \"integerProperty\" ] == 101 ) assert ( SettingsManager . settings [ \"booleanProperty\" ] == true )","title":"Settings"},{"location":"hexagon_core/#packages","text":"Name Summary com.hexagonkt.helpers JVM information, a logger class and other useful utilities. com.hexagonkt.http HTTP code shared between clients and servers and independent of third party libraries. com.hexagonkt.injection Utilities to bind classes to creation closures or instances, and inject instances of those classes later. com.hexagonkt.serialization Parse/serialize data in different formats to class instances. com.hexagonkt.settings Load settings from different data sources and formats.","title":"Packages"},{"location":"hexagon_core/#index","text":"All Types","title":"Index"},{"location":"hexagon_core/alltypes/","text":"This module holds utilities used in other libraries of the toolkit. Check the packages' documentation for more details. You can find a quick recap of the main features in the sections below. All Types \u00b6 Name Summary (extensions in package com.hexagonkt.serialization) kotlin.Any \u00b6 | com.hexagonkt.injection.Bar \u00b6 | com.hexagonkt.helpers.CodedException \u00b6 Exception with a numeric code. | com.hexagonkt.helpers.CodedExceptionTest \u00b6 | (extensions in package com.hexagonkt.helpers) kotlin.collections.Collection \u00b6 | com.hexagonkt.settings.CommandLineArgumentsSource \u00b6 | com.hexagonkt.serialization.Company \u00b6 | com.hexagonkt.serialization.CompanySerializationTest \u00b6 | com.hexagonkt.serialization.ContentType \u00b6 | com.hexagonkt.serialization.Csv \u00b6 | com.hexagonkt.serialization.CsvTest \u00b6 | (extensions in package com.hexagonkt.helpers) java.util.Date \u00b6 | com.hexagonkt.helpers.DatesTest \u00b6 | com.hexagonkt.serialization.Department \u00b6 | com.hexagonkt.serialization.Device \u00b6 | com.hexagonkt.serialization.DeviceOs \u00b6 | com.hexagonkt.settings.EnvironmentVariablesSource \u00b6 | com.hexagonkt.injection.FakeService \u00b6 | (extensions in package com.hexagonkt.serialization) java.io.File \u00b6 | com.hexagonkt.settings.FileSource \u00b6 | com.hexagonkt.injection.Foo \u00b6 | com.hexagonkt.helpers.HelpersTest \u00b6 | com.hexagonkt.http.HttpTest \u00b6 | com.hexagonkt.injection.InjectionManager \u00b6 Generators registry and utilities. This object keep tracks of supplier functions or specific objects bound to classes. Different suppliers can be bound to the same type using 'tags'. | com.hexagonkt.injection.InjectionManagerTest \u00b6 | (extensions in package com.hexagonkt.serialization) java.io.InputStream \u00b6 | (extensions in package com.hexagonkt.helpers) kotlin.Int \u00b6 | com.hexagonkt.serialization.JacksonSerializerTest \u00b6 | com.hexagonkt.serialization.Json \u00b6 | com.hexagonkt.helpers.Jvm \u00b6 | com.hexagonkt.helpers.JvmTest \u00b6 | (extensions in package com.hexagonkt.helpers) kotlin.collections.List \u00b6 | (extensions in package com.hexagonkt.serialization) kotlin.collections.List \u00b6 | (extensions in package com.hexagonkt.helpers) java.time.LocalDate \u00b6 | (extensions in package com.hexagonkt.helpers) java.time.LocalDateTime \u00b6 | (extensions in package com.hexagonkt.helpers) java.time.LocalTime \u00b6 | com.hexagonkt.helpers.Logger \u00b6 Logger class with Kotlin improvements like lazy evaluation. It is backed by a SLF4J compatible logger. | com.hexagonkt.helpers.LoggerTest \u00b6 As the logger is only a facade and it is hard to check outputs, the only check is that no exceptions are thrown. | (extensions in package com.hexagonkt.helpers) kotlin.Long \u00b6 | (extensions in package com.hexagonkt.helpers) kotlin.collections.Map \u00b6 | (extensions in package com.hexagonkt.serialization) kotlin.collections.Map \u00b6 | com.hexagonkt.http.Method \u00b6 Enum for the supported HTTP methods. | com.hexagonkt.helpers.MultipleException \u00b6 Exception with a list of causes. Cause is null as it can't be tell which one of the list is the cause. | com.hexagonkt.helpers.MultipleExceptionTest \u00b6 | com.hexagonkt.settings.ObjectSource \u00b6 | com.hexagonkt.serialization.ParseException \u00b6 | com.hexagonkt.serialization.ParseExceptionTest \u00b6 | com.hexagonkt.http.Path \u00b6 A path definition. It parses path patterns and extract values for parameters. | com.hexagonkt.http.PathTest \u00b6 TODO Check that URLs with blank parameters are not matched. Ie: /alpha/{param}/bravo is not matched by /alpha//bravo | com.hexagonkt.serialization.Person \u00b6 | (extensions in package com.hexagonkt.helpers) kotlin.text.Regex \u00b6 | com.hexagonkt.helpers.RequiredKeysMap \u00b6 | com.hexagonkt.helpers.RequiredKeysMapTest \u00b6 | com.hexagonkt.helpers.Resource \u00b6 Absolute resource (start from root package without starting slash). Ie: foo/bar/res.txt instead /foo/bar/res.txt | com.hexagonkt.settings.ResourceSource \u00b6 | com.hexagonkt.helpers.ResourceTest \u00b6 | com.hexagonkt.http.Route \u00b6 | com.hexagonkt.http.RouteTest \u00b6 | com.hexagonkt.serialization.SerializationFormat \u00b6 | com.hexagonkt.serialization.SerializationFormatTest \u00b6 | com.hexagonkt.serialization.SerializationManager \u00b6 TODO | com.hexagonkt.serialization.SerializationManagerTest \u00b6 | com.hexagonkt.serialization.SerializationPackageTest \u00b6 | com.hexagonkt.serialization.SerializationTest \u00b6 | com.hexagonkt.injection.Service \u00b6 | com.hexagonkt.settings.SettingsManager \u00b6 | com.hexagonkt.settings.SettingsManagerTest \u00b6 Check gradle . build to see the related files creation. | com.hexagonkt.settings.SettingsSource \u00b6 | com.hexagonkt.settings.SettingsTest \u00b6 | (extensions in package com.hexagonkt.helpers) kotlin.String \u00b6 | (extensions in package com.hexagonkt.http) kotlin.String \u00b6 | (extensions in package com.hexagonkt.serialization) kotlin.String \u00b6 | com.hexagonkt.helpers.StringsSamplesTest \u00b6 | com.hexagonkt.helpers.StringsTest \u00b6 | com.hexagonkt.injection.SubBar1 \u00b6 | com.hexagonkt.injection.SubBar2 \u00b6 | com.hexagonkt.injection.SubBar3 \u00b6 | com.hexagonkt.injection.SubBar3a \u00b6 | com.hexagonkt.injection.SubFoo1 \u00b6 | com.hexagonkt.injection.SubFoo2 \u00b6 | com.hexagonkt.injection.SubFoo3 \u00b6 | com.hexagonkt.settings.SystemPropertiesSource \u00b6 | (extensions in package com.hexagonkt.helpers) kotlin.Throwable \u00b6 | (extensions in package com.hexagonkt.serialization) java.net.URL \u00b6 | com.hexagonkt.serialization.Yaml \u00b6 | com.hexagonkt.serialization.YamlTest \u00b6 | (extensions in package com.hexagonkt.helpers) java.time.ZonedDateTime \u00b6","title":"Home"},{"location":"hexagon_core/alltypes/#all-types","text":"Name Summary (extensions in package com.hexagonkt.serialization)","title":"All Types"},{"location":"hexagon_core/alltypes/#kotlinany","text":"|","title":"kotlin.Any"},{"location":"hexagon_core/alltypes/#comhexagonktinjectionbar","text":"|","title":"com.hexagonkt.injection.Bar"},{"location":"hexagon_core/alltypes/#comhexagonkthelperscodedexception","text":"Exception with a numeric code. |","title":"com.hexagonkt.helpers.CodedException"},{"location":"hexagon_core/alltypes/#comhexagonkthelperscodedexceptiontest","text":"| (extensions in package com.hexagonkt.helpers)","title":"com.hexagonkt.helpers.CodedExceptionTest"},{"location":"hexagon_core/alltypes/#kotlincollectionscollection","text":"|","title":"kotlin.collections.Collection"},{"location":"hexagon_core/alltypes/#comhexagonktsettingscommandlineargumentssource","text":"|","title":"com.hexagonkt.settings.CommandLineArgumentsSource"},{"location":"hexagon_core/alltypes/#comhexagonktserializationcompany","text":"|","title":"com.hexagonkt.serialization.Company"},{"location":"hexagon_core/alltypes/#comhexagonktserializationcompanyserializationtest","text":"|","title":"com.hexagonkt.serialization.CompanySerializationTest"},{"location":"hexagon_core/alltypes/#comhexagonktserializationcontenttype","text":"|","title":"com.hexagonkt.serialization.ContentType"},{"location":"hexagon_core/alltypes/#comhexagonktserializationcsv","text":"|","title":"com.hexagonkt.serialization.Csv"},{"location":"hexagon_core/alltypes/#comhexagonktserializationcsvtest","text":"| (extensions in package com.hexagonkt.helpers)","title":"com.hexagonkt.serialization.CsvTest"},{"location":"hexagon_core/alltypes/#javautildate","text":"|","title":"java.util.Date"},{"location":"hexagon_core/alltypes/#comhexagonkthelpersdatestest","text":"|","title":"com.hexagonkt.helpers.DatesTest"},{"location":"hexagon_core/alltypes/#comhexagonktserializationdepartment","text":"|","title":"com.hexagonkt.serialization.Department"},{"location":"hexagon_core/alltypes/#comhexagonktserializationdevice","text":"|","title":"com.hexagonkt.serialization.Device"},{"location":"hexagon_core/alltypes/#comhexagonktserializationdeviceos","text":"|","title":"com.hexagonkt.serialization.DeviceOs"},{"location":"hexagon_core/alltypes/#comhexagonktsettingsenvironmentvariablessource","text":"|","title":"com.hexagonkt.settings.EnvironmentVariablesSource"},{"location":"hexagon_core/alltypes/#comhexagonktinjectionfakeservice","text":"| (extensions in package com.hexagonkt.serialization)","title":"com.hexagonkt.injection.FakeService"},{"location":"hexagon_core/alltypes/#javaiofile","text":"|","title":"java.io.File"},{"location":"hexagon_core/alltypes/#comhexagonktsettingsfilesource","text":"|","title":"com.hexagonkt.settings.FileSource"},{"location":"hexagon_core/alltypes/#comhexagonktinjectionfoo","text":"|","title":"com.hexagonkt.injection.Foo"},{"location":"hexagon_core/alltypes/#comhexagonkthelpershelperstest","text":"|","title":"com.hexagonkt.helpers.HelpersTest"},{"location":"hexagon_core/alltypes/#comhexagonkthttphttptest","text":"|","title":"com.hexagonkt.http.HttpTest"},{"location":"hexagon_core/alltypes/#comhexagonktinjectioninjectionmanager","text":"Generators registry and utilities. This object keep tracks of supplier functions or specific objects bound to classes. Different suppliers can be bound to the same type using 'tags'. |","title":"com.hexagonkt.injection.InjectionManager"},{"location":"hexagon_core/alltypes/#comhexagonktinjectioninjectionmanagertest","text":"| (extensions in package com.hexagonkt.serialization)","title":"com.hexagonkt.injection.InjectionManagerTest"},{"location":"hexagon_core/alltypes/#javaioinputstream","text":"| (extensions in package com.hexagonkt.helpers)","title":"java.io.InputStream"},{"location":"hexagon_core/alltypes/#kotlinint","text":"|","title":"kotlin.Int"},{"location":"hexagon_core/alltypes/#comhexagonktserializationjacksonserializertest","text":"|","title":"com.hexagonkt.serialization.JacksonSerializerTest"},{"location":"hexagon_core/alltypes/#comhexagonktserializationjson","text":"|","title":"com.hexagonkt.serialization.Json"},{"location":"hexagon_core/alltypes/#comhexagonkthelpersjvm","text":"|","title":"com.hexagonkt.helpers.Jvm"},{"location":"hexagon_core/alltypes/#comhexagonkthelpersjvmtest","text":"| (extensions in package com.hexagonkt.helpers)","title":"com.hexagonkt.helpers.JvmTest"},{"location":"hexagon_core/alltypes/#kotlincollectionslist","text":"| (extensions in package com.hexagonkt.serialization)","title":"kotlin.collections.List"},{"location":"hexagon_core/alltypes/#kotlincollectionslist_1","text":"| (extensions in package com.hexagonkt.helpers)","title":"kotlin.collections.List"},{"location":"hexagon_core/alltypes/#javatimelocaldate","text":"| (extensions in package com.hexagonkt.helpers)","title":"java.time.LocalDate"},{"location":"hexagon_core/alltypes/#javatimelocaldatetime","text":"| (extensions in package com.hexagonkt.helpers)","title":"java.time.LocalDateTime"},{"location":"hexagon_core/alltypes/#javatimelocaltime","text":"|","title":"java.time.LocalTime"},{"location":"hexagon_core/alltypes/#comhexagonkthelperslogger","text":"Logger class with Kotlin improvements like lazy evaluation. It is backed by a SLF4J compatible logger. |","title":"com.hexagonkt.helpers.Logger"},{"location":"hexagon_core/alltypes/#comhexagonkthelpersloggertest","text":"As the logger is only a facade and it is hard to check outputs, the only check is that no exceptions are thrown. | (extensions in package com.hexagonkt.helpers)","title":"com.hexagonkt.helpers.LoggerTest"},{"location":"hexagon_core/alltypes/#kotlinlong","text":"| (extensions in package com.hexagonkt.helpers)","title":"kotlin.Long"},{"location":"hexagon_core/alltypes/#kotlincollectionsmap","text":"| (extensions in package com.hexagonkt.serialization)","title":"kotlin.collections.Map"},{"location":"hexagon_core/alltypes/#kotlincollectionsmap_1","text":"|","title":"kotlin.collections.Map"},{"location":"hexagon_core/alltypes/#comhexagonkthttpmethod","text":"Enum for the supported HTTP methods. |","title":"com.hexagonkt.http.Method"},{"location":"hexagon_core/alltypes/#comhexagonkthelpersmultipleexception","text":"Exception with a list of causes. Cause is null as it can't be tell which one of the list is the cause. |","title":"com.hexagonkt.helpers.MultipleException"},{"location":"hexagon_core/alltypes/#comhexagonkthelpersmultipleexceptiontest","text":"|","title":"com.hexagonkt.helpers.MultipleExceptionTest"},{"location":"hexagon_core/alltypes/#comhexagonktsettingsobjectsource","text":"|","title":"com.hexagonkt.settings.ObjectSource"},{"location":"hexagon_core/alltypes/#comhexagonktserializationparseexception","text":"|","title":"com.hexagonkt.serialization.ParseException"},{"location":"hexagon_core/alltypes/#comhexagonktserializationparseexceptiontest","text":"|","title":"com.hexagonkt.serialization.ParseExceptionTest"},{"location":"hexagon_core/alltypes/#comhexagonkthttppath","text":"A path definition. It parses path patterns and extract values for parameters. |","title":"com.hexagonkt.http.Path"},{"location":"hexagon_core/alltypes/#comhexagonkthttppathtest","text":"TODO Check that URLs with blank parameters are not matched. Ie: /alpha/{param}/bravo is not matched by /alpha//bravo |","title":"com.hexagonkt.http.PathTest"},{"location":"hexagon_core/alltypes/#comhexagonktserializationperson","text":"| (extensions in package com.hexagonkt.helpers)","title":"com.hexagonkt.serialization.Person"},{"location":"hexagon_core/alltypes/#kotlintextregex","text":"|","title":"kotlin.text.Regex"},{"location":"hexagon_core/alltypes/#comhexagonkthelpersrequiredkeysmap","text":"|","title":"com.hexagonkt.helpers.RequiredKeysMap"},{"location":"hexagon_core/alltypes/#comhexagonkthelpersrequiredkeysmaptest","text":"|","title":"com.hexagonkt.helpers.RequiredKeysMapTest"},{"location":"hexagon_core/alltypes/#comhexagonkthelpersresource","text":"Absolute resource (start from root package without starting slash). Ie: foo/bar/res.txt instead /foo/bar/res.txt |","title":"com.hexagonkt.helpers.Resource"},{"location":"hexagon_core/alltypes/#comhexagonktsettingsresourcesource","text":"|","title":"com.hexagonkt.settings.ResourceSource"},{"location":"hexagon_core/alltypes/#comhexagonkthelpersresourcetest","text":"|","title":"com.hexagonkt.helpers.ResourceTest"},{"location":"hexagon_core/alltypes/#comhexagonkthttproute","text":"|","title":"com.hexagonkt.http.Route"},{"location":"hexagon_core/alltypes/#comhexagonkthttproutetest","text":"|","title":"com.hexagonkt.http.RouteTest"},{"location":"hexagon_core/alltypes/#comhexagonktserializationserializationformat","text":"|","title":"com.hexagonkt.serialization.SerializationFormat"},{"location":"hexagon_core/alltypes/#comhexagonktserializationserializationformattest","text":"|","title":"com.hexagonkt.serialization.SerializationFormatTest"},{"location":"hexagon_core/alltypes/#comhexagonktserializationserializationmanager","text":"TODO |","title":"com.hexagonkt.serialization.SerializationManager"},{"location":"hexagon_core/alltypes/#comhexagonktserializationserializationmanagertest","text":"|","title":"com.hexagonkt.serialization.SerializationManagerTest"},{"location":"hexagon_core/alltypes/#comhexagonktserializationserializationpackagetest","text":"|","title":"com.hexagonkt.serialization.SerializationPackageTest"},{"location":"hexagon_core/alltypes/#comhexagonktserializationserializationtest","text":"|","title":"com.hexagonkt.serialization.SerializationTest"},{"location":"hexagon_core/alltypes/#comhexagonktinjectionservice","text":"|","title":"com.hexagonkt.injection.Service"},{"location":"hexagon_core/alltypes/#comhexagonktsettingssettingsmanager","text":"|","title":"com.hexagonkt.settings.SettingsManager"},{"location":"hexagon_core/alltypes/#comhexagonktsettingssettingsmanagertest","text":"Check gradle . build to see the related files creation. |","title":"com.hexagonkt.settings.SettingsManagerTest"},{"location":"hexagon_core/alltypes/#comhexagonktsettingssettingssource","text":"|","title":"com.hexagonkt.settings.SettingsSource"},{"location":"hexagon_core/alltypes/#comhexagonktsettingssettingstest","text":"| (extensions in package com.hexagonkt.helpers)","title":"com.hexagonkt.settings.SettingsTest"},{"location":"hexagon_core/alltypes/#kotlinstring","text":"| (extensions in package com.hexagonkt.http)","title":"kotlin.String"},{"location":"hexagon_core/alltypes/#kotlinstring_1","text":"| (extensions in package com.hexagonkt.serialization)","title":"kotlin.String"},{"location":"hexagon_core/alltypes/#kotlinstring_2","text":"|","title":"kotlin.String"},{"location":"hexagon_core/alltypes/#comhexagonkthelpersstringssamplestest","text":"|","title":"com.hexagonkt.helpers.StringsSamplesTest"},{"location":"hexagon_core/alltypes/#comhexagonkthelpersstringstest","text":"|","title":"com.hexagonkt.helpers.StringsTest"},{"location":"hexagon_core/alltypes/#comhexagonktinjectionsubbar1","text":"|","title":"com.hexagonkt.injection.SubBar1"},{"location":"hexagon_core/alltypes/#comhexagonktinjectionsubbar2","text":"|","title":"com.hexagonkt.injection.SubBar2"},{"location":"hexagon_core/alltypes/#comhexagonktinjectionsubbar3","text":"|","title":"com.hexagonkt.injection.SubBar3"},{"location":"hexagon_core/alltypes/#comhexagonktinjectionsubbar3a","text":"|","title":"com.hexagonkt.injection.SubBar3a"},{"location":"hexagon_core/alltypes/#comhexagonktinjectionsubfoo1","text":"|","title":"com.hexagonkt.injection.SubFoo1"},{"location":"hexagon_core/alltypes/#comhexagonktinjectionsubfoo2","text":"|","title":"com.hexagonkt.injection.SubFoo2"},{"location":"hexagon_core/alltypes/#comhexagonktinjectionsubfoo3","text":"|","title":"com.hexagonkt.injection.SubFoo3"},{"location":"hexagon_core/alltypes/#comhexagonktsettingssystempropertiessource","text":"| (extensions in package com.hexagonkt.helpers)","title":"com.hexagonkt.settings.SystemPropertiesSource"},{"location":"hexagon_core/alltypes/#kotlinthrowable","text":"| (extensions in package com.hexagonkt.serialization)","title":"kotlin.Throwable"},{"location":"hexagon_core/alltypes/#javaneturl","text":"|","title":"java.net.URL"},{"location":"hexagon_core/alltypes/#comhexagonktserializationyaml","text":"|","title":"com.hexagonkt.serialization.Yaml"},{"location":"hexagon_core/alltypes/#comhexagonktserializationyamltest","text":"| (extensions in package com.hexagonkt.helpers)","title":"com.hexagonkt.serialization.YamlTest"},{"location":"hexagon_core/alltypes/#javatimezoneddatetime","text":"","title":"java.time.ZonedDateTime"},{"location":"hexagon_core/com.hexagonkt.helpers/","text":"hexagon_core / com.hexagonkt.helpers Package com.hexagonkt.helpers \u00b6 JVM information, a logger class and other useful utilities. Types \u00b6 Name Summary CodedExceptionTest class CodedExceptionTest DatesTest class DatesTest HelpersTest class HelpersTest Jvm object Jvm JvmTest class JvmTest Logger Logger class with Kotlin improvements like lazy evaluation. It is backed by a SLF4J compatible logger. class Logger LoggerTest As the logger is only a facade and it is hard to check outputs, the only check is that no exceptions are thrown. class LoggerTest MultipleExceptionTest class MultipleExceptionTest RequiredKeysMap class RequiredKeysMap <K, V> : Map < K , V > RequiredKeysMapTest class RequiredKeysMapTest Resource Absolute resource (start from root package without starting slash). Ie: foo/bar/res.txt instead /foo/bar/res.txt class Resource ResourceTest class ResourceTest StringsSamplesTest class StringsSamplesTest StringsTest class StringsTest Exceptions \u00b6 Name Summary CodedException Exception with a numeric code. class CodedException : RuntimeException MultipleException Exception with a list of causes. Cause is null as it can't be tell which one of the list is the cause. class MultipleException : RuntimeException Extensions for External Classes \u00b6 Name Summary java.time.LocalDate java.time.LocalDateTime java.time.LocalTime java.time.ZonedDateTime java.util.Date kotlin.collections.Collection kotlin.collections.List kotlin.collections.Map kotlin.Int kotlin.Long kotlin.String kotlin.text.Regex kotlin.Throwable Properties \u00b6 Name Summary eol Runtime specific end of line. val eol: String error Syntax sugar to throw errors. val error: Nothing logger Default logger when you are lazy to declare one. val logger: Logger Functions \u00b6 Name Summary error Syntax sugar to throw errors. fun error (): Nothing notEmpty fun < V > notEmpty ( it : V ): Boolean retry Executes a lambda until no exception is thrown or a number of times is reached. fun < T > retry ( times : Int , delay : Long , func : () -> T ): T utf8 fun utf8 ( vararg bytes : Int ): String","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/#package-comhexagonkthelpers","text":"JVM information, a logger class and other useful utilities.","title":"Package com.hexagonkt.helpers"},{"location":"hexagon_core/com.hexagonkt.helpers/#types","text":"Name Summary CodedExceptionTest class CodedExceptionTest DatesTest class DatesTest HelpersTest class HelpersTest Jvm object Jvm JvmTest class JvmTest Logger Logger class with Kotlin improvements like lazy evaluation. It is backed by a SLF4J compatible logger. class Logger LoggerTest As the logger is only a facade and it is hard to check outputs, the only check is that no exceptions are thrown. class LoggerTest MultipleExceptionTest class MultipleExceptionTest RequiredKeysMap class RequiredKeysMap <K, V> : Map < K , V > RequiredKeysMapTest class RequiredKeysMapTest Resource Absolute resource (start from root package without starting slash). Ie: foo/bar/res.txt instead /foo/bar/res.txt class Resource ResourceTest class ResourceTest StringsSamplesTest class StringsSamplesTest StringsTest class StringsTest","title":"Types"},{"location":"hexagon_core/com.hexagonkt.helpers/#exceptions","text":"Name Summary CodedException Exception with a numeric code. class CodedException : RuntimeException MultipleException Exception with a list of causes. Cause is null as it can't be tell which one of the list is the cause. class MultipleException : RuntimeException","title":"Exceptions"},{"location":"hexagon_core/com.hexagonkt.helpers/#extensions-for-external-classes","text":"Name Summary java.time.LocalDate java.time.LocalDateTime java.time.LocalTime java.time.ZonedDateTime java.util.Date kotlin.collections.Collection kotlin.collections.List kotlin.collections.Map kotlin.Int kotlin.Long kotlin.String kotlin.text.Regex kotlin.Throwable","title":"Extensions for External Classes"},{"location":"hexagon_core/com.hexagonkt.helpers/#properties","text":"Name Summary eol Runtime specific end of line. val eol: String error Syntax sugar to throw errors. val error: Nothing logger Default logger when you are lazy to declare one. val logger: Logger","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.helpers/#functions","text":"Name Summary error Syntax sugar to throw errors. fun error (): Nothing notEmpty fun < V > notEmpty ( it : V ): Boolean retry Executes a lambda until no exception is thrown or a number of times is reached. fun < T > retry ( times : Int , delay : Long , func : () -> T ): T utf8 fun utf8 ( vararg bytes : Int ): String","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.helpers/eol/","text":"hexagon_core / com.hexagonkt.helpers / eol eol \u00b6 val eol: String Runtime specific end of line. Getter Runtime specific end of line.","title":"Eol"},{"location":"hexagon_core/com.hexagonkt.helpers/eol/#eol","text":"val eol: String Runtime specific end of line. Getter Runtime specific end of line.","title":"eol"},{"location":"hexagon_core/com.hexagonkt.helpers/error/","text":"hexagon_core / com.hexagonkt.helpers / error error \u00b6 val error: Nothing fun error (): Nothing Syntax sugar to throw errors.","title":"Error"},{"location":"hexagon_core/com.hexagonkt.helpers/error/#error","text":"val error: Nothing fun error (): Nothing Syntax sugar to throw errors.","title":"error"},{"location":"hexagon_core/com.hexagonkt.helpers/logger/","text":"hexagon_core / com.hexagonkt.helpers / logger logger \u00b6 val logger: Logger Default logger when you are lazy to declare one.","title":"Logger"},{"location":"hexagon_core/com.hexagonkt.helpers/logger/#logger","text":"val logger: Logger Default logger when you are lazy to declare one.","title":"logger"},{"location":"hexagon_core/com.hexagonkt.helpers/not-empty/","text":"hexagon_core / com.hexagonkt.helpers / notEmpty notEmpty \u00b6 fun < V > notEmpty ( it : V ): Boolean","title":"Not empty"},{"location":"hexagon_core/com.hexagonkt.helpers/not-empty/#notempty","text":"fun < V > notEmpty ( it : V ): Boolean","title":"notEmpty"},{"location":"hexagon_core/com.hexagonkt.helpers/retry/","text":"hexagon_core / com.hexagonkt.helpers / retry retry \u00b6 fun < T > retry ( times : Int , delay : Long , func : () -> T ): T Executes a lambda until no exception is thrown or a number of times is reached. Parameters \u00b6 times - Number of times to try to execute the callback. Must be greater than 0. delay - Milliseconds to wait to next execution if there was an error. Must be 0 or greater. Exceptions \u00b6 CodedException - if the callback didn't succeed in the given times. Return The callback result if succeed.","title":"Retry"},{"location":"hexagon_core/com.hexagonkt.helpers/retry/#retry","text":"fun < T > retry ( times : Int , delay : Long , func : () -> T ): T Executes a lambda until no exception is thrown or a number of times is reached.","title":"retry"},{"location":"hexagon_core/com.hexagonkt.helpers/retry/#parameters","text":"times - Number of times to try to execute the callback. Must be greater than 0. delay - Milliseconds to wait to next execution if there was an error. Must be 0 or greater.","title":"Parameters"},{"location":"hexagon_core/com.hexagonkt.helpers/retry/#exceptions","text":"CodedException - if the callback didn't succeed in the given times. Return The callback result if succeed.","title":"Exceptions"},{"location":"hexagon_core/com.hexagonkt.helpers/utf8/","text":"hexagon_core / com.hexagonkt.helpers / utf8 utf8 \u00b6 fun utf8 ( vararg bytes : Int ): String","title":"Utf8"},{"location":"hexagon_core/com.hexagonkt.helpers/utf8/#utf8","text":"fun utf8 ( vararg bytes : Int ): String","title":"utf8"},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception/","text":"hexagon_core / com.hexagonkt.helpers / CodedException CodedException \u00b6 class CodedException : RuntimeException Exception with a numeric code. Constructors \u00b6 Name Summary <init> Exception with a numeric code. CodedException ( code : Int , message : String = \"\" , cause : Throwable ? = null ) Properties \u00b6 Name Summary code val code: Int","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception/#codedexception","text":"class CodedException : RuntimeException Exception with a numeric code.","title":"CodedException"},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception/#constructors","text":"Name Summary <init> Exception with a numeric code. CodedException ( code : Int , message : String = \"\" , cause : Throwable ? = null )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception/#properties","text":"Name Summary code val code: Int","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception/-init-/","text":"hexagon_core / com.hexagonkt.helpers / CodedException / <init> <init> \u00b6 CodedException ( code : Int , message : String = \"\" , cause : Throwable ? = null ) Exception with a numeric code.","title":" init "},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception/-init-/#init","text":"CodedException ( code : Int , message : String = \"\" , cause : Throwable ? = null ) Exception with a numeric code.","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception/code/","text":"hexagon_core / com.hexagonkt.helpers / CodedException / code code \u00b6 val code: Int","title":"Code"},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception/code/#code","text":"val code: Int","title":"code"},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception-test/","text":"hexagon_core / com.hexagonkt.helpers / CodedExceptionTest CodedExceptionTest \u00b6 class CodedExceptionTest Constructors \u00b6 Name Summary <init> CodedExceptionTest () Functions \u00b6 Name Summary 'CodedException' constructors initialize instances properly fun 'CodedException' constructors initialize instances properly (): Unit Default 'CodedException' has empty message and 'null' cause fun Default 'CodedException' has empty message and 'null' cause (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception-test/#codedexceptiontest","text":"class CodedExceptionTest","title":"CodedExceptionTest"},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception-test/#constructors","text":"Name Summary <init> CodedExceptionTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception-test/#functions","text":"Name Summary 'CodedException' constructors initialize instances properly fun 'CodedException' constructors initialize instances properly (): Unit Default 'CodedException' has empty message and 'null' cause fun Default 'CodedException' has empty message and 'null' cause (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception-test/'-coded-exception' constructors initialize instances properly/","text":"hexagon_core / com.hexagonkt.helpers / CodedExceptionTest / 'CodedException' constructors initialize instances properly 'CodedException' constructors initialize instances properly \u00b6 fun 'CodedException' constructors initialize instances properly (): Unit","title":"' coded exception' constructors initialize instances properly"},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception-test/'-coded-exception' constructors initialize instances properly/#codedexception-constructors-initialize-instances-properly","text":"fun 'CodedException' constructors initialize instances properly (): Unit","title":"'CodedException' constructors initialize instances properly"},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception-test/-default '-coded-exception' has empty message and 'null' cause/","text":"hexagon_core / com.hexagonkt.helpers / CodedExceptionTest / Default 'CodedException' has empty message and 'null' cause Default 'CodedException' has empty message and 'null' cause \u00b6 fun Default 'CodedException' has empty message and 'null' cause (): Unit","title":" default ' coded exception' has empty message and 'null' cause"},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception-test/-default '-coded-exception' has empty message and 'null' cause/#default-codedexception-has-empty-message-and-null-cause","text":"fun Default 'CodedException' has empty message and 'null' cause (): Unit","title":"Default 'CodedException' has empty message and 'null' cause"},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception-test/-init-/","text":"hexagon_core / com.hexagonkt.helpers / CodedExceptionTest / <init> <init> \u00b6 CodedExceptionTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.helpers/-coded-exception-test/-init-/#init","text":"CodedExceptionTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.helpers/-dates-test/","text":"hexagon_core / com.hexagonkt.helpers / DatesTest DatesTest \u00b6 class DatesTest Constructors \u00b6 Name Summary <init> DatesTest () Functions \u00b6 Name Summary A local date time returns a valid int timestamp fun A local date time returns a valid int timestamp (): Unit Date conversion fun Date conversion (): Unit Dates are parsed from ints fun Dates are parsed from ints (): Unit LocalDateTime can be converted to Date fun LocalDateTime can be converted to Date (): Unit Zoned date fun Zoned date (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/-dates-test/#datestest","text":"class DatesTest","title":"DatesTest"},{"location":"hexagon_core/com.hexagonkt.helpers/-dates-test/#constructors","text":"Name Summary <init> DatesTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.helpers/-dates-test/#functions","text":"Name Summary A local date time returns a valid int timestamp fun A local date time returns a valid int timestamp (): Unit Date conversion fun Date conversion (): Unit Dates are parsed from ints fun Dates are parsed from ints (): Unit LocalDateTime can be converted to Date fun LocalDateTime can be converted to Date (): Unit Zoned date fun Zoned date (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.helpers/-dates-test/-a local date time returns a valid int timestamp/","text":"hexagon_core / com.hexagonkt.helpers / DatesTest / A local date time returns a valid int timestamp A local date time returns a valid int timestamp \u00b6 fun A local date time returns a valid int timestamp (): Unit","title":" a local date time returns a valid int timestamp"},{"location":"hexagon_core/com.hexagonkt.helpers/-dates-test/-a local date time returns a valid int timestamp/#a-local-date-time-returns-a-valid-int-timestamp","text":"fun A local date time returns a valid int timestamp (): Unit","title":"A local date time returns a valid int timestamp"},{"location":"hexagon_core/com.hexagonkt.helpers/-dates-test/-date conversion/","text":"hexagon_core / com.hexagonkt.helpers / DatesTest / Date conversion Date conversion \u00b6 fun Date conversion (): Unit","title":" date conversion"},{"location":"hexagon_core/com.hexagonkt.helpers/-dates-test/-date conversion/#date-conversion","text":"fun Date conversion (): Unit","title":"Date conversion"},{"location":"hexagon_core/com.hexagonkt.helpers/-dates-test/-dates are parsed from ints/","text":"hexagon_core / com.hexagonkt.helpers / DatesTest / Dates are parsed from ints Dates are parsed from ints \u00b6 fun Dates are parsed from ints (): Unit","title":" dates are parsed from ints"},{"location":"hexagon_core/com.hexagonkt.helpers/-dates-test/-dates are parsed from ints/#dates-are-parsed-from-ints","text":"fun Dates are parsed from ints (): Unit","title":"Dates are parsed from ints"},{"location":"hexagon_core/com.hexagonkt.helpers/-dates-test/-init-/","text":"hexagon_core / com.hexagonkt.helpers / DatesTest / <init> <init> \u00b6 DatesTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.helpers/-dates-test/-init-/#init","text":"DatesTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.helpers/-dates-test/-local-date-time can be converted to -date/","text":"hexagon_core / com.hexagonkt.helpers / DatesTest / LocalDateTime can be converted to Date LocalDateTime can be converted to Date \u00b6 fun LocalDateTime can be converted to Date (): Unit","title":" local date time can be converted to  date"},{"location":"hexagon_core/com.hexagonkt.helpers/-dates-test/-local-date-time can be converted to -date/#localdatetime-can-be-converted-to-date","text":"fun LocalDateTime can be converted to Date (): Unit","title":"LocalDateTime can be converted to Date"},{"location":"hexagon_core/com.hexagonkt.helpers/-dates-test/-zoned date/","text":"hexagon_core / com.hexagonkt.helpers / DatesTest / Zoned date Zoned date \u00b6 fun Zoned date (): Unit","title":" zoned date"},{"location":"hexagon_core/com.hexagonkt.helpers/-dates-test/-zoned date/#zoned-date","text":"fun Zoned date (): Unit","title":"Zoned date"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest HelpersTest \u00b6 class HelpersTest Constructors \u00b6 Name Summary <init> HelpersTest () Functions \u00b6 Name Summary 'error' generates the correct exception fun 'error' generates the correct exception (): Unit Ensure fails if collection size is larger fun Ensure fails if collection size is larger () : Unit Ensure fails if collection size is smaller fun Ensure fails if collection size is smaller () : Unit Ensure returns the collection if size is correct fun Ensure returns the collection if size is correct () : Unit Filtered lists do not contain empty elements fun Filtered lists do not contain empty elements () : Unit Filtered maps do not contain empty elements fun Filtered maps do not contain empty elements () : Unit Filtering an exception with a package only returns frames of that package fun Filtering an exception with a package only returns frames of that package (): Unit Filtering an exception with an empty string do not change the stack fun Filtering an exception with an empty string do not change the stack () : Unit Get nested keys inside a map returns the proper value fun Get nested keys inside a map returns the proper value (): Unit Multiple retry errors throw an exception fun Multiple retry errors throw an exception (): Unit Printing an exception returns its stack trace in the string fun Printing an exception returns its stack trace in the string (): Unit Printing an exception with a cause returns its stack trace in the string fun Printing an exception with a cause returns its stack trace in the string (): Unit Require a value defined by a list of keys return the correct value fun Require a value defined by a list of keys return the correct value () : Unit Require existing key returns correct value fun Require existing key returns correct value (): Unit Require key not found first level throws an error fun Require key not found first level throws an error (): Unit Require keys with non existing keys fails fun Require keys with non existing keys fails (): Unit Require not found key fails fun Require not found key fails (): Unit Require not found key in map fails fun Require not found key in map fails (): Unit Retry does not allow invalid parameters fun Retry does not allow invalid parameters (): Unit System setting works ok fun System setting works ok (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/#helperstest","text":"class HelpersTest","title":"HelpersTest"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/#constructors","text":"Name Summary <init> HelpersTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/#functions","text":"Name Summary 'error' generates the correct exception fun 'error' generates the correct exception (): Unit Ensure fails if collection size is larger fun Ensure fails if collection size is larger () : Unit Ensure fails if collection size is smaller fun Ensure fails if collection size is smaller () : Unit Ensure returns the collection if size is correct fun Ensure returns the collection if size is correct () : Unit Filtered lists do not contain empty elements fun Filtered lists do not contain empty elements () : Unit Filtered maps do not contain empty elements fun Filtered maps do not contain empty elements () : Unit Filtering an exception with a package only returns frames of that package fun Filtering an exception with a package only returns frames of that package (): Unit Filtering an exception with an empty string do not change the stack fun Filtering an exception with an empty string do not change the stack () : Unit Get nested keys inside a map returns the proper value fun Get nested keys inside a map returns the proper value (): Unit Multiple retry errors throw an exception fun Multiple retry errors throw an exception (): Unit Printing an exception returns its stack trace in the string fun Printing an exception returns its stack trace in the string (): Unit Printing an exception with a cause returns its stack trace in the string fun Printing an exception with a cause returns its stack trace in the string (): Unit Require a value defined by a list of keys return the correct value fun Require a value defined by a list of keys return the correct value () : Unit Require existing key returns correct value fun Require existing key returns correct value (): Unit Require key not found first level throws an error fun Require key not found first level throws an error (): Unit Require keys with non existing keys fails fun Require keys with non existing keys fails (): Unit Require not found key fails fun Require not found key fails (): Unit Require not found key in map fails fun Require not found key in map fails (): Unit Retry does not allow invalid parameters fun Retry does not allow invalid parameters (): Unit System setting works ok fun System setting works ok (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/'error' generates the correct exception/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / 'error' generates the correct exception 'error' generates the correct exception \u00b6 fun 'error' generates the correct exception (): Unit","title":"'error' generates the correct exception"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/'error' generates the correct exception/#error-generates-the-correct-exception","text":"fun 'error' generates the correct exception (): Unit","title":"'error' generates the correct exception"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-ensure fails if collection size is larger/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Ensure fails if collection size is larger Ensure fails if collection size is larger \u00b6 fun Ensure fails if collection size is larger () : Unit","title":" ensure fails if collection size is larger"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-ensure fails if collection size is larger/#ensure-fails-if-collection-size-is-larger","text":"fun Ensure fails if collection size is larger () : Unit","title":"Ensure fails if collection size is larger"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-ensure fails if collection size is smaller/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Ensure fails if collection size is smaller Ensure fails if collection size is smaller \u00b6 fun Ensure fails if collection size is smaller () : Unit","title":" ensure fails if collection size is smaller"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-ensure fails if collection size is smaller/#ensure-fails-if-collection-size-is-smaller","text":"fun Ensure fails if collection size is smaller () : Unit","title":"Ensure fails if collection size is smaller"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-ensure returns the collection if size is correct/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Ensure returns the collection if size is correct Ensure returns the collection if size is correct \u00b6 fun Ensure returns the collection if size is correct () : Unit","title":" ensure returns the collection if size is correct"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-ensure returns the collection if size is correct/#ensure-returns-the-collection-if-size-is-correct","text":"fun Ensure returns the collection if size is correct () : Unit","title":"Ensure returns the collection if size is correct"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-filtered lists do not contain empty elements/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Filtered lists do not contain empty elements Filtered lists do not contain empty elements \u00b6 fun Filtered lists do not contain empty elements () : Unit","title":" filtered lists do not contain empty elements"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-filtered lists do not contain empty elements/#filtered-lists-do-not-contain-empty-elements","text":"fun Filtered lists do not contain empty elements () : Unit","title":"Filtered lists do not contain empty elements"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-filtered maps do not contain empty elements/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Filtered maps do not contain empty elements Filtered maps do not contain empty elements \u00b6 fun Filtered maps do not contain empty elements () : Unit","title":" filtered maps do not contain empty elements"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-filtered maps do not contain empty elements/#filtered-maps-do-not-contain-empty-elements","text":"fun Filtered maps do not contain empty elements () : Unit","title":"Filtered maps do not contain empty elements"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-filtering an exception with a package only returns frames of that package/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Filtering an exception with a package only returns frames of that package Filtering an exception with a package only returns frames of that package \u00b6 fun Filtering an exception with a package only returns frames of that package (): Unit","title":" filtering an exception with a package only returns frames of that package"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-filtering an exception with a package only returns frames of that package/#filtering-an-exception-with-a-package-only-returns-frames-of-that-package","text":"fun Filtering an exception with a package only returns frames of that package (): Unit","title":"Filtering an exception with a package only returns frames of that package"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-filtering an exception with an empty string do not change the stack/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Filtering an exception with an empty string do not change the stack Filtering an exception with an empty string do not change the stack \u00b6 fun Filtering an exception with an empty string do not change the stack () : Unit","title":" filtering an exception with an empty string do not change the stack"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-filtering an exception with an empty string do not change the stack/#filtering-an-exception-with-an-empty-string-do-not-change-the-stack","text":"fun Filtering an exception with an empty string do not change the stack () : Unit","title":"Filtering an exception with an empty string do not change the stack"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-get nested keys inside a map returns the proper value/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Get nested keys inside a map returns the proper value Get nested keys inside a map returns the proper value \u00b6 fun Get nested keys inside a map returns the proper value (): Unit","title":" get nested keys inside a map returns the proper value"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-get nested keys inside a map returns the proper value/#get-nested-keys-inside-a-map-returns-the-proper-value","text":"fun Get nested keys inside a map returns the proper value (): Unit","title":"Get nested keys inside a map returns the proper value"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-init-/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / <init> <init> \u00b6 HelpersTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-init-/#init","text":"HelpersTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-multiple retry errors throw an exception/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Multiple retry errors throw an exception Multiple retry errors throw an exception \u00b6 fun Multiple retry errors throw an exception (): Unit","title":" multiple retry errors throw an exception"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-multiple retry errors throw an exception/#multiple-retry-errors-throw-an-exception","text":"fun Multiple retry errors throw an exception (): Unit","title":"Multiple retry errors throw an exception"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-printing an exception returns its stack trace in the string/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Printing an exception returns its stack trace in the string Printing an exception returns its stack trace in the string \u00b6 fun Printing an exception returns its stack trace in the string (): Unit","title":" printing an exception returns its stack trace in the string"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-printing an exception returns its stack trace in the string/#printing-an-exception-returns-its-stack-trace-in-the-string","text":"fun Printing an exception returns its stack trace in the string (): Unit","title":"Printing an exception returns its stack trace in the string"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-printing an exception with a cause returns its stack trace in the string/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Printing an exception with a cause returns its stack trace in the string Printing an exception with a cause returns its stack trace in the string \u00b6 fun Printing an exception with a cause returns its stack trace in the string (): Unit","title":" printing an exception with a cause returns its stack trace in the string"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-printing an exception with a cause returns its stack trace in the string/#printing-an-exception-with-a-cause-returns-its-stack-trace-in-the-string","text":"fun Printing an exception with a cause returns its stack trace in the string (): Unit","title":"Printing an exception with a cause returns its stack trace in the string"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-require a value defined by a list of keys return the correct value/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Require a value defined by a list of keys return the correct value Require a value defined by a list of keys return the correct value \u00b6 fun Require a value defined by a list of keys return the correct value () : Unit","title":" require a value defined by a list of keys return the correct value"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-require a value defined by a list of keys return the correct value/#require-a-value-defined-by-a-list-of-keys-return-the-correct-value","text":"fun Require a value defined by a list of keys return the correct value () : Unit","title":"Require a value defined by a list of keys return the correct value"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-require existing key returns correct value/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Require existing key returns correct value Require existing key returns correct value \u00b6 fun Require existing key returns correct value (): Unit","title":" require existing key returns correct value"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-require existing key returns correct value/#require-existing-key-returns-correct-value","text":"fun Require existing key returns correct value (): Unit","title":"Require existing key returns correct value"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-require key not found first level throws an error/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Require key not found first level throws an error Require key not found first level throws an error \u00b6 fun Require key not found first level throws an error (): Unit","title":" require key not found first level throws an error"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-require key not found first level throws an error/#require-key-not-found-first-level-throws-an-error","text":"fun Require key not found first level throws an error (): Unit","title":"Require key not found first level throws an error"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-require keys with non existing keys fails/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Require keys with non existing keys fails Require keys with non existing keys fails \u00b6 fun Require keys with non existing keys fails (): Unit","title":" require keys with non existing keys fails"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-require keys with non existing keys fails/#require-keys-with-non-existing-keys-fails","text":"fun Require keys with non existing keys fails (): Unit","title":"Require keys with non existing keys fails"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-require not found key fails/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Require not found key fails Require not found key fails \u00b6 fun Require not found key fails (): Unit","title":" require not found key fails"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-require not found key fails/#require-not-found-key-fails","text":"fun Require not found key fails (): Unit","title":"Require not found key fails"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-require not found key in map fails/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Require not found key in map fails Require not found key in map fails \u00b6 fun Require not found key in map fails (): Unit","title":" require not found key in map fails"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-require not found key in map fails/#require-not-found-key-in-map-fails","text":"fun Require not found key in map fails (): Unit","title":"Require not found key in map fails"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-retry does not allow invalid parameters/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / Retry does not allow invalid parameters Retry does not allow invalid parameters \u00b6 fun Retry does not allow invalid parameters (): Unit","title":" retry does not allow invalid parameters"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-retry does not allow invalid parameters/#retry-does-not-allow-invalid-parameters","text":"fun Retry does not allow invalid parameters (): Unit","title":"Retry does not allow invalid parameters"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-system setting works ok/","text":"hexagon_core / com.hexagonkt.helpers / HelpersTest / System setting works ok System setting works ok \u00b6 fun System setting works ok (): Unit","title":" system setting works ok"},{"location":"hexagon_core/com.hexagonkt.helpers/-helpers-test/-system setting works ok/#system-setting-works-ok","text":"fun System setting works ok (): Unit","title":"System setting works ok"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/","text":"hexagon_core / com.hexagonkt.helpers / Jvm Jvm \u00b6 object Jvm Properties \u00b6 Name Summary charset Default character set. val charset: Charset cpuCount val cpuCount: Int hostname The hostname of the machine running this program. val hostname: String id val id: String ip The IP address of the machine running this program. val ip: String locale val locale: String name val name: String timeZone Default timezone. val timeZone: TimeZone timezone val timezone: String version val version: String Functions \u00b6 Name Summary initialMemory fun initialMemory (): String systemSetting fun systemSetting ( name : String ): String ? fun systemSetting ( name : String , default : String ): String uptime fun uptime () : String usedMemory fun usedMemory (): String","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/#jvm","text":"object Jvm","title":"Jvm"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/#properties","text":"Name Summary charset Default character set. val charset: Charset cpuCount val cpuCount: Int hostname The hostname of the machine running this program. val hostname: String id val id: String ip The IP address of the machine running this program. val ip: String locale val locale: String name val name: String timeZone Default timezone. val timeZone: TimeZone timezone val timezone: String version val version: String","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/#functions","text":"Name Summary initialMemory fun initialMemory (): String systemSetting fun systemSetting ( name : String ): String ? fun systemSetting ( name : String , default : String ): String uptime fun uptime () : String usedMemory fun usedMemory (): String","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/charset/","text":"hexagon_core / com.hexagonkt.helpers / Jvm / charset charset \u00b6 val charset: Charset Default character set. Getter Default character set.","title":"Charset"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/charset/#charset","text":"val charset: Charset Default character set. Getter Default character set.","title":"charset"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/cpu-count/","text":"hexagon_core / com.hexagonkt.helpers / Jvm / cpuCount cpuCount \u00b6 val cpuCount: Int","title":"Cpu count"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/cpu-count/#cpucount","text":"val cpuCount: Int","title":"cpuCount"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/hostname/","text":"hexagon_core / com.hexagonkt.helpers / Jvm / hostname hostname \u00b6 val hostname: String The hostname of the machine running this program.","title":"Hostname"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/hostname/#hostname","text":"val hostname: String The hostname of the machine running this program.","title":"hostname"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/id/","text":"hexagon_core / com.hexagonkt.helpers / Jvm / id id \u00b6 val id: String","title":"Id"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/id/#id","text":"val id: String","title":"id"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/initial-memory/","text":"hexagon_core / com.hexagonkt.helpers / Jvm / initialMemory initialMemory \u00b6 fun initialMemory (): String","title":"Initial memory"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/initial-memory/#initialmemory","text":"fun initialMemory (): String","title":"initialMemory"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/ip/","text":"hexagon_core / com.hexagonkt.helpers / Jvm / ip ip \u00b6 val ip: String The IP address of the machine running this program.","title":"Ip"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/ip/#ip","text":"val ip: String The IP address of the machine running this program.","title":"ip"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/locale/","text":"hexagon_core / com.hexagonkt.helpers / Jvm / locale locale \u00b6 val locale: String","title":"Locale"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/locale/#locale","text":"val locale: String","title":"locale"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/name/","text":"hexagon_core / com.hexagonkt.helpers / Jvm / name name \u00b6 val name: String","title":"Name"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/name/#name","text":"val name: String","title":"name"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/system-setting/","text":"hexagon_core / com.hexagonkt.helpers / Jvm / systemSetting systemSetting \u00b6 fun systemSetting ( name : String ): String ? fun systemSetting ( name : String , default : String ): String","title":"System setting"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/system-setting/#systemsetting","text":"fun systemSetting ( name : String ): String ? fun systemSetting ( name : String , default : String ): String","title":"systemSetting"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/time-zone/","text":"hexagon_core / com.hexagonkt.helpers / Jvm / timeZone timeZone \u00b6 val timeZone: TimeZone Default timezone.","title":"Time zone"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/time-zone/#timezone","text":"val timeZone: TimeZone Default timezone.","title":"timeZone"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/timezone/","text":"hexagon_core / com.hexagonkt.helpers / Jvm / timezone timezone \u00b6 val timezone: String","title":"Timezone"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/timezone/#timezone","text":"val timezone: String","title":"timezone"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/uptime/","text":"hexagon_core / com.hexagonkt.helpers / Jvm / uptime uptime \u00b6 fun uptime () : String","title":"Uptime"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/uptime/#uptime","text":"fun uptime () : String","title":"uptime"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/used-memory/","text":"hexagon_core / com.hexagonkt.helpers / Jvm / usedMemory usedMemory \u00b6 fun usedMemory (): String","title":"Used memory"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/used-memory/#usedmemory","text":"fun usedMemory (): String","title":"usedMemory"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/version/","text":"hexagon_core / com.hexagonkt.helpers / Jvm / version version \u00b6 val version: String","title":"Version"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm/version/#version","text":"val version: String","title":"version"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm-test/","text":"hexagon_core / com.hexagonkt.helpers / JvmTest JvmTest \u00b6 class JvmTest Constructors \u00b6 Name Summary <init> JvmTest () Functions \u00b6 Name Summary 'hostname' and 'ip' contains valid values fun 'hostname' and 'ip' contains valid values (): Unit JVM metrics have valid values fun JVM metrics have valid values (): Unit System settings with default values are handled properly fun System settings with default values are handled properly (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm-test/#jvmtest","text":"class JvmTest","title":"JvmTest"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm-test/#constructors","text":"Name Summary <init> JvmTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm-test/#functions","text":"Name Summary 'hostname' and 'ip' contains valid values fun 'hostname' and 'ip' contains valid values (): Unit JVM metrics have valid values fun JVM metrics have valid values (): Unit System settings with default values are handled properly fun System settings with default values are handled properly (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm-test/'hostname' and 'ip' contains valid values/","text":"hexagon_core / com.hexagonkt.helpers / JvmTest / 'hostname' and 'ip' contains valid values 'hostname' and 'ip' contains valid values \u00b6 fun 'hostname' and 'ip' contains valid values (): Unit","title":"'hostname' and 'ip' contains valid values"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm-test/'hostname' and 'ip' contains valid values/#hostname-and-ip-contains-valid-values","text":"fun 'hostname' and 'ip' contains valid values (): Unit","title":"'hostname' and 'ip' contains valid values"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm-test/-init-/","text":"hexagon_core / com.hexagonkt.helpers / JvmTest / <init> <init> \u00b6 JvmTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm-test/-init-/#init","text":"JvmTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm-test/-j-v-m metrics have valid values/","text":"hexagon_core / com.hexagonkt.helpers / JvmTest / JVM metrics have valid values JVM metrics have valid values \u00b6 fun JVM metrics have valid values (): Unit","title":" j v m metrics have valid values"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm-test/-j-v-m metrics have valid values/#jvm-metrics-have-valid-values","text":"fun JVM metrics have valid values (): Unit","title":"JVM metrics have valid values"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm-test/-system settings with default values are handled properly/","text":"hexagon_core / com.hexagonkt.helpers / JvmTest / System settings with default values are handled properly System settings with default values are handled properly \u00b6 fun System settings with default values are handled properly (): Unit","title":" system settings with default values are handled properly"},{"location":"hexagon_core/com.hexagonkt.helpers/-jvm-test/-system settings with default values are handled properly/#system-settings-with-default-values-are-handled-properly","text":"fun System settings with default values are handled properly (): Unit","title":"System settings with default values are handled properly"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/","text":"hexagon_core / com.hexagonkt.helpers / Logger Logger \u00b6 class Logger Logger class with Kotlin improvements like lazy evaluation. It is backed by a SLF4J compatible logger. Usage example: // logger val classLogger : Logger = Logger ( Runtime :: class ) // Logger for the `Runtime` class val instanceLogger : Logger = Logger ( this ) // Logger for this instance's class logger . info { \"\"\" You can add a quick log without declaring a Logger using 'com.hexagonkt.helpers.logger'. It is a default logger created for the System class (same as `Logger(System::class)`). \"\"\" } classLogger . trace { \"Message only evaluated if trace enabled at ${Jvm.id}\" } classLogger . debug { \"Message only evaluated if debug enabled at ${Jvm.id}\" } classLogger . warn { \"Message only evaluated if warn enabled at ${Jvm.id}\" } classLogger . info { \"Message only evaluated if info enabled at ${Jvm.id}\" } val exception = IllegalStateException ( \"Exception\" ) classLogger . warn ( exception ) { \"Warning with exception\" } classLogger . error ( exception ) { \"Error message with exception\" } classLogger . error { \"Error without an exception\" } classLogger . time ( \"Logs the time used to run the following block of code\" ) { val message = \"Block of code to be timed\" assert ( message . isNotBlank ()) } instanceLogger . flare { \"Prints a log that stands out for ease searching\" } // logger Parameters \u00b6 type - Logger type. It is shown in the logs messages and used for log filtering. Constructors \u00b6 Name Summary <init> Logger ( instance : Any ) Logger class with Kotlin improvements like lazy evaluation. It is backed by a SLF4J compatible logger. Logger ( type : KClass <*> ) Functions \u00b6 Name Summary debug fun debug ( message : () -> Any ? ): Unit error fun error ( message : () -> Any ? ): Unit fun < E : Throwable > error ( exception : E , message : ( E ) -> Any ? ): Unit flare fun flare ( message : () -> Any ? = { \"\" } ): Unit info fun info ( message : () -> Any ? ): Unit time fun time ( startNanos : Long , message : () -> Any ? = { \"\" } ): Unit fun < T > time ( message : () -> Any ? = { null } , block : () -> T ): T fun < T > time ( message : Any ? , block : () -> T ): T trace fun trace ( message : () -> Any ? ): Unit warn fun warn ( message : () -> Any ? ): Unit fun < E : Throwable > warn ( exception : E , message : ( E ) -> Any ? ): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/#logger","text":"class Logger Logger class with Kotlin improvements like lazy evaluation. It is backed by a SLF4J compatible logger. Usage example: // logger val classLogger : Logger = Logger ( Runtime :: class ) // Logger for the `Runtime` class val instanceLogger : Logger = Logger ( this ) // Logger for this instance's class logger . info { \"\"\" You can add a quick log without declaring a Logger using 'com.hexagonkt.helpers.logger'. It is a default logger created for the System class (same as `Logger(System::class)`). \"\"\" } classLogger . trace { \"Message only evaluated if trace enabled at ${Jvm.id}\" } classLogger . debug { \"Message only evaluated if debug enabled at ${Jvm.id}\" } classLogger . warn { \"Message only evaluated if warn enabled at ${Jvm.id}\" } classLogger . info { \"Message only evaluated if info enabled at ${Jvm.id}\" } val exception = IllegalStateException ( \"Exception\" ) classLogger . warn ( exception ) { \"Warning with exception\" } classLogger . error ( exception ) { \"Error message with exception\" } classLogger . error { \"Error without an exception\" } classLogger . time ( \"Logs the time used to run the following block of code\" ) { val message = \"Block of code to be timed\" assert ( message . isNotBlank ()) } instanceLogger . flare { \"Prints a log that stands out for ease searching\" } // logger","title":"Logger"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/#parameters","text":"type - Logger type. It is shown in the logs messages and used for log filtering.","title":"Parameters"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/#constructors","text":"Name Summary <init> Logger ( instance : Any ) Logger class with Kotlin improvements like lazy evaluation. It is backed by a SLF4J compatible logger. Logger ( type : KClass <*> )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/#functions","text":"Name Summary debug fun debug ( message : () -> Any ? ): Unit error fun error ( message : () -> Any ? ): Unit fun < E : Throwable > error ( exception : E , message : ( E ) -> Any ? ): Unit flare fun flare ( message : () -> Any ? = { \"\" } ): Unit info fun info ( message : () -> Any ? ): Unit time fun time ( startNanos : Long , message : () -> Any ? = { \"\" } ): Unit fun < T > time ( message : () -> Any ? = { null } , block : () -> T ): T fun < T > time ( message : Any ? , block : () -> T ): T trace fun trace ( message : () -> Any ? ): Unit warn fun warn ( message : () -> Any ? ): Unit fun < E : Throwable > warn ( exception : E , message : ( E ) -> Any ? ): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/-init-/","text":"hexagon_core / com.hexagonkt.helpers / Logger / <init> <init> \u00b6 Logger ( instance : Any ) `` Logger ( type : KClass <*> ) Logger class with Kotlin improvements like lazy evaluation. It is backed by a SLF4J compatible logger. Usage example: // logger val classLogger : Logger = Logger ( Runtime :: class ) // Logger for the `Runtime` class val instanceLogger : Logger = Logger ( this ) // Logger for this instance's class logger . info { \"\"\" You can add a quick log without declaring a Logger using 'com.hexagonkt.helpers.logger'. It is a default logger created for the System class (same as `Logger(System::class)`). \"\"\" } classLogger . trace { \"Message only evaluated if trace enabled at ${Jvm.id}\" } classLogger . debug { \"Message only evaluated if debug enabled at ${Jvm.id}\" } classLogger . warn { \"Message only evaluated if warn enabled at ${Jvm.id}\" } classLogger . info { \"Message only evaluated if info enabled at ${Jvm.id}\" } val exception = IllegalStateException ( \"Exception\" ) classLogger . warn ( exception ) { \"Warning with exception\" } classLogger . error ( exception ) { \"Error message with exception\" } classLogger . error { \"Error without an exception\" } classLogger . time ( \"Logs the time used to run the following block of code\" ) { val message = \"Block of code to be timed\" assert ( message . isNotBlank ()) } instanceLogger . flare { \"Prints a log that stands out for ease searching\" } // logger Parameters \u00b6 type - Logger type. It is shown in the logs messages and used for log filtering.","title":" init "},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/-init-/#init","text":"Logger ( instance : Any ) `` Logger ( type : KClass <*> ) Logger class with Kotlin improvements like lazy evaluation. It is backed by a SLF4J compatible logger. Usage example: // logger val classLogger : Logger = Logger ( Runtime :: class ) // Logger for the `Runtime` class val instanceLogger : Logger = Logger ( this ) // Logger for this instance's class logger . info { \"\"\" You can add a quick log without declaring a Logger using 'com.hexagonkt.helpers.logger'. It is a default logger created for the System class (same as `Logger(System::class)`). \"\"\" } classLogger . trace { \"Message only evaluated if trace enabled at ${Jvm.id}\" } classLogger . debug { \"Message only evaluated if debug enabled at ${Jvm.id}\" } classLogger . warn { \"Message only evaluated if warn enabled at ${Jvm.id}\" } classLogger . info { \"Message only evaluated if info enabled at ${Jvm.id}\" } val exception = IllegalStateException ( \"Exception\" ) classLogger . warn ( exception ) { \"Warning with exception\" } classLogger . error ( exception ) { \"Error message with exception\" } classLogger . error { \"Error without an exception\" } classLogger . time ( \"Logs the time used to run the following block of code\" ) { val message = \"Block of code to be timed\" assert ( message . isNotBlank ()) } instanceLogger . flare { \"Prints a log that stands out for ease searching\" } // logger","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/-init-/#parameters","text":"type - Logger type. It is shown in the logs messages and used for log filtering.","title":"Parameters"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/debug/","text":"hexagon_core / com.hexagonkt.helpers / Logger / debug debug \u00b6 fun debug ( message : () -> Any ? ): Unit","title":"Debug"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/debug/#debug","text":"fun debug ( message : () -> Any ? ): Unit","title":"debug"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/error/","text":"hexagon_core / com.hexagonkt.helpers / Logger / error error \u00b6 fun error ( message : () -> Any ? ): Unit fun < E : Throwable > error ( exception : E , message : ( E ) -> Any ? ): Unit","title":"Error"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/error/#error","text":"fun error ( message : () -> Any ? ): Unit fun < E : Throwable > error ( exception : E , message : ( E ) -> Any ? ): Unit","title":"error"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/flare/","text":"hexagon_core / com.hexagonkt.helpers / Logger / flare flare \u00b6 fun flare ( message : () -> Any ? = { \"\" } ): Unit","title":"Flare"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/flare/#flare","text":"fun flare ( message : () -> Any ? = { \"\" } ): Unit","title":"flare"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/info/","text":"hexagon_core / com.hexagonkt.helpers / Logger / info info \u00b6 fun info ( message : () -> Any ? ): Unit","title":"Info"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/info/#info","text":"fun info ( message : () -> Any ? ): Unit","title":"info"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/time/","text":"hexagon_core / com.hexagonkt.helpers / Logger / time time \u00b6 fun time ( startNanos : Long , message : () -> Any ? = { \"\" } ): Unit fun < T > time ( message : () -> Any ? = { null } , block : () -> T ): T fun < T > time ( message : Any ? , block : () -> T ): T","title":"Time"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/time/#time","text":"fun time ( startNanos : Long , message : () -> Any ? = { \"\" } ): Unit fun < T > time ( message : () -> Any ? = { null } , block : () -> T ): T fun < T > time ( message : Any ? , block : () -> T ): T","title":"time"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/trace/","text":"hexagon_core / com.hexagonkt.helpers / Logger / trace trace \u00b6 fun trace ( message : () -> Any ? ): Unit","title":"Trace"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/trace/#trace","text":"fun trace ( message : () -> Any ? ): Unit","title":"trace"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/warn/","text":"hexagon_core / com.hexagonkt.helpers / Logger / warn warn \u00b6 fun warn ( message : () -> Any ? ): Unit fun < E : Throwable > warn ( exception : E , message : ( E ) -> Any ? ): Unit","title":"Warn"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger/warn/#warn","text":"fun warn ( message : () -> Any ? ): Unit fun < E : Throwable > warn ( exception : E , message : ( E ) -> Any ? ): Unit","title":"warn"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger-test/","text":"hexagon_core / com.hexagonkt.helpers / LoggerTest LoggerTest \u00b6 class LoggerTest As the logger is only a facade and it is hard to check outputs, the only check is that no exceptions are thrown. Constructors \u00b6 Name Summary <init> As the logger is only a facade and it is hard to check outputs, the only check is that no exceptions are thrown. LoggerTest () Functions \u00b6 Name Summary A logger for an instance has the proper name fun A logger for an instance has the proper name () : Unit messages_are_logged_without_errors fun messages_are_logged_without_errors (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger-test/#loggertest","text":"class LoggerTest As the logger is only a facade and it is hard to check outputs, the only check is that no exceptions are thrown.","title":"LoggerTest"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger-test/#constructors","text":"Name Summary <init> As the logger is only a facade and it is hard to check outputs, the only check is that no exceptions are thrown. LoggerTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger-test/#functions","text":"Name Summary A logger for an instance has the proper name fun A logger for an instance has the proper name () : Unit messages_are_logged_without_errors fun messages_are_logged_without_errors (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger-test/-a logger for an instance has the proper name/","text":"hexagon_core / com.hexagonkt.helpers / LoggerTest / A logger for an instance has the proper name A logger for an instance has the proper name \u00b6 fun A logger for an instance has the proper name () : Unit","title":" a logger for an instance has the proper name"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger-test/-a logger for an instance has the proper name/#a-logger-for-an-instance-has-the-proper-name","text":"fun A logger for an instance has the proper name () : Unit","title":"A logger for an instance has the proper name"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger-test/-init-/","text":"hexagon_core / com.hexagonkt.helpers / LoggerTest / <init> <init> \u00b6 LoggerTest () As the logger is only a facade and it is hard to check outputs, the only check is that no exceptions are thrown.","title":" init "},{"location":"hexagon_core/com.hexagonkt.helpers/-logger-test/-init-/#init","text":"LoggerTest () As the logger is only a facade and it is hard to check outputs, the only check is that no exceptions are thrown.","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger-test/messages_are_logged_without_errors/","text":"hexagon_core / com.hexagonkt.helpers / LoggerTest / messages_are_logged_without_errors messages_are_logged_without_errors \u00b6 fun messages_are_logged_without_errors (): Unit","title":"Messages are logged without errors"},{"location":"hexagon_core/com.hexagonkt.helpers/-logger-test/messages_are_logged_without_errors/#messages_are_logged_without_errors","text":"fun messages_are_logged_without_errors (): Unit","title":"messages_are_logged_without_errors"},{"location":"hexagon_core/com.hexagonkt.helpers/-multiple-exception/","text":"hexagon_core / com.hexagonkt.helpers / MultipleException MultipleException \u00b6 class MultipleException : RuntimeException Exception with a list of causes. Cause is null as it can't be tell which one of the list is the cause. A coded multiple exception should be created this way: CodedException(400, \"Many errors\", MultipleException()) To pass a list of causes CodedException (500, \"Error\", *list) Constructors \u00b6 Name Summary <init> MultipleException ( vararg causes : Throwable ) MultipleException ( message : String , causes : List < Throwable > ) MultipleException ( message : String , vararg causes : Throwable ) Exception with a list of causes. Cause is null as it can't be tell which one of the list is the cause. MultipleException ( causes : List < Throwable > , message : String = \"\" ) Properties \u00b6 Name Summary causes val causes: List < Throwable >","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/-multiple-exception/#multipleexception","text":"class MultipleException : RuntimeException Exception with a list of causes. Cause is null as it can't be tell which one of the list is the cause. A coded multiple exception should be created this way: CodedException(400, \"Many errors\", MultipleException()) To pass a list of causes CodedException (500, \"Error\", *list)","title":"MultipleException"},{"location":"hexagon_core/com.hexagonkt.helpers/-multiple-exception/#constructors","text":"Name Summary <init> MultipleException ( vararg causes : Throwable ) MultipleException ( message : String , causes : List < Throwable > ) MultipleException ( message : String , vararg causes : Throwable ) Exception with a list of causes. Cause is null as it can't be tell which one of the list is the cause. MultipleException ( causes : List < Throwable > , message : String = \"\" )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.helpers/-multiple-exception/#properties","text":"Name Summary causes val causes: List < Throwable >","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.helpers/-multiple-exception/-init-/","text":"hexagon_core / com.hexagonkt.helpers / MultipleException / <init> <init> \u00b6 MultipleException ( vararg causes : Throwable ) MultipleException ( message : String , causes : List < Throwable > ) MultipleException ( message : String , vararg causes : Throwable ) `` MultipleException ( causes : List < Throwable > , message : String = \"\" ) Exception with a list of causes. Cause is null as it can't be tell which one of the list is the cause. A coded multiple exception should be created this way: CodedException(400, \"Many errors\", MultipleException()) To pass a list of causes CodedException (500, \"Error\", *list)","title":" init "},{"location":"hexagon_core/com.hexagonkt.helpers/-multiple-exception/-init-/#init","text":"MultipleException ( vararg causes : Throwable ) MultipleException ( message : String , causes : List < Throwable > ) MultipleException ( message : String , vararg causes : Throwable ) `` MultipleException ( causes : List < Throwable > , message : String = \"\" ) Exception with a list of causes. Cause is null as it can't be tell which one of the list is the cause. A coded multiple exception should be created this way: CodedException(400, \"Many errors\", MultipleException()) To pass a list of causes CodedException (500, \"Error\", *list)","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.helpers/-multiple-exception/causes/","text":"hexagon_core / com.hexagonkt.helpers / MultipleException / causes causes \u00b6 val causes: List < Throwable >","title":"Causes"},{"location":"hexagon_core/com.hexagonkt.helpers/-multiple-exception/causes/#causes","text":"val causes: List < Throwable >","title":"causes"},{"location":"hexagon_core/com.hexagonkt.helpers/-multiple-exception-test/","text":"hexagon_core / com.hexagonkt.helpers / MultipleExceptionTest MultipleExceptionTest \u00b6 class MultipleExceptionTest Constructors \u00b6 Name Summary <init> MultipleExceptionTest () Functions \u00b6 Name Summary 'MultipleException' contains a list of causes fun 'MultipleException' contains a list of causes (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/-multiple-exception-test/#multipleexceptiontest","text":"class MultipleExceptionTest","title":"MultipleExceptionTest"},{"location":"hexagon_core/com.hexagonkt.helpers/-multiple-exception-test/#constructors","text":"Name Summary <init> MultipleExceptionTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.helpers/-multiple-exception-test/#functions","text":"Name Summary 'MultipleException' contains a list of causes fun 'MultipleException' contains a list of causes (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.helpers/-multiple-exception-test/'-multiple-exception' contains a list of causes/","text":"hexagon_core / com.hexagonkt.helpers / MultipleExceptionTest / 'MultipleException' contains a list of causes 'MultipleException' contains a list of causes \u00b6 fun 'MultipleException' contains a list of causes (): Unit","title":"' multiple exception' contains a list of causes"},{"location":"hexagon_core/com.hexagonkt.helpers/-multiple-exception-test/'-multiple-exception' contains a list of causes/#multipleexception-contains-a-list-of-causes","text":"fun 'MultipleException' contains a list of causes (): Unit","title":"'MultipleException' contains a list of causes"},{"location":"hexagon_core/com.hexagonkt.helpers/-multiple-exception-test/-init-/","text":"hexagon_core / com.hexagonkt.helpers / MultipleExceptionTest / <init> <init> \u00b6 MultipleExceptionTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.helpers/-multiple-exception-test/-init-/#init","text":"MultipleExceptionTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map/","text":"hexagon_core / com.hexagonkt.helpers / RequiredKeysMap RequiredKeysMap \u00b6 class RequiredKeysMap <K, V> : Map < K , V > Constructors \u00b6 Name Summary <init> RequiredKeysMap ( map : Map < K , V > ) Functions \u00b6 Name Summary get operator fun get ( key : K ): V","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map/#requiredkeysmap","text":"class RequiredKeysMap <K, V> : Map < K , V >","title":"RequiredKeysMap"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map/#constructors","text":"Name Summary <init> RequiredKeysMap ( map : Map < K , V > )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map/#functions","text":"Name Summary get operator fun get ( key : K ): V","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map/-init-/","text":"hexagon_core / com.hexagonkt.helpers / RequiredKeysMap / <init> <init> \u00b6 RequiredKeysMap ( map : Map < K , V > )","title":" init "},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map/-init-/#init","text":"RequiredKeysMap ( map : Map < K , V > )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map/get/","text":"hexagon_core / com.hexagonkt.helpers / RequiredKeysMap / get get \u00b6 operator fun get ( key : K ): V","title":"Get"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map/get/#get","text":"operator fun get ( key : K ): V","title":"get"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map-test/","text":"hexagon_core / com.hexagonkt.helpers / RequiredKeysMapTest RequiredKeysMapTest \u00b6 class RequiredKeysMapTest Constructors \u00b6 Name Summary <init> RequiredKeysMapTest () Properties \u00b6 Name Summary map val map: RequiredKeysMap < String , String > Functions \u00b6 Name Summary Missing keys raise an exception instead returning 'null' fun Missing keys raise an exception instead returning 'null' (): Unit Values are accessed correctly fun Values are accessed correctly (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map-test/#requiredkeysmaptest","text":"class RequiredKeysMapTest","title":"RequiredKeysMapTest"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map-test/#constructors","text":"Name Summary <init> RequiredKeysMapTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map-test/#properties","text":"Name Summary map val map: RequiredKeysMap < String , String >","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map-test/#functions","text":"Name Summary Missing keys raise an exception instead returning 'null' fun Missing keys raise an exception instead returning 'null' (): Unit Values are accessed correctly fun Values are accessed correctly (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map-test/-init-/","text":"hexagon_core / com.hexagonkt.helpers / RequiredKeysMapTest / <init> <init> \u00b6 RequiredKeysMapTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map-test/-init-/#init","text":"RequiredKeysMapTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map-test/-missing keys raise an exception instead returning 'null'/","text":"hexagon_core / com.hexagonkt.helpers / RequiredKeysMapTest / Missing keys raise an exception instead returning 'null' Missing keys raise an exception instead returning 'null' \u00b6 fun Missing keys raise an exception instead returning 'null' (): Unit","title":" missing keys raise an exception instead returning 'null'"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map-test/-missing keys raise an exception instead returning 'null'/#missing-keys-raise-an-exception-instead-returning-null","text":"fun Missing keys raise an exception instead returning 'null' (): Unit","title":"Missing keys raise an exception instead returning 'null'"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map-test/-values are accessed correctly/","text":"hexagon_core / com.hexagonkt.helpers / RequiredKeysMapTest / Values are accessed correctly Values are accessed correctly \u00b6 fun Values are accessed correctly (): Unit","title":" values are accessed correctly"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map-test/-values are accessed correctly/#values-are-accessed-correctly","text":"fun Values are accessed correctly (): Unit","title":"Values are accessed correctly"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map-test/map/","text":"hexagon_core / com.hexagonkt.helpers / RequiredKeysMapTest / map map \u00b6 val map: RequiredKeysMap < String , String >","title":"Map"},{"location":"hexagon_core/com.hexagonkt.helpers/-required-keys-map-test/map/#map","text":"val map: RequiredKeysMap < String , String >","title":"map"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/","text":"hexagon_core / com.hexagonkt.helpers / Resource Resource \u00b6 class Resource Absolute resource (start from root package without starting slash). Ie: foo/bar/res.txt instead /foo/bar/res.txt Constructors \u00b6 Name Summary <init> Absolute resource (start from root package without starting slash). Ie: foo/bar/res.txt instead /foo/bar/res.txt Resource ( path : String ) Properties \u00b6 Name Summary path val path: String Functions \u00b6 Name Summary readText fun readText (): String ? requireStream fun requireStream (): InputStream requireUrl fun requireUrl (): URL stream fun stream (): InputStream ? url fun url (): URL ? Extension Functions \u00b6 Name Summary parse fun < T : Any > Resource .parse ( type : KClass < T > ): T fun < T : Any > Resource .parse (): T parseObjects fun < T : Any > Resource .parseObjects ( type : KClass < T > ): List < T > fun < T : Any > Resource .parseObjects (): List < T >","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/#resource","text":"class Resource Absolute resource (start from root package without starting slash). Ie: foo/bar/res.txt instead /foo/bar/res.txt","title":"Resource"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/#constructors","text":"Name Summary <init> Absolute resource (start from root package without starting slash). Ie: foo/bar/res.txt instead /foo/bar/res.txt Resource ( path : String )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/#properties","text":"Name Summary path val path: String","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/#functions","text":"Name Summary readText fun readText (): String ? requireStream fun requireStream (): InputStream requireUrl fun requireUrl (): URL stream fun stream (): InputStream ? url fun url (): URL ?","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/#extension-functions","text":"Name Summary parse fun < T : Any > Resource .parse ( type : KClass < T > ): T fun < T : Any > Resource .parse (): T parseObjects fun < T : Any > Resource .parseObjects ( type : KClass < T > ): List < T > fun < T : Any > Resource .parseObjects (): List < T >","title":"Extension Functions"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/-init-/","text":"hexagon_core / com.hexagonkt.helpers / Resource / <init> <init> \u00b6 Resource ( path : String ) Absolute resource (start from root package without starting slash). Ie: foo/bar/res.txt instead /foo/bar/res.txt","title":" init "},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/-init-/#init","text":"Resource ( path : String ) Absolute resource (start from root package without starting slash). Ie: foo/bar/res.txt instead /foo/bar/res.txt","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/path/","text":"hexagon_core / com.hexagonkt.helpers / Resource / path path \u00b6 val path: String","title":"Path"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/path/#path","text":"val path: String","title":"path"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/read-text/","text":"hexagon_core / com.hexagonkt.helpers / Resource / readText readText \u00b6 fun readText (): String ?","title":"Read text"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/read-text/#readtext","text":"fun readText (): String ?","title":"readText"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/require-stream/","text":"hexagon_core / com.hexagonkt.helpers / Resource / requireStream requireStream \u00b6 fun requireStream (): InputStream","title":"Require stream"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/require-stream/#requirestream","text":"fun requireStream (): InputStream","title":"requireStream"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/require-url/","text":"hexagon_core / com.hexagonkt.helpers / Resource / requireUrl requireUrl \u00b6 fun requireUrl (): URL","title":"Require url"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/require-url/#requireurl","text":"fun requireUrl (): URL","title":"requireUrl"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/stream/","text":"hexagon_core / com.hexagonkt.helpers / Resource / stream stream \u00b6 fun stream (): InputStream ?","title":"Stream"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/stream/#stream","text":"fun stream (): InputStream ?","title":"stream"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/url/","text":"hexagon_core / com.hexagonkt.helpers / Resource / url url \u00b6 fun url (): URL ?","title":"Url"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource/url/#url","text":"fun url (): URL ?","title":"url"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource-test/","text":"hexagon_core / com.hexagonkt.helpers / ResourceTest ResourceTest \u00b6 class ResourceTest Constructors \u00b6 Name Summary <init> ResourceTest () Functions \u00b6 Name Summary readResource returns resource's text fun readResource returns resource ' s text (): Unit Require resource fun Require resource (): Unit Resource folder fun Resource folder (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource-test/#resourcetest","text":"class ResourceTest","title":"ResourceTest"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource-test/#constructors","text":"Name Summary <init> ResourceTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource-test/#functions","text":"Name Summary readResource returns resource's text fun readResource returns resource ' s text (): Unit Require resource fun Require resource (): Unit Resource folder fun Resource folder (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource-test/-init-/","text":"hexagon_core / com.hexagonkt.helpers / ResourceTest / <init> <init> \u00b6 ResourceTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.helpers/-resource-test/-init-/#init","text":"ResourceTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource-test/-require resource/","text":"hexagon_core / com.hexagonkt.helpers / ResourceTest / Require resource Require resource \u00b6 fun Require resource (): Unit","title":" require resource"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource-test/-require resource/#require-resource","text":"fun Require resource (): Unit","title":"Require resource"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource-test/-resource folder/","text":"hexagon_core / com.hexagonkt.helpers / ResourceTest / Resource folder Resource folder \u00b6 fun Resource folder (): Unit","title":" resource folder"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource-test/-resource folder/#resource-folder","text":"fun Resource folder (): Unit","title":"Resource folder"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource-test/read-resource returns resource's text/","text":"hexagon_core / com.hexagonkt.helpers / ResourceTest / readResource returns resource's text readResource returns resource's text \u00b6 fun readResource returns resource ' s text (): Unit","title":"Read resource returns resource's text"},{"location":"hexagon_core/com.hexagonkt.helpers/-resource-test/read-resource returns resource's text/#readresource-returns-resources-text","text":"fun readResource returns resource ' s text (): Unit","title":"readResource returns resource's text"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-samples-test/","text":"hexagon_core / com.hexagonkt.helpers / StringsSamplesTest StringsSamplesTest \u00b6 class StringsSamplesTest Constructors \u00b6 Name Summary <init> StringsSamplesTest () Functions \u00b6 Name Summary filterVarsExample fun filterVarsExample (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-samples-test/#stringssamplestest","text":"class StringsSamplesTest","title":"StringsSamplesTest"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-samples-test/#constructors","text":"Name Summary <init> StringsSamplesTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-samples-test/#functions","text":"Name Summary filterVarsExample fun filterVarsExample (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-samples-test/-init-/","text":"hexagon_core / com.hexagonkt.helpers / StringsSamplesTest / <init> <init> \u00b6 StringsSamplesTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-samples-test/-init-/#init","text":"StringsSamplesTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-samples-test/filter-vars-example/","text":"hexagon_core / com.hexagonkt.helpers / StringsSamplesTest / filterVarsExample filterVarsExample \u00b6 fun filterVarsExample (): Unit","title":"Filter vars example"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-samples-test/filter-vars-example/#filtervarsexample","text":"fun filterVarsExample (): Unit","title":"filterVarsExample"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/","text":"hexagon_core / com.hexagonkt.helpers / StringsTest StringsTest \u00b6 class StringsTest Constructors \u00b6 Name Summary <init> StringsTest () Functions \u00b6 Name Summary Banner logs the proper message fun Banner logs the proper message (): Unit Converting empty text to camel case fails fun Converting empty text to camel case fails (): Unit Converting valid camel case texts to snake case succeed fun Converting valid camel case texts to snake case succeed (): Unit Converting valid snake case texts to camel case succeed fun Converting valid snake case texts to camel case succeed (): Unit Filter ignores empty parameters fun Filter ignores empty parameters (): Unit Filter replaces all occurences of variables with their values fun Filter replaces all occurences of variables with their values (): Unit Filter returns the given string if no parameters are set fun Filter returns the given string if no parameters are set () : Unit Filter returns the same string if no variables are defined in it fun Filter returns the same string if no variables are defined in it () : Unit Filter returns the same string if variable values are not found fun Filter returns the same string if variable values are not found () : Unit Find groups takes care of 'nulls' fun Find groups takes care of 'nulls' (): Unit Glob is translated to proper regular expression fun Glob is translated to proper regular expression (): Unit Normalize works as expected fun Normalize works as expected (): Unit Utf8 returns proper characters fun Utf8 returns proper characters (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/#stringstest","text":"class StringsTest","title":"StringsTest"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/#constructors","text":"Name Summary <init> StringsTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/#functions","text":"Name Summary Banner logs the proper message fun Banner logs the proper message (): Unit Converting empty text to camel case fails fun Converting empty text to camel case fails (): Unit Converting valid camel case texts to snake case succeed fun Converting valid camel case texts to snake case succeed (): Unit Converting valid snake case texts to camel case succeed fun Converting valid snake case texts to camel case succeed (): Unit Filter ignores empty parameters fun Filter ignores empty parameters (): Unit Filter replaces all occurences of variables with their values fun Filter replaces all occurences of variables with their values (): Unit Filter returns the given string if no parameters are set fun Filter returns the given string if no parameters are set () : Unit Filter returns the same string if no variables are defined in it fun Filter returns the same string if no variables are defined in it () : Unit Filter returns the same string if variable values are not found fun Filter returns the same string if variable values are not found () : Unit Find groups takes care of 'nulls' fun Find groups takes care of 'nulls' (): Unit Glob is translated to proper regular expression fun Glob is translated to proper regular expression (): Unit Normalize works as expected fun Normalize works as expected (): Unit Utf8 returns proper characters fun Utf8 returns proper characters (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-banner logs the proper message/","text":"hexagon_core / com.hexagonkt.helpers / StringsTest / Banner logs the proper message Banner logs the proper message \u00b6 fun Banner logs the proper message (): Unit","title":" banner logs the proper message"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-banner logs the proper message/#banner-logs-the-proper-message","text":"fun Banner logs the proper message (): Unit","title":"Banner logs the proper message"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-converting empty text to camel case fails/","text":"hexagon_core / com.hexagonkt.helpers / StringsTest / Converting empty text to camel case fails Converting empty text to camel case fails \u00b6 fun Converting empty text to camel case fails (): Unit","title":" converting empty text to camel case fails"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-converting empty text to camel case fails/#converting-empty-text-to-camel-case-fails","text":"fun Converting empty text to camel case fails (): Unit","title":"Converting empty text to camel case fails"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-converting valid camel case texts to snake case succeed/","text":"hexagon_core / com.hexagonkt.helpers / StringsTest / Converting valid camel case texts to snake case succeed Converting valid camel case texts to snake case succeed \u00b6 fun Converting valid camel case texts to snake case succeed (): Unit","title":" converting valid camel case texts to snake case succeed"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-converting valid camel case texts to snake case succeed/#converting-valid-camel-case-texts-to-snake-case-succeed","text":"fun Converting valid camel case texts to snake case succeed (): Unit","title":"Converting valid camel case texts to snake case succeed"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-converting valid snake case texts to camel case succeed/","text":"hexagon_core / com.hexagonkt.helpers / StringsTest / Converting valid snake case texts to camel case succeed Converting valid snake case texts to camel case succeed \u00b6 fun Converting valid snake case texts to camel case succeed (): Unit","title":" converting valid snake case texts to camel case succeed"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-converting valid snake case texts to camel case succeed/#converting-valid-snake-case-texts-to-camel-case-succeed","text":"fun Converting valid snake case texts to camel case succeed (): Unit","title":"Converting valid snake case texts to camel case succeed"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-filter ignores empty parameters/","text":"hexagon_core / com.hexagonkt.helpers / StringsTest / Filter ignores empty parameters Filter ignores empty parameters \u00b6 fun Filter ignores empty parameters (): Unit","title":" filter ignores empty parameters"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-filter ignores empty parameters/#filter-ignores-empty-parameters","text":"fun Filter ignores empty parameters (): Unit","title":"Filter ignores empty parameters"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-filter replaces all occurences of variables with their values/","text":"hexagon_core / com.hexagonkt.helpers / StringsTest / Filter replaces all occurences of variables with their values Filter replaces all occurences of variables with their values \u00b6 fun Filter replaces all occurences of variables with their values (): Unit","title":" filter replaces all occurences of variables with their values"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-filter replaces all occurences of variables with their values/#filter-replaces-all-occurences-of-variables-with-their-values","text":"fun Filter replaces all occurences of variables with their values (): Unit","title":"Filter replaces all occurences of variables with their values"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-filter returns the given string if no parameters are set/","text":"hexagon_core / com.hexagonkt.helpers / StringsTest / Filter returns the given string if no parameters are set Filter returns the given string if no parameters are set \u00b6 fun Filter returns the given string if no parameters are set () : Unit","title":" filter returns the given string if no parameters are set"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-filter returns the given string if no parameters are set/#filter-returns-the-given-string-if-no-parameters-are-set","text":"fun Filter returns the given string if no parameters are set () : Unit","title":"Filter returns the given string if no parameters are set"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-filter returns the same string if no variables are defined in it/","text":"hexagon_core / com.hexagonkt.helpers / StringsTest / Filter returns the same string if no variables are defined in it Filter returns the same string if no variables are defined in it \u00b6 fun Filter returns the same string if no variables are defined in it () : Unit","title":" filter returns the same string if no variables are defined in it"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-filter returns the same string if no variables are defined in it/#filter-returns-the-same-string-if-no-variables-are-defined-in-it","text":"fun Filter returns the same string if no variables are defined in it () : Unit","title":"Filter returns the same string if no variables are defined in it"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-filter returns the same string if variable values are not found/","text":"hexagon_core / com.hexagonkt.helpers / StringsTest / Filter returns the same string if variable values are not found Filter returns the same string if variable values are not found \u00b6 fun Filter returns the same string if variable values are not found () : Unit","title":" filter returns the same string if variable values are not found"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-filter returns the same string if variable values are not found/#filter-returns-the-same-string-if-variable-values-are-not-found","text":"fun Filter returns the same string if variable values are not found () : Unit","title":"Filter returns the same string if variable values are not found"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-find groups takes care of 'nulls'/","text":"hexagon_core / com.hexagonkt.helpers / StringsTest / Find groups takes care of 'nulls' Find groups takes care of 'nulls' \u00b6 fun Find groups takes care of 'nulls' (): Unit","title":" find groups takes care of 'nulls'"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-find groups takes care of 'nulls'/#find-groups-takes-care-of-nulls","text":"fun Find groups takes care of 'nulls' (): Unit","title":"Find groups takes care of 'nulls'"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-glob is translated to proper regular expression/","text":"hexagon_core / com.hexagonkt.helpers / StringsTest / Glob is translated to proper regular expression Glob is translated to proper regular expression \u00b6 fun Glob is translated to proper regular expression (): Unit","title":" glob is translated to proper regular expression"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-glob is translated to proper regular expression/#glob-is-translated-to-proper-regular-expression","text":"fun Glob is translated to proper regular expression (): Unit","title":"Glob is translated to proper regular expression"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-init-/","text":"hexagon_core / com.hexagonkt.helpers / StringsTest / <init> <init> \u00b6 StringsTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-init-/#init","text":"StringsTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-normalize works as expected/","text":"hexagon_core / com.hexagonkt.helpers / StringsTest / Normalize works as expected Normalize works as expected \u00b6 fun Normalize works as expected (): Unit","title":" normalize works as expected"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-normalize works as expected/#normalize-works-as-expected","text":"fun Normalize works as expected (): Unit","title":"Normalize works as expected"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-utf8 returns proper characters/","text":"hexagon_core / com.hexagonkt.helpers / StringsTest / Utf8 returns proper characters Utf8 returns proper characters \u00b6 fun Utf8 returns proper characters (): Unit","title":" utf8 returns proper characters"},{"location":"hexagon_core/com.hexagonkt.helpers/-strings-test/-utf8 returns proper characters/#utf8-returns-proper-characters","text":"fun Utf8 returns proper characters (): Unit","title":"Utf8 returns proper characters"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-date/","text":"hexagon_core / com.hexagonkt.helpers / java.time.LocalDate Extensions for java.time.LocalDate \u00b6 Name Summary toDate fun LocalDate . toDate (): Date toNumber Converts a date to an integer with the following format: YYYYMMDD . fun LocalDate . toNumber (): Int","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-date/#extensions-for-javatimelocaldate","text":"Name Summary toDate fun LocalDate . toDate (): Date toNumber Converts a date to an integer with the following format: YYYYMMDD . fun LocalDate . toNumber (): Int","title":"Extensions for java.time.LocalDate"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-date/to-date/","text":"hexagon_core / com.hexagonkt.helpers / java.time.LocalDate / toDate toDate \u00b6 fun LocalDate . toDate (): Date","title":"To date"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-date/to-date/#todate","text":"fun LocalDate . toDate (): Date","title":"toDate"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-date/to-number/","text":"hexagon_core / com.hexagonkt.helpers / java.time.LocalDate / toNumber toNumber \u00b6 fun LocalDate . toNumber (): Int Converts a date to an integer with the following format: YYYYMMDD . Receiver The date to be converted to a number. Return Numeric representation of the given date.","title":"To number"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-date/to-number/#tonumber","text":"fun LocalDate . toNumber (): Int Converts a date to an integer with the following format: YYYYMMDD . Receiver The date to be converted to a number. Return Numeric representation of the given date.","title":"toNumber"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-date-time/","text":"hexagon_core / com.hexagonkt.helpers / java.time.LocalDateTime Extensions for java.time.LocalDateTime \u00b6 Name Summary toDate fun LocalDateTime . toDate (): Date toNumber Converts a date time to a number with the following format: YYYYMMDDHHmmss . fun LocalDateTime . toNumber (): Long withZone Returns the date time in a given time zone for a local date time. fun LocalDateTime . withZone ( zoneId : ZoneId = Jvm . timeZone . toZoneId ()): ZonedDateTime","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-date-time/#extensions-for-javatimelocaldatetime","text":"Name Summary toDate fun LocalDateTime . toDate (): Date toNumber Converts a date time to a number with the following format: YYYYMMDDHHmmss . fun LocalDateTime . toNumber (): Long withZone Returns the date time in a given time zone for a local date time. fun LocalDateTime . withZone ( zoneId : ZoneId = Jvm . timeZone . toZoneId ()): ZonedDateTime","title":"Extensions for java.time.LocalDateTime"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-date-time/to-date/","text":"hexagon_core / com.hexagonkt.helpers / java.time.LocalDateTime / toDate toDate \u00b6 fun LocalDateTime . toDate (): Date","title":"To date"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-date-time/to-date/#todate","text":"fun LocalDateTime . toDate (): Date","title":"toDate"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-date-time/to-number/","text":"hexagon_core / com.hexagonkt.helpers / java.time.LocalDateTime / toNumber toNumber \u00b6 fun LocalDateTime . toNumber (): Long Converts a date time to a number with the following format: YYYYMMDDHHmmss . Receiver The date to be converted to a number. Return Numeric representation of the given date.","title":"To number"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-date-time/to-number/#tonumber","text":"fun LocalDateTime . toNumber (): Long Converts a date time to a number with the following format: YYYYMMDDHHmmss . Receiver The date to be converted to a number. Return Numeric representation of the given date.","title":"toNumber"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-date-time/with-zone/","text":"hexagon_core / com.hexagonkt.helpers / java.time.LocalDateTime / withZone withZone \u00b6 fun LocalDateTime . withZone ( zoneId : ZoneId = Jvm . timeZone . toZoneId ()): ZonedDateTime Returns the date time in a given time zone for a local date time. Parameters \u00b6 zoneId - Id of the target zone of the passed local date time. Receiver The local date time to be moved to another time zone. Return The received date time at the given zoneId .","title":"With zone"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-date-time/with-zone/#withzone","text":"fun LocalDateTime . withZone ( zoneId : ZoneId = Jvm . timeZone . toZoneId ()): ZonedDateTime Returns the date time in a given time zone for a local date time.","title":"withZone"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-date-time/with-zone/#parameters","text":"zoneId - Id of the target zone of the passed local date time. Receiver The local date time to be moved to another time zone. Return The received date time at the given zoneId .","title":"Parameters"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-time/","text":"hexagon_core / com.hexagonkt.helpers / java.time.LocalTime Extensions for java.time.LocalTime \u00b6 Name Summary toNumber Converts a time to an integer with the following format: HHmmssSSS . fun LocalTime . toNumber (): Int","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-time/#extensions-for-javatimelocaltime","text":"Name Summary toNumber Converts a time to an integer with the following format: HHmmssSSS . fun LocalTime . toNumber (): Int","title":"Extensions for java.time.LocalTime"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-time/to-number/","text":"hexagon_core / com.hexagonkt.helpers / java.time.LocalTime / toNumber toNumber \u00b6 fun LocalTime . toNumber (): Int Converts a time to an integer with the following format: HHmmssSSS . Receiver The time to be converted to a number. Return Numeric representation of the given time.","title":"To number"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-local-time/to-number/#tonumber","text":"fun LocalTime . toNumber (): Int Converts a time to an integer with the following format: HHmmssSSS . Receiver The time to be converted to a number. Return Numeric representation of the given time.","title":"toNumber"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-zoned-date-time/","text":"hexagon_core / com.hexagonkt.helpers / java.time.ZonedDateTime Extensions for java.time.ZonedDateTime \u00b6 Name Summary toDate . fun ZonedDateTime . toDate (): Date","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-zoned-date-time/#extensions-for-javatimezoneddatetime","text":"Name Summary toDate . fun ZonedDateTime . toDate (): Date","title":"Extensions for java.time.ZonedDateTime"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-zoned-date-time/to-date/","text":"hexagon_core / com.hexagonkt.helpers / java.time.ZonedDateTime / toDate toDate \u00b6 fun ZonedDateTime . toDate (): Date . Receiver . Return .","title":"To date"},{"location":"hexagon_core/com.hexagonkt.helpers/java.time.-zoned-date-time/to-date/#todate","text":"fun ZonedDateTime . toDate (): Date . Receiver . Return .","title":"toDate"},{"location":"hexagon_core/com.hexagonkt.helpers/java.util.-date/","text":"hexagon_core / com.hexagonkt.helpers / java.util.Date Extensions for java.util.Date \u00b6 Name Summary toLocalDate fun Date .toLocalDate (): LocalDate toLocalDateTime fun Date .toLocalDateTime (): LocalDateTime","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/java.util.-date/#extensions-for-javautildate","text":"Name Summary toLocalDate fun Date .toLocalDate (): LocalDate toLocalDateTime fun Date .toLocalDateTime (): LocalDateTime","title":"Extensions for java.util.Date"},{"location":"hexagon_core/com.hexagonkt.helpers/java.util.-date/to-local-date-time/","text":"hexagon_core / com.hexagonkt.helpers / java.util.Date / toLocalDateTime toLocalDateTime \u00b6 fun Date .toLocalDateTime (): LocalDateTime","title":"To local date time"},{"location":"hexagon_core/com.hexagonkt.helpers/java.util.-date/to-local-date-time/#tolocaldatetime","text":"fun Date .toLocalDateTime (): LocalDateTime","title":"toLocalDateTime"},{"location":"hexagon_core/com.hexagonkt.helpers/java.util.-date/to-local-date/","text":"hexagon_core / com.hexagonkt.helpers / java.util.Date / toLocalDate toLocalDate \u00b6 fun Date .toLocalDate (): LocalDate","title":"To local date"},{"location":"hexagon_core/com.hexagonkt.helpers/java.util.-date/to-local-date/#tolocaldate","text":"fun Date .toLocalDate (): LocalDate","title":"toLocalDate"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-int/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.Int Extensions for kotlin.Int \u00b6 Name Summary toLocalDate Parses a date from a formatted integer with this format: YYYYMMDD . fun Int .toLocalDate (): LocalDate toLocalTime Parses a time from a formatted integer with this format: HHmmssSSS . fun Int .toLocalTime (): LocalTime","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-int/#extensions-for-kotlinint","text":"Name Summary toLocalDate Parses a date from a formatted integer with this format: YYYYMMDD . fun Int .toLocalDate (): LocalDate toLocalTime Parses a time from a formatted integer with this format: HHmmssSSS . fun Int .toLocalTime (): LocalTime","title":"Extensions for kotlin.Int"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-int/to-local-date/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.Int / toLocalDate toLocalDate \u00b6 fun Int .toLocalDate (): LocalDate Parses a date from a formatted integer with this format: YYYYMMDD . Receiver Number to be converted to a date. Return Local date representation of the given number.","title":"To local date"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-int/to-local-date/#tolocaldate","text":"fun Int .toLocalDate (): LocalDate Parses a date from a formatted integer with this format: YYYYMMDD . Receiver Number to be converted to a date. Return Local date representation of the given number.","title":"toLocalDate"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-int/to-local-time/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.Int / toLocalTime toLocalTime \u00b6 fun Int .toLocalTime (): LocalTime Parses a time from a formatted integer with this format: HHmmssSSS . Receiver Number to be converted to a time. Return Local time representation of the given number.","title":"To local time"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-int/to-local-time/#tolocaltime","text":"fun Int .toLocalTime (): LocalTime Parses a time from a formatted integer with this format: HHmmssSSS . Receiver Number to be converted to a time. Return Local time representation of the given number.","title":"toLocalTime"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-long/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.Long Extensions for kotlin.Long \u00b6 Name Summary toLocalDateTime Parses a date time from a formatted number with this format: YYYYMMDDHHmmss . fun Long .toLocalDateTime (): LocalDateTime","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-long/#extensions-for-kotlinlong","text":"Name Summary toLocalDateTime Parses a date time from a formatted number with this format: YYYYMMDDHHmmss . fun Long .toLocalDateTime (): LocalDateTime","title":"Extensions for kotlin.Long"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-long/to-local-date-time/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.Long / toLocalDateTime toLocalDateTime \u00b6 fun Long .toLocalDateTime (): LocalDateTime Parses a date time from a formatted number with this format: YYYYMMDDHHmmss . Receiver Number to be converted to a date time. Return Local date time representation of the given number.","title":"To local date time"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-long/to-local-date-time/#tolocaldatetime","text":"fun Long .toLocalDateTime (): LocalDateTime Parses a date time from a formatted number with this format: YYYYMMDDHHmmss . Receiver Number to be converted to a date time. Return Local date time representation of the given number.","title":"toLocalDateTime"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.String Extensions for kotlin.String \u00b6 Name Summary banner Formats the string as a banner with a delimiter above and below text. The character used to render the delimiter is defined. fun String .banner ( bannerDelimiter : String = \"*\" ): String camelToSnake Transforms the target string from camel case to snake case. fun String .camelToSnake (): String filter fun String .filter ( prefix : String , suffix : String , vararg parameters : Pair < String , String > ): String filterVars Filters the target string substituting each key by its value. The keys format is: # { key } and all occurrences are replaced by the supplied value. fun String .filterVars ( parameters : Map <* , *> ): String fun String .filterVars ( vararg parameters : Pair <* , *> ): String globToRegex fun String .globToRegex (): Regex snakeToCamel Transforms the target string from snake case to camel case. fun String .snakeToCamel (): String stripAccents fun String .stripAccents (): String toStream fun String .toStream (): InputStream","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/#extensions-for-kotlinstring","text":"Name Summary banner Formats the string as a banner with a delimiter above and below text. The character used to render the delimiter is defined. fun String .banner ( bannerDelimiter : String = \"*\" ): String camelToSnake Transforms the target string from camel case to snake case. fun String .camelToSnake (): String filter fun String .filter ( prefix : String , suffix : String , vararg parameters : Pair < String , String > ): String filterVars Filters the target string substituting each key by its value. The keys format is: # { key } and all occurrences are replaced by the supplied value. fun String .filterVars ( parameters : Map <* , *> ): String fun String .filterVars ( vararg parameters : Pair <* , *> ): String globToRegex fun String .globToRegex (): Regex snakeToCamel Transforms the target string from snake case to camel case. fun String .snakeToCamel (): String stripAccents fun String .stripAccents (): String toStream fun String .toStream (): InputStream","title":"Extensions for kotlin.String"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/banner/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.String / banner banner \u00b6 fun String .banner ( bannerDelimiter : String = \"*\" ): String Formats the string as a banner with a delimiter above and below text. The character used to render the delimiter is defined. Parameters \u00b6 bannerDelimiter - Delimiter char for banners.","title":"Banner"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/banner/#banner","text":"fun String .banner ( bannerDelimiter : String = \"*\" ): String Formats the string as a banner with a delimiter above and below text. The character used to render the delimiter is defined.","title":"banner"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/banner/#parameters","text":"bannerDelimiter - Delimiter char for banners.","title":"Parameters"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/camel-to-snake/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.String / camelToSnake camelToSnake \u00b6 fun String .camelToSnake (): String Transforms the target string from camel case to snake case.","title":"Camel to snake"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/camel-to-snake/#cameltosnake","text":"fun String .camelToSnake (): String Transforms the target string from camel case to snake case.","title":"camelToSnake"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/filter-vars/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.String / filterVars filterVars \u00b6 fun String .filterVars ( parameters : Map <* , *> ): String Filters the target string substituting each key by its value. The keys format is: # { key } and all occurrences are replaced by the supplied value. If a variable does not have a parameter, it is left as it is. val template = \"User #{user}\" val parameters = mapOf < Any , Any >( \"user\" to \"John\" ) assert ( template . filterVars ( parameters ) == \"User John\" ) assert ( template . filterVars () == template ) Parameters \u00b6 parameters - The map with the list of key/value tuples. Return The filtered text or the same string if no values are passed or found in the text. fun String .filterVars ( vararg parameters : Pair <* , *> ): String","title":"Filter vars"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/filter-vars/#filtervars","text":"fun String .filterVars ( parameters : Map <* , *> ): String Filters the target string substituting each key by its value. The keys format is: # { key } and all occurrences are replaced by the supplied value. If a variable does not have a parameter, it is left as it is. val template = \"User #{user}\" val parameters = mapOf < Any , Any >( \"user\" to \"John\" ) assert ( template . filterVars ( parameters ) == \"User John\" ) assert ( template . filterVars () == template )","title":"filterVars"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/filter-vars/#parameters","text":"parameters - The map with the list of key/value tuples. Return The filtered text or the same string if no values are passed or found in the text. fun String .filterVars ( vararg parameters : Pair <* , *> ): String","title":"Parameters"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/filter/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.String / filter filter \u00b6 fun String .filter ( prefix : String , suffix : String , vararg parameters : Pair < String , String > ): String","title":"Filter"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/filter/#filter","text":"fun String .filter ( prefix : String , suffix : String , vararg parameters : Pair < String , String > ): String","title":"filter"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/glob-to-regex/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.String / globToRegex globToRegex \u00b6 fun String .globToRegex (): Regex","title":"Glob to regex"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/glob-to-regex/#globtoregex","text":"fun String .globToRegex (): Regex","title":"globToRegex"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/snake-to-camel/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.String / snakeToCamel snakeToCamel \u00b6 fun String .snakeToCamel (): String Transforms the target string from snake case to camel case.","title":"Snake to camel"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/snake-to-camel/#snaketocamel","text":"fun String .snakeToCamel (): String Transforms the target string from snake case to camel case.","title":"snakeToCamel"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/strip-accents/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.String / stripAccents stripAccents \u00b6 fun String .stripAccents (): String","title":"Strip accents"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/strip-accents/#stripaccents","text":"fun String .stripAccents (): String","title":"stripAccents"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/to-stream/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.String / toStream toStream \u00b6 fun String .toStream (): InputStream","title":"To stream"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-string/to-stream/#tostream","text":"fun String .toStream (): InputStream","title":"toStream"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-throwable/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.Throwable Extensions for kotlin.Throwable \u00b6 Name Summary filterStackTrace Returns the stack trace array of the frames that starts with the given prefix. fun Throwable .filterStackTrace ( prefix : String ): Array < out StackTraceElement > toText Returns this throwable as a text. fun Throwable .toText ( prefix : String = \"\" ): String","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-throwable/#extensions-for-kotlinthrowable","text":"Name Summary filterStackTrace Returns the stack trace array of the frames that starts with the given prefix. fun Throwable .filterStackTrace ( prefix : String ): Array < out StackTraceElement > toText Returns this throwable as a text. fun Throwable .toText ( prefix : String = \"\" ): String","title":"Extensions for kotlin.Throwable"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-throwable/filter-stack-trace/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.Throwable / filterStackTrace filterStackTrace \u00b6 fun Throwable .filterStackTrace ( prefix : String ): Array < out StackTraceElement > Returns the stack trace array of the frames that starts with the given prefix.","title":"Filter stack trace"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-throwable/filter-stack-trace/#filterstacktrace","text":"fun Throwable .filterStackTrace ( prefix : String ): Array < out StackTraceElement > Returns the stack trace array of the frames that starts with the given prefix.","title":"filterStackTrace"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-throwable/to-text/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.Throwable / toText toText \u00b6 fun Throwable .toText ( prefix : String = \"\" ): String Returns this throwable as a text.","title":"To text"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.-throwable/to-text/#totext","text":"fun Throwable .toText ( prefix : String = \"\" ): String Returns this throwable as a text.","title":"toText"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-collection/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.collections.Collection Extensions for kotlin.collections.Collection \u00b6 Name Summary ensureSize fun < Z > Collection < Z > . ensureSize ( count : IntRange ): Collection < Z >","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-collection/#extensions-for-kotlincollectionscollection","text":"Name Summary ensureSize fun < Z > Collection < Z > . ensureSize ( count : IntRange ): Collection < Z >","title":"Extensions for kotlin.collections.Collection"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-collection/ensure-size/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.collections.Collection / ensureSize ensureSize \u00b6 fun < Z > Collection < Z > . ensureSize ( count : IntRange ): Collection < Z >","title":"Ensure size"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-collection/ensure-size/#ensuresize","text":"fun < Z > Collection < Z > . ensureSize ( count : IntRange ): Collection < Z >","title":"ensureSize"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-list/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.collections.List Extensions for kotlin.collections.List \u00b6 Name Summary filterEmpty fun < V > List < V > . filterEmpty (): List < V >","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-list/#extensions-for-kotlincollectionslist","text":"Name Summary filterEmpty fun < V > List < V > . filterEmpty (): List < V >","title":"Extensions for kotlin.collections.List"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-list/filter-empty/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.collections.List / filterEmpty filterEmpty \u00b6 fun < V > List < V > . filterEmpty (): List < V >","title":"Filter empty"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-list/filter-empty/#filterempty","text":"fun < V > List < V > . filterEmpty (): List < V >","title":"filterEmpty"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-map/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.collections.Map Extensions for kotlin.collections.Map \u00b6 Name Summary filterEmpty fun < K , V > Map < K , V > . filterEmpty (): Map < K , V > get operator fun Map <* , *> . get ( vararg keys : Any ): Any ? require fun < K , V > Map < K , V > . require ( name : K ): V requireKeys fun < T : Any > Map <* , *> . requireKeys ( vararg name : Any ): T","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-map/#extensions-for-kotlincollectionsmap","text":"Name Summary filterEmpty fun < K , V > Map < K , V > . filterEmpty (): Map < K , V > get operator fun Map <* , *> . get ( vararg keys : Any ): Any ? require fun < K , V > Map < K , V > . require ( name : K ): V requireKeys fun < T : Any > Map <* , *> . requireKeys ( vararg name : Any ): T","title":"Extensions for kotlin.collections.Map"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-map/filter-empty/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.collections.Map / filterEmpty filterEmpty \u00b6 fun < K , V > Map < K , V > . filterEmpty (): Map < K , V >","title":"Filter empty"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-map/filter-empty/#filterempty","text":"fun < K , V > Map < K , V > . filterEmpty (): Map < K , V >","title":"filterEmpty"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-map/get/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.collections.Map / get get \u00b6 operator fun Map <* , *> . get ( vararg keys : Any ): Any ?","title":"Get"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-map/get/#get","text":"operator fun Map <* , *> . get ( vararg keys : Any ): Any ?","title":"get"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-map/require-keys/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.collections.Map / requireKeys requireKeys \u00b6 fun < T : Any > Map <* , *> . requireKeys ( vararg name : Any ): T","title":"Require keys"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-map/require-keys/#requirekeys","text":"fun < T : Any > Map <* , *> . requireKeys ( vararg name : Any ): T","title":"requireKeys"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-map/require/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.collections.Map / require require \u00b6 fun < K , V > Map < K , V > . require ( name : K ): V","title":"Require"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.collections.-map/require/#require","text":"fun < K , V > Map < K , V > . require ( name : K ): V","title":"require"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.text.-regex/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.text.Regex Extensions for kotlin.text.Regex \u00b6 Name Summary findGroups fun Regex .findGroups ( str : String ): List < MatchGroup >","title":"Home"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.text.-regex/#extensions-for-kotlintextregex","text":"Name Summary findGroups fun Regex .findGroups ( str : String ): List < MatchGroup >","title":"Extensions for kotlin.text.Regex"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.text.-regex/find-groups/","text":"hexagon_core / com.hexagonkt.helpers / kotlin.text.Regex / findGroups findGroups \u00b6 fun Regex .findGroups ( str : String ): List < MatchGroup >","title":"Find groups"},{"location":"hexagon_core/com.hexagonkt.helpers/kotlin.text.-regex/find-groups/#findgroups","text":"fun Regex .findGroups ( str : String ): List < MatchGroup >","title":"findGroups"},{"location":"hexagon_core/com.hexagonkt.http/","text":"hexagon_core / com.hexagonkt.http Package com.hexagonkt.http \u00b6 HTTP code shared between clients and servers and independent of third party libraries. Types \u00b6 Name Summary HttpTest class HttpTest Method Enum for the supported HTTP methods. enum class Method Path A path definition. It parses path patterns and extract values for parameters. data class Path PathTest TODO Check that URLs with blank parameters are not matched. Ie: /alpha/{param}/bravo is not matched by /alpha//bravo class PathTest Route data class Route RouteTest class RouteTest Extensions for External Classes \u00b6 Name Summary kotlin.String Properties \u00b6 Name Summary ALL Set containing all HTTP methods. val ALL: LinkedHashSet < Method > Functions \u00b6 Name Summary any Shortcut to create a route for a filter (with all methods). fun any ( path : String = \"/\" ): Route delete Shortcut to create a DELETE route. fun delete ( path : String = \"/\" ): Route get Shortcut to create a GET route. fun get ( path : String = \"/\" ): Route head Shortcut to create a HEAD route. fun head ( path : String = \"/\" ): Route httpDate fun httpDate ( date : LocalDateTime = LocalDateTime . now ()): String options Shortcut to create a OPTIONS route. fun options ( path : String = \"/\" ): Route parseQueryParameters fun parseQueryParameters ( query : String ): Map < String , List < String >> patch Shortcut to create a PATCH route. fun patch ( path : String = \"/\" ): Route post Shortcut to create a POST route. fun post ( path : String = \"/\" ): Route put Shortcut to create a PUT route. fun put ( path : String = \"/\" ): Route tracer Shortcut to create a TRACE route. fun tracer ( path : String = \"/\" ): Route","title":"Home"},{"location":"hexagon_core/com.hexagonkt.http/#package-comhexagonkthttp","text":"HTTP code shared between clients and servers and independent of third party libraries.","title":"Package com.hexagonkt.http"},{"location":"hexagon_core/com.hexagonkt.http/#types","text":"Name Summary HttpTest class HttpTest Method Enum for the supported HTTP methods. enum class Method Path A path definition. It parses path patterns and extract values for parameters. data class Path PathTest TODO Check that URLs with blank parameters are not matched. Ie: /alpha/{param}/bravo is not matched by /alpha//bravo class PathTest Route data class Route RouteTest class RouteTest","title":"Types"},{"location":"hexagon_core/com.hexagonkt.http/#extensions-for-external-classes","text":"Name Summary kotlin.String","title":"Extensions for External Classes"},{"location":"hexagon_core/com.hexagonkt.http/#properties","text":"Name Summary ALL Set containing all HTTP methods. val ALL: LinkedHashSet < Method >","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.http/#functions","text":"Name Summary any Shortcut to create a route for a filter (with all methods). fun any ( path : String = \"/\" ): Route delete Shortcut to create a DELETE route. fun delete ( path : String = \"/\" ): Route get Shortcut to create a GET route. fun get ( path : String = \"/\" ): Route head Shortcut to create a HEAD route. fun head ( path : String = \"/\" ): Route httpDate fun httpDate ( date : LocalDateTime = LocalDateTime . now ()): String options Shortcut to create a OPTIONS route. fun options ( path : String = \"/\" ): Route parseQueryParameters fun parseQueryParameters ( query : String ): Map < String , List < String >> patch Shortcut to create a PATCH route. fun patch ( path : String = \"/\" ): Route post Shortcut to create a POST route. fun post ( path : String = \"/\" ): Route put Shortcut to create a PUT route. fun put ( path : String = \"/\" ): Route tracer Shortcut to create a TRACE route. fun tracer ( path : String = \"/\" ): Route","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.http/-a-l-l/","text":"hexagon_core / com.hexagonkt.http / ALL ALL \u00b6 val ALL: LinkedHashSet < Method > Set containing all HTTP methods. Getter Set containing all HTTP methods.","title":" a l l"},{"location":"hexagon_core/com.hexagonkt.http/-a-l-l/#all","text":"val ALL: LinkedHashSet < Method > Set containing all HTTP methods. Getter Set containing all HTTP methods.","title":"ALL"},{"location":"hexagon_core/com.hexagonkt.http/any/","text":"hexagon_core / com.hexagonkt.http / any any \u00b6 fun any ( path : String = \"/\" ): Route Shortcut to create a route for a filter (with all methods).","title":"Any"},{"location":"hexagon_core/com.hexagonkt.http/any/#any","text":"fun any ( path : String = \"/\" ): Route Shortcut to create a route for a filter (with all methods).","title":"any"},{"location":"hexagon_core/com.hexagonkt.http/delete/","text":"hexagon_core / com.hexagonkt.http / delete delete \u00b6 fun delete ( path : String = \"/\" ): Route Shortcut to create a DELETE route.","title":"Delete"},{"location":"hexagon_core/com.hexagonkt.http/delete/#delete","text":"fun delete ( path : String = \"/\" ): Route Shortcut to create a DELETE route.","title":"delete"},{"location":"hexagon_core/com.hexagonkt.http/get/","text":"hexagon_core / com.hexagonkt.http / get get \u00b6 fun get ( path : String = \"/\" ): Route Shortcut to create a GET route.","title":"Get"},{"location":"hexagon_core/com.hexagonkt.http/get/#get","text":"fun get ( path : String = \"/\" ): Route Shortcut to create a GET route.","title":"get"},{"location":"hexagon_core/com.hexagonkt.http/head/","text":"hexagon_core / com.hexagonkt.http / head head \u00b6 fun head ( path : String = \"/\" ): Route Shortcut to create a HEAD route.","title":"Head"},{"location":"hexagon_core/com.hexagonkt.http/head/#head","text":"fun head ( path : String = \"/\" ): Route Shortcut to create a HEAD route.","title":"head"},{"location":"hexagon_core/com.hexagonkt.http/http-date/","text":"hexagon_core / com.hexagonkt.http / httpDate httpDate \u00b6 fun httpDate ( date : LocalDateTime = LocalDateTime . now ()): String","title":"Http date"},{"location":"hexagon_core/com.hexagonkt.http/http-date/#httpdate","text":"fun httpDate ( date : LocalDateTime = LocalDateTime . now ()): String","title":"httpDate"},{"location":"hexagon_core/com.hexagonkt.http/options/","text":"hexagon_core / com.hexagonkt.http / options options \u00b6 fun options ( path : String = \"/\" ): Route Shortcut to create a OPTIONS route.","title":"Options"},{"location":"hexagon_core/com.hexagonkt.http/options/#options","text":"fun options ( path : String = \"/\" ): Route Shortcut to create a OPTIONS route.","title":"options"},{"location":"hexagon_core/com.hexagonkt.http/parse-query-parameters/","text":"hexagon_core / com.hexagonkt.http / parseQueryParameters parseQueryParameters \u00b6 fun parseQueryParameters ( query : String ): Map < String , List < String >>","title":"Parse query parameters"},{"location":"hexagon_core/com.hexagonkt.http/parse-query-parameters/#parsequeryparameters","text":"fun parseQueryParameters ( query : String ): Map < String , List < String >>","title":"parseQueryParameters"},{"location":"hexagon_core/com.hexagonkt.http/patch/","text":"hexagon_core / com.hexagonkt.http / patch patch \u00b6 fun patch ( path : String = \"/\" ): Route Shortcut to create a PATCH route.","title":"Patch"},{"location":"hexagon_core/com.hexagonkt.http/patch/#patch","text":"fun patch ( path : String = \"/\" ): Route Shortcut to create a PATCH route.","title":"patch"},{"location":"hexagon_core/com.hexagonkt.http/post/","text":"hexagon_core / com.hexagonkt.http / post post \u00b6 fun post ( path : String = \"/\" ): Route Shortcut to create a POST route.","title":"Post"},{"location":"hexagon_core/com.hexagonkt.http/post/#post","text":"fun post ( path : String = \"/\" ): Route Shortcut to create a POST route.","title":"post"},{"location":"hexagon_core/com.hexagonkt.http/put/","text":"hexagon_core / com.hexagonkt.http / put put \u00b6 fun put ( path : String = \"/\" ): Route Shortcut to create a PUT route.","title":"Put"},{"location":"hexagon_core/com.hexagonkt.http/put/#put","text":"fun put ( path : String = \"/\" ): Route Shortcut to create a PUT route.","title":"put"},{"location":"hexagon_core/com.hexagonkt.http/tracer/","text":"hexagon_core / com.hexagonkt.http / tracer tracer \u00b6 fun tracer ( path : String = \"/\" ): Route Shortcut to create a TRACE route.","title":"Tracer"},{"location":"hexagon_core/com.hexagonkt.http/tracer/#tracer","text":"fun tracer ( path : String = \"/\" ): Route Shortcut to create a TRACE route.","title":"tracer"},{"location":"hexagon_core/com.hexagonkt.http/-http-test/","text":"hexagon_core / com.hexagonkt.http / HttpTest HttpTest \u00b6 class HttpTest Constructors \u00b6 Name Summary <init> HttpTest () Functions \u00b6 Name Summary HTTP date has the correct format fun HTTP date has the correct format (): Unit Parse key only query parameters return correct data fun Parse key only query parameters return correct data () : Unit Parse multiple keys return list of values fun Parse multiple keys return list of values () : Unit Parse strips spaces fun Parse strips spaces (): Unit URL encoding and decoding works properly fun URL encoding and decoding works properly (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.http/-http-test/#httptest","text":"class HttpTest","title":"HttpTest"},{"location":"hexagon_core/com.hexagonkt.http/-http-test/#constructors","text":"Name Summary <init> HttpTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.http/-http-test/#functions","text":"Name Summary HTTP date has the correct format fun HTTP date has the correct format (): Unit Parse key only query parameters return correct data fun Parse key only query parameters return correct data () : Unit Parse multiple keys return list of values fun Parse multiple keys return list of values () : Unit Parse strips spaces fun Parse strips spaces (): Unit URL encoding and decoding works properly fun URL encoding and decoding works properly (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.http/-http-test/-h-t-t-p date has the correct format/","text":"hexagon_core / com.hexagonkt.http / HttpTest / HTTP date has the correct format HTTP date has the correct format \u00b6 fun HTTP date has the correct format (): Unit","title":" h t t p date has the correct format"},{"location":"hexagon_core/com.hexagonkt.http/-http-test/-h-t-t-p date has the correct format/#http-date-has-the-correct-format","text":"fun HTTP date has the correct format (): Unit","title":"HTTP date has the correct format"},{"location":"hexagon_core/com.hexagonkt.http/-http-test/-init-/","text":"hexagon_core / com.hexagonkt.http / HttpTest / <init> <init> \u00b6 HttpTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.http/-http-test/-init-/#init","text":"HttpTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.http/-http-test/-parse key only query parameters return correct data/","text":"hexagon_core / com.hexagonkt.http / HttpTest / Parse key only query parameters return correct data Parse key only query parameters return correct data \u00b6 fun Parse key only query parameters return correct data () : Unit","title":" parse key only query parameters return correct data"},{"location":"hexagon_core/com.hexagonkt.http/-http-test/-parse key only query parameters return correct data/#parse-key-only-query-parameters-return-correct-data","text":"fun Parse key only query parameters return correct data () : Unit","title":"Parse key only query parameters return correct data"},{"location":"hexagon_core/com.hexagonkt.http/-http-test/-parse multiple keys return list of values/","text":"hexagon_core / com.hexagonkt.http / HttpTest / Parse multiple keys return list of values Parse multiple keys return list of values \u00b6 fun Parse multiple keys return list of values () : Unit","title":" parse multiple keys return list of values"},{"location":"hexagon_core/com.hexagonkt.http/-http-test/-parse multiple keys return list of values/#parse-multiple-keys-return-list-of-values","text":"fun Parse multiple keys return list of values () : Unit","title":"Parse multiple keys return list of values"},{"location":"hexagon_core/com.hexagonkt.http/-http-test/-parse strips spaces/","text":"hexagon_core / com.hexagonkt.http / HttpTest / Parse strips spaces Parse strips spaces \u00b6 fun Parse strips spaces (): Unit","title":" parse strips spaces"},{"location":"hexagon_core/com.hexagonkt.http/-http-test/-parse strips spaces/#parse-strips-spaces","text":"fun Parse strips spaces (): Unit","title":"Parse strips spaces"},{"location":"hexagon_core/com.hexagonkt.http/-http-test/-u-r-l encoding and decoding works properly/","text":"hexagon_core / com.hexagonkt.http / HttpTest / URL encoding and decoding works properly URL encoding and decoding works properly \u00b6 fun URL encoding and decoding works properly (): Unit","title":" u r l encoding and decoding works properly"},{"location":"hexagon_core/com.hexagonkt.http/-http-test/-u-r-l encoding and decoding works properly/#url-encoding-and-decoding-works-properly","text":"fun URL encoding and decoding works properly (): Unit","title":"URL encoding and decoding works properly"},{"location":"hexagon_core/com.hexagonkt.http/-method/","text":"hexagon_core / com.hexagonkt.http / Method Method \u00b6 enum class Method Enum for the supported HTTP methods. Enum Values \u00b6 Name Summary GET HTTP GET method. HEAD HTTP HEAD method. POST HTTP POST method. PUT HTTP PUT method. DELETE HTTP DELETE method. TRACE HTTP TRACE method. OPTIONS HTTP OPTIONS method. PATCH HTTP PATCH method.","title":"Home"},{"location":"hexagon_core/com.hexagonkt.http/-method/#method","text":"enum class Method Enum for the supported HTTP methods.","title":"Method"},{"location":"hexagon_core/com.hexagonkt.http/-method/#enum-values","text":"Name Summary GET HTTP GET method. HEAD HTTP HEAD method. POST HTTP POST method. PUT HTTP PUT method. DELETE HTTP DELETE method. TRACE HTTP TRACE method. OPTIONS HTTP OPTIONS method. PATCH HTTP PATCH method.","title":"Enum Values"},{"location":"hexagon_core/com.hexagonkt.http/-method/-d-e-l-e-t-e/","text":"hexagon_core / com.hexagonkt.http / Method / DELETE DELETE \u00b6 DELETE HTTP DELETE method.","title":" d e l e t e"},{"location":"hexagon_core/com.hexagonkt.http/-method/-d-e-l-e-t-e/#delete","text":"DELETE HTTP DELETE method.","title":"DELETE"},{"location":"hexagon_core/com.hexagonkt.http/-method/-g-e-t/","text":"hexagon_core / com.hexagonkt.http / Method / GET GET \u00b6 GET HTTP GET method.","title":" g e t"},{"location":"hexagon_core/com.hexagonkt.http/-method/-g-e-t/#get","text":"GET HTTP GET method.","title":"GET"},{"location":"hexagon_core/com.hexagonkt.http/-method/-h-e-a-d/","text":"hexagon_core / com.hexagonkt.http / Method / HEAD HEAD \u00b6 HEAD HTTP HEAD method.","title":" h e a d"},{"location":"hexagon_core/com.hexagonkt.http/-method/-h-e-a-d/#head","text":"HEAD HTTP HEAD method.","title":"HEAD"},{"location":"hexagon_core/com.hexagonkt.http/-method/-o-p-t-i-o-n-s/","text":"hexagon_core / com.hexagonkt.http / Method / OPTIONS OPTIONS \u00b6 OPTIONS HTTP OPTIONS method.","title":" o p t i o n s"},{"location":"hexagon_core/com.hexagonkt.http/-method/-o-p-t-i-o-n-s/#options","text":"OPTIONS HTTP OPTIONS method.","title":"OPTIONS"},{"location":"hexagon_core/com.hexagonkt.http/-method/-p-a-t-c-h/","text":"hexagon_core / com.hexagonkt.http / Method / PATCH PATCH \u00b6 PATCH HTTP PATCH method.","title":" p a t c h"},{"location":"hexagon_core/com.hexagonkt.http/-method/-p-a-t-c-h/#patch","text":"PATCH HTTP PATCH method.","title":"PATCH"},{"location":"hexagon_core/com.hexagonkt.http/-method/-p-o-s-t/","text":"hexagon_core / com.hexagonkt.http / Method / POST POST \u00b6 POST HTTP POST method.","title":" p o s t"},{"location":"hexagon_core/com.hexagonkt.http/-method/-p-o-s-t/#post","text":"POST HTTP POST method.","title":"POST"},{"location":"hexagon_core/com.hexagonkt.http/-method/-p-u-t/","text":"hexagon_core / com.hexagonkt.http / Method / PUT PUT \u00b6 PUT HTTP PUT method.","title":" p u t"},{"location":"hexagon_core/com.hexagonkt.http/-method/-p-u-t/#put","text":"PUT HTTP PUT method.","title":"PUT"},{"location":"hexagon_core/com.hexagonkt.http/-method/-t-r-a-c-e/","text":"hexagon_core / com.hexagonkt.http / Method / TRACE TRACE \u00b6 TRACE HTTP TRACE method.","title":" t r a c e"},{"location":"hexagon_core/com.hexagonkt.http/-method/-t-r-a-c-e/#trace","text":"TRACE HTTP TRACE method.","title":"TRACE"},{"location":"hexagon_core/com.hexagonkt.http/-path/","text":"hexagon_core / com.hexagonkt.http / Path Path \u00b6 data class Path A path definition. It parses path patterns and extract values for parameters. Differences with Sinatra: No splats (you can use named parameters though) Delimiter is {var} to conform with RFC 6570 Constructors \u00b6 Name Summary <init> A path definition. It parses path patterns and extract values for parameters. Path ( path : String ) Properties \u00b6 Name Summary hasParameters val hasParameters: Boolean hasWildcards val hasWildcards: Boolean parameterIndex val parameterIndex: List < String > path val path: String regex val regex: Regex ? segments val segments: List < String > Functions \u00b6 Name Summary create fun create ( vararg parameters : Pair < String , Any > ): String extractParameters fun extractParameters ( requestUrl : String ): Map < String , String > matches fun matches ( requestUrl : String ): Boolean","title":"Home"},{"location":"hexagon_core/com.hexagonkt.http/-path/#path","text":"data class Path A path definition. It parses path patterns and extract values for parameters. Differences with Sinatra: No splats (you can use named parameters though) Delimiter is {var} to conform with RFC 6570","title":"Path"},{"location":"hexagon_core/com.hexagonkt.http/-path/#constructors","text":"Name Summary <init> A path definition. It parses path patterns and extract values for parameters. Path ( path : String )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.http/-path/#properties","text":"Name Summary hasParameters val hasParameters: Boolean hasWildcards val hasWildcards: Boolean parameterIndex val parameterIndex: List < String > path val path: String regex val regex: Regex ? segments val segments: List < String >","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.http/-path/#functions","text":"Name Summary create fun create ( vararg parameters : Pair < String , Any > ): String extractParameters fun extractParameters ( requestUrl : String ): Map < String , String > matches fun matches ( requestUrl : String ): Boolean","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.http/-path/-init-/","text":"hexagon_core / com.hexagonkt.http / Path / <init> <init> \u00b6 Path ( path : String ) A path definition. It parses path patterns and extract values for parameters. Differences with Sinatra: No splats (you can use named parameters though) Delimiter is {var} to conform with RFC 6570","title":" init "},{"location":"hexagon_core/com.hexagonkt.http/-path/-init-/#init","text":"Path ( path : String ) A path definition. It parses path patterns and extract values for parameters. Differences with Sinatra: No splats (you can use named parameters though) Delimiter is {var} to conform with RFC 6570","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.http/-path/create/","text":"hexagon_core / com.hexagonkt.http / Path / create create \u00b6 fun create ( vararg parameters : Pair < String , Any > ): String","title":"Create"},{"location":"hexagon_core/com.hexagonkt.http/-path/create/#create","text":"fun create ( vararg parameters : Pair < String , Any > ): String","title":"create"},{"location":"hexagon_core/com.hexagonkt.http/-path/extract-parameters/","text":"hexagon_core / com.hexagonkt.http / Path / extractParameters extractParameters \u00b6 fun extractParameters ( requestUrl : String ): Map < String , String >","title":"Extract parameters"},{"location":"hexagon_core/com.hexagonkt.http/-path/extract-parameters/#extractparameters","text":"fun extractParameters ( requestUrl : String ): Map < String , String >","title":"extractParameters"},{"location":"hexagon_core/com.hexagonkt.http/-path/has-parameters/","text":"hexagon_core / com.hexagonkt.http / Path / hasParameters hasParameters \u00b6 val hasParameters: Boolean","title":"Has parameters"},{"location":"hexagon_core/com.hexagonkt.http/-path/has-parameters/#hasparameters","text":"val hasParameters: Boolean","title":"hasParameters"},{"location":"hexagon_core/com.hexagonkt.http/-path/has-wildcards/","text":"hexagon_core / com.hexagonkt.http / Path / hasWildcards hasWildcards \u00b6 val hasWildcards: Boolean","title":"Has wildcards"},{"location":"hexagon_core/com.hexagonkt.http/-path/has-wildcards/#haswildcards","text":"val hasWildcards: Boolean","title":"hasWildcards"},{"location":"hexagon_core/com.hexagonkt.http/-path/matches/","text":"hexagon_core / com.hexagonkt.http / Path / matches matches \u00b6 fun matches ( requestUrl : String ): Boolean","title":"Matches"},{"location":"hexagon_core/com.hexagonkt.http/-path/matches/#matches","text":"fun matches ( requestUrl : String ): Boolean","title":"matches"},{"location":"hexagon_core/com.hexagonkt.http/-path/parameter-index/","text":"hexagon_core / com.hexagonkt.http / Path / parameterIndex parameterIndex \u00b6 val parameterIndex: List < String >","title":"Parameter index"},{"location":"hexagon_core/com.hexagonkt.http/-path/parameter-index/#parameterindex","text":"val parameterIndex: List < String >","title":"parameterIndex"},{"location":"hexagon_core/com.hexagonkt.http/-path/path/","text":"hexagon_core / com.hexagonkt.http / Path / path path \u00b6 val path: String","title":"Path"},{"location":"hexagon_core/com.hexagonkt.http/-path/path/#path","text":"val path: String","title":"path"},{"location":"hexagon_core/com.hexagonkt.http/-path/regex/","text":"hexagon_core / com.hexagonkt.http / Path / regex regex \u00b6 val regex: Regex ?","title":"Regex"},{"location":"hexagon_core/com.hexagonkt.http/-path/regex/#regex","text":"val regex: Regex ?","title":"regex"},{"location":"hexagon_core/com.hexagonkt.http/-path/segments/","text":"hexagon_core / com.hexagonkt.http / Path / segments segments \u00b6 val segments: List < String >","title":"Segments"},{"location":"hexagon_core/com.hexagonkt.http/-path/segments/#segments","text":"val segments: List < String >","title":"segments"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/","text":"hexagon_core / com.hexagonkt.http / PathTest PathTest \u00b6 class PathTest TODO Check that URLs with blank parameters are not matched. Ie: /alpha/{param}/bravo is not matched by /alpha//bravo Constructors \u00b6 Name Summary <init> TODO Check that URLs with blank parameters are not matched. Ie: /alpha/{param}/bravo is not matched by /alpha//bravo PathTest () Functions \u00b6 Name Summary A path with parameters have regex and params table fun A path with parameters have regex and params table (): Unit A path without parameters do not have regex neither params table fun A path without parameters do not have regex neither params table () : Unit Create an url with path fun Create an url with path (): Unit Extract parameter from a non matching url fails fun Extract parameter from a non matching url fails (): Unit Invalid path parameters fun Invalid path parameters (): Unit Path with a wildcard resolve parameters properly fun Path with a wildcard resolve parameters properly (): Unit Path with many wildcards resolve parameters properly fun Path with many wildcards resolve parameters properly (): Unit Path with wildcards can not create url fun Path with wildcards can not create url (): Unit Segments of a path are split correctly fun Segments of a path are split correctly (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/#pathtest","text":"class PathTest TODO Check that URLs with blank parameters are not matched. Ie: /alpha/{param}/bravo is not matched by /alpha//bravo","title":"PathTest"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/#constructors","text":"Name Summary <init> TODO Check that URLs with blank parameters are not matched. Ie: /alpha/{param}/bravo is not matched by /alpha//bravo PathTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/#functions","text":"Name Summary A path with parameters have regex and params table fun A path with parameters have regex and params table (): Unit A path without parameters do not have regex neither params table fun A path without parameters do not have regex neither params table () : Unit Create an url with path fun Create an url with path (): Unit Extract parameter from a non matching url fails fun Extract parameter from a non matching url fails (): Unit Invalid path parameters fun Invalid path parameters (): Unit Path with a wildcard resolve parameters properly fun Path with a wildcard resolve parameters properly (): Unit Path with many wildcards resolve parameters properly fun Path with many wildcards resolve parameters properly (): Unit Path with wildcards can not create url fun Path with wildcards can not create url (): Unit Segments of a path are split correctly fun Segments of a path are split correctly (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-a path with parameters have regex and params table/","text":"hexagon_core / com.hexagonkt.http / PathTest / A path with parameters have regex and params table A path with parameters have regex and params table \u00b6 fun A path with parameters have regex and params table (): Unit","title":" a path with parameters have regex and params table"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-a path with parameters have regex and params table/#a-path-with-parameters-have-regex-and-params-table","text":"fun A path with parameters have regex and params table (): Unit","title":"A path with parameters have regex and params table"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-a path without parameters do not have regex neither params table/","text":"hexagon_core / com.hexagonkt.http / PathTest / A path without parameters do not have regex neither params table A path without parameters do not have regex neither params table \u00b6 fun A path without parameters do not have regex neither params table () : Unit","title":" a path without parameters do not have regex neither params table"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-a path without parameters do not have regex neither params table/#a-path-without-parameters-do-not-have-regex-neither-params-table","text":"fun A path without parameters do not have regex neither params table () : Unit","title":"A path without parameters do not have regex neither params table"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-create an url with path/","text":"hexagon_core / com.hexagonkt.http / PathTest / Create an url with path Create an url with path \u00b6 fun Create an url with path (): Unit","title":" create an url with path"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-create an url with path/#create-an-url-with-path","text":"fun Create an url with path (): Unit","title":"Create an url with path"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-extract parameter from a non matching url fails/","text":"hexagon_core / com.hexagonkt.http / PathTest / Extract parameter from a non matching url fails Extract parameter from a non matching url fails \u00b6 fun Extract parameter from a non matching url fails (): Unit","title":" extract parameter from a non matching url fails"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-extract parameter from a non matching url fails/#extract-parameter-from-a-non-matching-url-fails","text":"fun Extract parameter from a non matching url fails (): Unit","title":"Extract parameter from a non matching url fails"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-init-/","text":"hexagon_core / com.hexagonkt.http / PathTest / <init> <init> \u00b6 PathTest () TODO Check that URLs with blank parameters are not matched. Ie: /alpha/{param}/bravo is not matched by /alpha//bravo","title":" init "},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-init-/#init","text":"PathTest () TODO Check that URLs with blank parameters are not matched. Ie: /alpha/{param}/bravo is not matched by /alpha//bravo","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-invalid path parameters/","text":"hexagon_core / com.hexagonkt.http / PathTest / Invalid path parameters Invalid path parameters \u00b6 fun Invalid path parameters (): Unit","title":" invalid path parameters"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-invalid path parameters/#invalid-path-parameters","text":"fun Invalid path parameters (): Unit","title":"Invalid path parameters"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-path with a wildcard resolve parameters properly/","text":"hexagon_core / com.hexagonkt.http / PathTest / Path with a wildcard resolve parameters properly Path with a wildcard resolve parameters properly \u00b6 fun Path with a wildcard resolve parameters properly (): Unit","title":" path with a wildcard resolve parameters properly"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-path with a wildcard resolve parameters properly/#path-with-a-wildcard-resolve-parameters-properly","text":"fun Path with a wildcard resolve parameters properly (): Unit","title":"Path with a wildcard resolve parameters properly"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-path with many wildcards resolve parameters properly/","text":"hexagon_core / com.hexagonkt.http / PathTest / Path with many wildcards resolve parameters properly Path with many wildcards resolve parameters properly \u00b6 fun Path with many wildcards resolve parameters properly (): Unit","title":" path with many wildcards resolve parameters properly"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-path with many wildcards resolve parameters properly/#path-with-many-wildcards-resolve-parameters-properly","text":"fun Path with many wildcards resolve parameters properly (): Unit","title":"Path with many wildcards resolve parameters properly"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-path with wildcards can not create url/","text":"hexagon_core / com.hexagonkt.http / PathTest / Path with wildcards can not create url Path with wildcards can not create url \u00b6 fun Path with wildcards can not create url (): Unit","title":" path with wildcards can not create url"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-path with wildcards can not create url/#path-with-wildcards-can-not-create-url","text":"fun Path with wildcards can not create url (): Unit","title":"Path with wildcards can not create url"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-segments of a path are split correctly/","text":"hexagon_core / com.hexagonkt.http / PathTest / Segments of a path are split correctly Segments of a path are split correctly \u00b6 fun Segments of a path are split correctly (): Unit","title":" segments of a path are split correctly"},{"location":"hexagon_core/com.hexagonkt.http/-path-test/-segments of a path are split correctly/#segments-of-a-path-are-split-correctly","text":"fun Segments of a path are split correctly (): Unit","title":"Segments of a path are split correctly"},{"location":"hexagon_core/com.hexagonkt.http/-route/","text":"hexagon_core / com.hexagonkt.http / Route Route \u00b6 data class Route Constructors \u00b6 Name Summary <init> Route ( path : Path , vararg methods : Method ) Route ( path : String , vararg methods : Method ) Route ( path : Path , methods : LinkedHashSet < Method > , requestType : KClass <*>? = null , responseType : KClass <*>? = null , metadata : Map < String , *> = emptyMap < String , Any > ()) Properties \u00b6 Name Summary metadata val metadata: Map < String , *> methods val methods: LinkedHashSet < Method > path val path: Path requestType val requestType: KClass <*>? responseType val responseType: KClass <*>? Functions \u00b6 Name Summary list fun list (): List < Route >","title":"Home"},{"location":"hexagon_core/com.hexagonkt.http/-route/#route","text":"data class Route","title":"Route"},{"location":"hexagon_core/com.hexagonkt.http/-route/#constructors","text":"Name Summary <init> Route ( path : Path , vararg methods : Method ) Route ( path : String , vararg methods : Method ) Route ( path : Path , methods : LinkedHashSet < Method > , requestType : KClass <*>? = null , responseType : KClass <*>? = null , metadata : Map < String , *> = emptyMap < String , Any > ())","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.http/-route/#properties","text":"Name Summary metadata val metadata: Map < String , *> methods val methods: LinkedHashSet < Method > path val path: Path requestType val requestType: KClass <*>? responseType val responseType: KClass <*>?","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.http/-route/#functions","text":"Name Summary list fun list (): List < Route >","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.http/-route/-init-/","text":"hexagon_core / com.hexagonkt.http / Route / <init> <init> \u00b6 Route ( path : Path , vararg methods : Method ) Route ( path : String , vararg methods : Method ) Route ( path : Path , methods : LinkedHashSet < Method > , requestType : KClass <*>? = null , responseType : KClass <*>? = null , metadata : Map < String , *> = emptyMap < String , Any > ())","title":" init "},{"location":"hexagon_core/com.hexagonkt.http/-route/-init-/#init","text":"Route ( path : Path , vararg methods : Method ) Route ( path : String , vararg methods : Method ) Route ( path : Path , methods : LinkedHashSet < Method > , requestType : KClass <*>? = null , responseType : KClass <*>? = null , metadata : Map < String , *> = emptyMap < String , Any > ())","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.http/-route/list/","text":"hexagon_core / com.hexagonkt.http / Route / list list \u00b6 fun list (): List < Route >","title":"List"},{"location":"hexagon_core/com.hexagonkt.http/-route/list/#list","text":"fun list (): List < Route >","title":"list"},{"location":"hexagon_core/com.hexagonkt.http/-route/metadata/","text":"hexagon_core / com.hexagonkt.http / Route / metadata metadata \u00b6 val metadata: Map < String , *>","title":"Metadata"},{"location":"hexagon_core/com.hexagonkt.http/-route/metadata/#metadata","text":"val metadata: Map < String , *>","title":"metadata"},{"location":"hexagon_core/com.hexagonkt.http/-route/methods/","text":"hexagon_core / com.hexagonkt.http / Route / methods methods \u00b6 val methods: LinkedHashSet < Method >","title":"Methods"},{"location":"hexagon_core/com.hexagonkt.http/-route/methods/#methods","text":"val methods: LinkedHashSet < Method >","title":"methods"},{"location":"hexagon_core/com.hexagonkt.http/-route/path/","text":"hexagon_core / com.hexagonkt.http / Route / path path \u00b6 val path: Path","title":"Path"},{"location":"hexagon_core/com.hexagonkt.http/-route/path/#path","text":"val path: Path","title":"path"},{"location":"hexagon_core/com.hexagonkt.http/-route/request-type/","text":"hexagon_core / com.hexagonkt.http / Route / requestType requestType \u00b6 val requestType: KClass <*>?","title":"Request type"},{"location":"hexagon_core/com.hexagonkt.http/-route/request-type/#requesttype","text":"val requestType: KClass <*>?","title":"requestType"},{"location":"hexagon_core/com.hexagonkt.http/-route/response-type/","text":"hexagon_core / com.hexagonkt.http / Route / responseType responseType \u00b6 val responseType: KClass <*>?","title":"Response type"},{"location":"hexagon_core/com.hexagonkt.http/-route/response-type/#responsetype","text":"val responseType: KClass <*>?","title":"responseType"},{"location":"hexagon_core/com.hexagonkt.http/-route-test/","text":"hexagon_core / com.hexagonkt.http / RouteTest RouteTest \u00b6 class RouteTest Constructors \u00b6 Name Summary <init> RouteTest () Functions \u00b6 Name Summary Route constructor works ok fun Route constructor works ok (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.http/-route-test/#routetest","text":"class RouteTest","title":"RouteTest"},{"location":"hexagon_core/com.hexagonkt.http/-route-test/#constructors","text":"Name Summary <init> RouteTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.http/-route-test/#functions","text":"Name Summary Route constructor works ok fun Route constructor works ok (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.http/-route-test/-init-/","text":"hexagon_core / com.hexagonkt.http / RouteTest / <init> <init> \u00b6 RouteTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.http/-route-test/-init-/#init","text":"RouteTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.http/-route-test/-route constructor works ok/","text":"hexagon_core / com.hexagonkt.http / RouteTest / Route constructor works ok Route constructor works ok \u00b6 fun Route constructor works ok (): Unit","title":" route constructor works ok"},{"location":"hexagon_core/com.hexagonkt.http/-route-test/-route constructor works ok/#route-constructor-works-ok","text":"fun Route constructor works ok (): Unit","title":"Route constructor works ok"},{"location":"hexagon_core/com.hexagonkt.http/kotlin.-string/","text":"hexagon_core / com.hexagonkt.http / kotlin.String Extensions for kotlin.String \u00b6 Name Summary urlDecode fun String .urlDecode (): String urlEncode fun String .urlEncode (): String","title":"Home"},{"location":"hexagon_core/com.hexagonkt.http/kotlin.-string/#extensions-for-kotlinstring","text":"Name Summary urlDecode fun String .urlDecode (): String urlEncode fun String .urlEncode (): String","title":"Extensions for kotlin.String"},{"location":"hexagon_core/com.hexagonkt.http/kotlin.-string/url-decode/","text":"hexagon_core / com.hexagonkt.http / kotlin.String / urlDecode urlDecode \u00b6 fun String .urlDecode (): String","title":"Url decode"},{"location":"hexagon_core/com.hexagonkt.http/kotlin.-string/url-decode/#urldecode","text":"fun String .urlDecode (): String","title":"urlDecode"},{"location":"hexagon_core/com.hexagonkt.http/kotlin.-string/url-encode/","text":"hexagon_core / com.hexagonkt.http / kotlin.String / urlEncode urlEncode \u00b6 fun String .urlEncode (): String","title":"Url encode"},{"location":"hexagon_core/com.hexagonkt.http/kotlin.-string/url-encode/#urlencode","text":"fun String .urlEncode (): String","title":"urlEncode"},{"location":"hexagon_core/com.hexagonkt.injection/","text":"hexagon_core / com.hexagonkt.injection Package com.hexagonkt.injection \u00b6 Utilities to bind classes to creation closures or instances, and inject instances of those classes later. Types \u00b6 Name Summary Bar interface Bar FakeService class FakeService : Service Foo interface Foo InjectionManager Generators registry and utilities. This object keep tracks of supplier functions or specific objects bound to classes. Different suppliers can be bound to the same type using 'tags'. object InjectionManager InjectionManagerTest class InjectionManagerTest Service interface Service SubBar1 class SubBar1 : Bar SubBar2 class SubBar2 : Bar SubBar3 class SubBar3 : Bar SubBar3a class SubBar3a : Bar SubFoo1 class SubFoo1 : Foo SubFoo2 class SubFoo2 : Foo SubFoo3 object SubFoo3 : Foo","title":"Home"},{"location":"hexagon_core/com.hexagonkt.injection/#package-comhexagonktinjection","text":"Utilities to bind classes to creation closures or instances, and inject instances of those classes later.","title":"Package com.hexagonkt.injection"},{"location":"hexagon_core/com.hexagonkt.injection/#types","text":"Name Summary Bar interface Bar FakeService class FakeService : Service Foo interface Foo InjectionManager Generators registry and utilities. This object keep tracks of supplier functions or specific objects bound to classes. Different suppliers can be bound to the same type using 'tags'. object InjectionManager InjectionManagerTest class InjectionManagerTest Service interface Service SubBar1 class SubBar1 : Bar SubBar2 class SubBar2 : Bar SubBar3 class SubBar3 : Bar SubBar3a class SubBar3a : Bar SubFoo1 class SubFoo1 : Foo SubFoo2 class SubFoo2 : Foo SubFoo3 object SubFoo3 : Foo","title":"Types"},{"location":"hexagon_core/com.hexagonkt.injection/-foo/","text":"hexagon_core / com.hexagonkt.injection / Foo Foo \u00b6 interface Foo Inheritors \u00b6 Name Summary SubFoo1 class SubFoo1 : Foo SubFoo2 class SubFoo2 : Foo SubFoo3 object SubFoo3 : Foo","title":" foo"},{"location":"hexagon_core/com.hexagonkt.injection/-foo/#foo","text":"interface Foo","title":"Foo"},{"location":"hexagon_core/com.hexagonkt.injection/-foo/#inheritors","text":"Name Summary SubFoo1 class SubFoo1 : Foo SubFoo2 class SubFoo2 : Foo SubFoo3 object SubFoo3 : Foo","title":"Inheritors"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-foo3/","text":"hexagon_core / com.hexagonkt.injection / SubFoo3 SubFoo3 \u00b6 object SubFoo3 : Foo","title":" sub foo3"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-foo3/#subfoo3","text":"object SubFoo3 : Foo","title":"SubFoo3"},{"location":"hexagon_core/com.hexagonkt.injection/-bar/","text":"hexagon_core / com.hexagonkt.injection / Bar Bar \u00b6 interface Bar Properties \u00b6 Name Summary foo abstract val foo: Foo Inheritors \u00b6 Name Summary SubBar1 class SubBar1 : Bar SubBar2 class SubBar2 : Bar SubBar3 class SubBar3 : Bar SubBar3a class SubBar3a : Bar","title":"Home"},{"location":"hexagon_core/com.hexagonkt.injection/-bar/#bar","text":"interface Bar","title":"Bar"},{"location":"hexagon_core/com.hexagonkt.injection/-bar/#properties","text":"Name Summary foo abstract val foo: Foo","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.injection/-bar/#inheritors","text":"Name Summary SubBar1 class SubBar1 : Bar SubBar2 class SubBar2 : Bar SubBar3 class SubBar3 : Bar SubBar3a class SubBar3a : Bar","title":"Inheritors"},{"location":"hexagon_core/com.hexagonkt.injection/-bar/foo/","text":"hexagon_core / com.hexagonkt.injection / Bar / foo foo \u00b6 abstract val foo: Foo","title":"Foo"},{"location":"hexagon_core/com.hexagonkt.injection/-bar/foo/#foo","text":"abstract val foo: Foo","title":"foo"},{"location":"hexagon_core/com.hexagonkt.injection/-fake-service/","text":"hexagon_core / com.hexagonkt.injection / FakeService FakeService \u00b6 class FakeService : Service Constructors \u00b6 Name Summary <init> FakeService () Functions \u00b6 Name Summary a fun a ( p : Int ): Unit b fun b ( p : Boolean ): Int","title":"Home"},{"location":"hexagon_core/com.hexagonkt.injection/-fake-service/#fakeservice","text":"class FakeService : Service","title":"FakeService"},{"location":"hexagon_core/com.hexagonkt.injection/-fake-service/#constructors","text":"Name Summary <init> FakeService ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.injection/-fake-service/#functions","text":"Name Summary a fun a ( p : Int ): Unit b fun b ( p : Boolean ): Int","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.injection/-fake-service/-init-/","text":"hexagon_core / com.hexagonkt.injection / FakeService / <init> <init> \u00b6 FakeService ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.injection/-fake-service/-init-/#init","text":"FakeService ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.injection/-fake-service/a/","text":"hexagon_core / com.hexagonkt.injection / FakeService / a a \u00b6 fun a ( p : Int ): Unit","title":"A"},{"location":"hexagon_core/com.hexagonkt.injection/-fake-service/a/#a","text":"fun a ( p : Int ): Unit","title":"a"},{"location":"hexagon_core/com.hexagonkt.injection/-fake-service/b/","text":"hexagon_core / com.hexagonkt.injection / FakeService / b b \u00b6 fun b ( p : Boolean ): Int","title":"B"},{"location":"hexagon_core/com.hexagonkt.injection/-fake-service/b/#b","text":"fun b ( p : Boolean ): Int","title":"b"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager/","text":"hexagon_core / com.hexagonkt.injection / InjectionManager InjectionManager \u00b6 object InjectionManager Generators registry and utilities. This object keep tracks of supplier functions or specific objects bound to classes. Different suppliers can be bound to the same type using 'tags'. Functions \u00b6 Name Summary bind fun < T : Any , R : T > bind ( type : KClass < T > , tag : Any , force : Boolean , provider : () -> R ): Unit fun < T : Any , R : T > bind ( type : KClass < T > , tag : Any , provider : () -> R ): Unit fun < T : Any , R : T > bind ( type : KClass < T > , provider : () -> R ): Unit fun < T : Any > bind ( tag : Any , provider : () -> T ): Unit fun < T : Any > bind ( provider : () -> T ): Unit bindObject fun < T : Any , R : T > bindObject ( type : KClass < T > , tag : Any , instance : R ): Unit fun < T : Any , R : T > bindObject ( type : KClass < T > , instance : R ): Unit fun < T : Any > bindObject ( tag : Any , instance : T ): Unit fun < T : Any > bindObject ( instance : T ): Unit forceBind fun < T : Any , R : T > forceBind ( type : KClass < T > , tag : Any , provider : () -> R ): Unit fun < T : Any , R : T > forceBind ( type : KClass < T > , provider : () -> R ): Unit fun < T : Any > forceBind ( tag : Any , provider : () -> T ): Unit fun < T : Any > forceBind ( provider : () -> T ): Unit forceBindObject fun < T : Any , R : T > forceBindObject ( type : KClass < T > , tag : Any , instance : R ): Unit fun < T : Any , R : T > forceBindObject ( type : KClass < T > , instance : R ): Unit fun < T : Any > forceBindObject ( tag : Any , instance : T ): Unit fun < T : Any > forceBindObject ( instance : T ): Unit inject fun < T : Any > inject ( type : KClass < T > , tag : Any ): T fun < T : Any > inject ( tag : Any ): T fun < T : Any > inject ( type : KClass < T > ): T fun < T : Any > inject (): T invoke operator fun invoke ( block : InjectionManager .() -> Unit ): InjectionManager","title":"Home"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager/#injectionmanager","text":"object InjectionManager Generators registry and utilities. This object keep tracks of supplier functions or specific objects bound to classes. Different suppliers can be bound to the same type using 'tags'.","title":"InjectionManager"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager/#functions","text":"Name Summary bind fun < T : Any , R : T > bind ( type : KClass < T > , tag : Any , force : Boolean , provider : () -> R ): Unit fun < T : Any , R : T > bind ( type : KClass < T > , tag : Any , provider : () -> R ): Unit fun < T : Any , R : T > bind ( type : KClass < T > , provider : () -> R ): Unit fun < T : Any > bind ( tag : Any , provider : () -> T ): Unit fun < T : Any > bind ( provider : () -> T ): Unit bindObject fun < T : Any , R : T > bindObject ( type : KClass < T > , tag : Any , instance : R ): Unit fun < T : Any , R : T > bindObject ( type : KClass < T > , instance : R ): Unit fun < T : Any > bindObject ( tag : Any , instance : T ): Unit fun < T : Any > bindObject ( instance : T ): Unit forceBind fun < T : Any , R : T > forceBind ( type : KClass < T > , tag : Any , provider : () -> R ): Unit fun < T : Any , R : T > forceBind ( type : KClass < T > , provider : () -> R ): Unit fun < T : Any > forceBind ( tag : Any , provider : () -> T ): Unit fun < T : Any > forceBind ( provider : () -> T ): Unit forceBindObject fun < T : Any , R : T > forceBindObject ( type : KClass < T > , tag : Any , instance : R ): Unit fun < T : Any , R : T > forceBindObject ( type : KClass < T > , instance : R ): Unit fun < T : Any > forceBindObject ( tag : Any , instance : T ): Unit fun < T : Any > forceBindObject ( instance : T ): Unit inject fun < T : Any > inject ( type : KClass < T > , tag : Any ): T fun < T : Any > inject ( tag : Any ): T fun < T : Any > inject ( type : KClass < T > ): T fun < T : Any > inject (): T invoke operator fun invoke ( block : InjectionManager .() -> Unit ): InjectionManager","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager/bind-object/","text":"hexagon_core / com.hexagonkt.injection / InjectionManager / bindObject bindObject \u00b6 fun < T : Any , R : T > bindObject ( type : KClass < T > , tag : Any , instance : R ): Unit fun < T : Any , R : T > bindObject ( type : KClass < T > , instance : R ): Unit fun < reified T : Any > bindObject ( tag : Any , instance : T ): Unit fun < reified T : Any > bindObject ( instance : T ): Unit","title":"Bind object"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager/bind-object/#bindobject","text":"fun < T : Any , R : T > bindObject ( type : KClass < T > , tag : Any , instance : R ): Unit fun < T : Any , R : T > bindObject ( type : KClass < T > , instance : R ): Unit fun < reified T : Any > bindObject ( tag : Any , instance : T ): Unit fun < reified T : Any > bindObject ( instance : T ): Unit","title":"bindObject"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager/bind/","text":"hexagon_core / com.hexagonkt.injection / InjectionManager / bind bind \u00b6 fun < T : Any , R : T > bind ( type : KClass < T > , tag : Any , force : Boolean , provider : () -> R ): Unit fun < T : Any , R : T > bind ( type : KClass < T > , tag : Any , provider : () -> R ): Unit fun < T : Any , R : T > bind ( type : KClass < T > , provider : () -> R ): Unit inline fun < reified T : Any > bind ( tag : Any , noinline provider : () -> T ): Unit inline fun < reified T : Any > bind ( noinline provider : () -> T ): Unit","title":"Bind"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager/bind/#bind","text":"fun < T : Any , R : T > bind ( type : KClass < T > , tag : Any , force : Boolean , provider : () -> R ): Unit fun < T : Any , R : T > bind ( type : KClass < T > , tag : Any , provider : () -> R ): Unit fun < T : Any , R : T > bind ( type : KClass < T > , provider : () -> R ): Unit inline fun < reified T : Any > bind ( tag : Any , noinline provider : () -> T ): Unit inline fun < reified T : Any > bind ( noinline provider : () -> T ): Unit","title":"bind"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager/force-bind-object/","text":"hexagon_core / com.hexagonkt.injection / InjectionManager / forceBindObject forceBindObject \u00b6 fun < T : Any , R : T > forceBindObject ( type : KClass < T > , tag : Any , instance : R ): Unit fun < T : Any , R : T > forceBindObject ( type : KClass < T > , instance : R ): Unit fun < reified T : Any > forceBindObject ( tag : Any , instance : T ): Unit fun < reified T : Any > forceBindObject ( instance : T ): Unit","title":"Force bind object"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager/force-bind-object/#forcebindobject","text":"fun < T : Any , R : T > forceBindObject ( type : KClass < T > , tag : Any , instance : R ): Unit fun < T : Any , R : T > forceBindObject ( type : KClass < T > , instance : R ): Unit fun < reified T : Any > forceBindObject ( tag : Any , instance : T ): Unit fun < reified T : Any > forceBindObject ( instance : T ): Unit","title":"forceBindObject"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager/force-bind/","text":"hexagon_core / com.hexagonkt.injection / InjectionManager / forceBind forceBind \u00b6 fun < T : Any , R : T > forceBind ( type : KClass < T > , tag : Any , provider : () -> R ): Unit fun < T : Any , R : T > forceBind ( type : KClass < T > , provider : () -> R ): Unit inline fun < reified T : Any > forceBind ( tag : Any , noinline provider : () -> T ): Unit inline fun < reified T : Any > forceBind ( noinline provider : () -> T ): Unit","title":"Force bind"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager/force-bind/#forcebind","text":"fun < T : Any , R : T > forceBind ( type : KClass < T > , tag : Any , provider : () -> R ): Unit fun < T : Any , R : T > forceBind ( type : KClass < T > , provider : () -> R ): Unit inline fun < reified T : Any > forceBind ( tag : Any , noinline provider : () -> T ): Unit inline fun < reified T : Any > forceBind ( noinline provider : () -> T ): Unit","title":"forceBind"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager/inject/","text":"hexagon_core / com.hexagonkt.injection / InjectionManager / inject inject \u00b6 fun < T : Any > inject ( type : KClass < T > , tag : Any ): T fun < reified T : Any > inject ( tag : Any ): T fun < T : Any > inject ( type : KClass < T > ): T fun < reified T : Any > inject (): T","title":"Inject"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager/inject/#inject","text":"fun < T : Any > inject ( type : KClass < T > , tag : Any ): T fun < reified T : Any > inject ( tag : Any ): T fun < T : Any > inject ( type : KClass < T > ): T fun < reified T : Any > inject (): T","title":"inject"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager/invoke/","text":"hexagon_core / com.hexagonkt.injection / InjectionManager / invoke invoke \u00b6 operator fun invoke ( block : InjectionManager .() -> Unit ): InjectionManager","title":"Invoke"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager/invoke/#invoke","text":"operator fun invoke ( block : InjectionManager .() -> Unit ): InjectionManager","title":"invoke"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager-test/","text":"hexagon_core / com.hexagonkt.injection / InjectionManagerTest InjectionManagerTest \u00b6 class InjectionManagerTest Constructors \u00b6 Name Summary <init> InjectionManagerTest () Functions \u00b6 Name Summary DI don't override bindings fun DI don ' t override bindings (): Unit DI just works fun DI just works (): Unit Inject not bound class throws exception fun Inject not bound class throws exception (): Unit Mocks are easy to build fun Mocks are easy to build (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager-test/#injectionmanagertest","text":"class InjectionManagerTest","title":"InjectionManagerTest"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager-test/#constructors","text":"Name Summary <init> InjectionManagerTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager-test/#functions","text":"Name Summary DI don't override bindings fun DI don ' t override bindings (): Unit DI just works fun DI just works (): Unit Inject not bound class throws exception fun Inject not bound class throws exception (): Unit Mocks are easy to build fun Mocks are easy to build (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager-test/-d-i don't override bindings/","text":"hexagon_core / com.hexagonkt.injection / InjectionManagerTest / DI don't override bindings DI don't override bindings \u00b6 fun DI don ' t override bindings (): Unit","title":" d i don't override bindings"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager-test/-d-i don't override bindings/#di-dont-override-bindings","text":"fun DI don ' t override bindings (): Unit","title":"DI don't override bindings"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager-test/-d-i just works/","text":"hexagon_core / com.hexagonkt.injection / InjectionManagerTest / DI just works DI just works \u00b6 fun DI just works (): Unit","title":" d i just works"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager-test/-d-i just works/#di-just-works","text":"fun DI just works (): Unit","title":"DI just works"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager-test/-init-/","text":"hexagon_core / com.hexagonkt.injection / InjectionManagerTest / <init> <init> \u00b6 InjectionManagerTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager-test/-init-/#init","text":"InjectionManagerTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager-test/-inject not bound class throws exception/","text":"hexagon_core / com.hexagonkt.injection / InjectionManagerTest / Inject not bound class throws exception Inject not bound class throws exception \u00b6 fun Inject not bound class throws exception (): Unit","title":" inject not bound class throws exception"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager-test/-inject not bound class throws exception/#inject-not-bound-class-throws-exception","text":"fun Inject not bound class throws exception (): Unit","title":"Inject not bound class throws exception"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager-test/-mocks are easy to build/","text":"hexagon_core / com.hexagonkt.injection / InjectionManagerTest / Mocks are easy to build Mocks are easy to build \u00b6 fun Mocks are easy to build (): Unit","title":" mocks are easy to build"},{"location":"hexagon_core/com.hexagonkt.injection/-injection-manager-test/-mocks are easy to build/#mocks-are-easy-to-build","text":"fun Mocks are easy to build (): Unit","title":"Mocks are easy to build"},{"location":"hexagon_core/com.hexagonkt.injection/-service/","text":"hexagon_core / com.hexagonkt.injection / Service Service \u00b6 interface Service Functions \u00b6 Name Summary a abstract fun a ( p : Int ): Unit b abstract fun b ( p : Boolean ): Int Inheritors \u00b6 Name Summary FakeService class FakeService : Service","title":"Home"},{"location":"hexagon_core/com.hexagonkt.injection/-service/#service","text":"interface Service","title":"Service"},{"location":"hexagon_core/com.hexagonkt.injection/-service/#functions","text":"Name Summary a abstract fun a ( p : Int ): Unit b abstract fun b ( p : Boolean ): Int","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.injection/-service/#inheritors","text":"Name Summary FakeService class FakeService : Service","title":"Inheritors"},{"location":"hexagon_core/com.hexagonkt.injection/-service/a/","text":"hexagon_core / com.hexagonkt.injection / Service / a a \u00b6 abstract fun a ( p : Int ): Unit","title":"A"},{"location":"hexagon_core/com.hexagonkt.injection/-service/a/#a","text":"abstract fun a ( p : Int ): Unit","title":"a"},{"location":"hexagon_core/com.hexagonkt.injection/-service/b/","text":"hexagon_core / com.hexagonkt.injection / Service / b b \u00b6 abstract fun b ( p : Boolean ): Int","title":"B"},{"location":"hexagon_core/com.hexagonkt.injection/-service/b/#b","text":"abstract fun b ( p : Boolean ): Int","title":"b"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar1/","text":"hexagon_core / com.hexagonkt.injection / SubBar1 SubBar1 \u00b6 class SubBar1 : Bar Constructors \u00b6 Name Summary <init> SubBar1 ( foo : Foo ) Properties \u00b6 Name Summary foo val foo: Foo","title":"Home"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar1/#subbar1","text":"class SubBar1 : Bar","title":"SubBar1"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar1/#constructors","text":"Name Summary <init> SubBar1 ( foo : Foo )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar1/#properties","text":"Name Summary foo val foo: Foo","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar1/-init-/","text":"hexagon_core / com.hexagonkt.injection / SubBar1 / <init> <init> \u00b6 SubBar1 ( foo : Foo )","title":" init "},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar1/-init-/#init","text":"SubBar1 ( foo : Foo )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar1/foo/","text":"hexagon_core / com.hexagonkt.injection / SubBar1 / foo foo \u00b6 val foo: Foo","title":"Foo"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar1/foo/#foo","text":"val foo: Foo","title":"foo"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar2/","text":"hexagon_core / com.hexagonkt.injection / SubBar2 SubBar2 \u00b6 class SubBar2 : Bar Constructors \u00b6 Name Summary <init> SubBar2 ( foo : Foo = inject ()) Properties \u00b6 Name Summary foo val foo: Foo","title":"Home"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar2/#subbar2","text":"class SubBar2 : Bar","title":"SubBar2"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar2/#constructors","text":"Name Summary <init> SubBar2 ( foo : Foo = inject ())","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar2/#properties","text":"Name Summary foo val foo: Foo","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar2/-init-/","text":"hexagon_core / com.hexagonkt.injection / SubBar2 / <init> <init> \u00b6 SubBar2 ( foo : Foo = inject ())","title":" init "},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar2/-init-/#init","text":"SubBar2 ( foo : Foo = inject ())","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar2/foo/","text":"hexagon_core / com.hexagonkt.injection / SubBar2 / foo foo \u00b6 val foo: Foo","title":"Foo"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar2/foo/#foo","text":"val foo: Foo","title":"foo"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar3/","text":"hexagon_core / com.hexagonkt.injection / SubBar3 SubBar3 \u00b6 class SubBar3 : Bar Constructors \u00b6 Name Summary <init> SubBar3 ( foo : Foo = inject ()) Properties \u00b6 Name Summary foo val foo: Foo","title":"Home"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar3/#subbar3","text":"class SubBar3 : Bar","title":"SubBar3"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar3/#constructors","text":"Name Summary <init> SubBar3 ( foo : Foo = inject ())","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar3/#properties","text":"Name Summary foo val foo: Foo","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar3/-init-/","text":"hexagon_core / com.hexagonkt.injection / SubBar3 / <init> <init> \u00b6 SubBar3 ( foo : Foo = inject ())","title":" init "},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar3/-init-/#init","text":"SubBar3 ( foo : Foo = inject ())","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar3/foo/","text":"hexagon_core / com.hexagonkt.injection / SubBar3 / foo foo \u00b6 val foo: Foo","title":"Foo"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar3/foo/#foo","text":"val foo: Foo","title":"foo"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar3a/","text":"hexagon_core / com.hexagonkt.injection / SubBar3a SubBar3a \u00b6 class SubBar3a : Bar Constructors \u00b6 Name Summary <init> SubBar3a () SubBar3a ( foo : Foo ) Properties \u00b6 Name Summary foo val foo: Foo","title":"Home"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar3a/#subbar3a","text":"class SubBar3a : Bar","title":"SubBar3a"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar3a/#constructors","text":"Name Summary <init> SubBar3a () SubBar3a ( foo : Foo )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar3a/#properties","text":"Name Summary foo val foo: Foo","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar3a/-init-/","text":"hexagon_core / com.hexagonkt.injection / SubBar3a / <init> <init> \u00b6 SubBar3a () SubBar3a ( foo : Foo )","title":" init "},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar3a/-init-/#init","text":"SubBar3a () SubBar3a ( foo : Foo )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar3a/foo/","text":"hexagon_core / com.hexagonkt.injection / SubBar3a / foo foo \u00b6 val foo: Foo","title":"Foo"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-bar3a/foo/#foo","text":"val foo: Foo","title":"foo"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-foo1/","text":"hexagon_core / com.hexagonkt.injection / SubFoo1 SubFoo1 \u00b6 class SubFoo1 : Foo Constructors \u00b6 Name Summary <init> SubFoo1 ()","title":"Home"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-foo1/#subfoo1","text":"class SubFoo1 : Foo","title":"SubFoo1"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-foo1/#constructors","text":"Name Summary <init> SubFoo1 ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-foo1/-init-/","text":"hexagon_core / com.hexagonkt.injection / SubFoo1 / <init> <init> \u00b6 SubFoo1 ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.injection/-sub-foo1/-init-/#init","text":"SubFoo1 ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-foo2/","text":"hexagon_core / com.hexagonkt.injection / SubFoo2 SubFoo2 \u00b6 class SubFoo2 : Foo Constructors \u00b6 Name Summary <init> SubFoo2 ()","title":"Home"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-foo2/#subfoo2","text":"class SubFoo2 : Foo","title":"SubFoo2"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-foo2/#constructors","text":"Name Summary <init> SubFoo2 ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.injection/-sub-foo2/-init-/","text":"hexagon_core / com.hexagonkt.injection / SubFoo2 / <init> <init> \u00b6 SubFoo2 ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.injection/-sub-foo2/-init-/#init","text":"SubFoo2 ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/","text":"hexagon_core / com.hexagonkt.serialization Package com.hexagonkt.serialization \u00b6 Parse/serialize data in different formats to class instances. Types \u00b6 Name Summary Company data class Company CompanySerializationTest class CompanySerializationTest : SerializationTest < Company > ContentType data class ContentType Csv object Csv : SerializationFormat CsvTest class CsvTest Department enum class Department Device data class Device DeviceOs enum class DeviceOs JacksonSerializerTest class JacksonSerializerTest Json object Json : SerializationFormat ParseExceptionTest class ParseExceptionTest Person data class Person SerializationFormat interface SerializationFormat SerializationFormatTest class SerializationFormatTest SerializationManager TODO object SerializationManager SerializationManagerTest class SerializationManagerTest SerializationPackageTest class SerializationPackageTest SerializationTest abstract class SerializationTest < out T : Any > Yaml object Yaml : SerializationFormat YamlTest class YamlTest Exceptions \u00b6 Name Summary ParseException class ParseException : RuntimeException Extensions for External Classes \u00b6 Name Summary java.io.File java.io.InputStream java.net.URL kotlin.Any kotlin.collections.List kotlin.collections.Map kotlin.String Functions \u00b6 Name Summary parse fun < T : Any > Resource .parse ( type : KClass < T > ): T fun < T : Any > Resource .parse (): T parseObjects fun < T : Any > Resource .parseObjects ( type : KClass < T > ): List < T > fun < T : Any > Resource .parseObjects (): List < T >","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/#package-comhexagonktserialization","text":"Parse/serialize data in different formats to class instances.","title":"Package com.hexagonkt.serialization"},{"location":"hexagon_core/com.hexagonkt.serialization/#types","text":"Name Summary Company data class Company CompanySerializationTest class CompanySerializationTest : SerializationTest < Company > ContentType data class ContentType Csv object Csv : SerializationFormat CsvTest class CsvTest Department enum class Department Device data class Device DeviceOs enum class DeviceOs JacksonSerializerTest class JacksonSerializerTest Json object Json : SerializationFormat ParseExceptionTest class ParseExceptionTest Person data class Person SerializationFormat interface SerializationFormat SerializationFormatTest class SerializationFormatTest SerializationManager TODO object SerializationManager SerializationManagerTest class SerializationManagerTest SerializationPackageTest class SerializationPackageTest SerializationTest abstract class SerializationTest < out T : Any > Yaml object Yaml : SerializationFormat YamlTest class YamlTest","title":"Types"},{"location":"hexagon_core/com.hexagonkt.serialization/#exceptions","text":"Name Summary ParseException class ParseException : RuntimeException","title":"Exceptions"},{"location":"hexagon_core/com.hexagonkt.serialization/#extensions-for-external-classes","text":"Name Summary java.io.File java.io.InputStream java.net.URL kotlin.Any kotlin.collections.List kotlin.collections.Map kotlin.String","title":"Extensions for External Classes"},{"location":"hexagon_core/com.hexagonkt.serialization/#functions","text":"Name Summary parse fun < T : Any > Resource .parse ( type : KClass < T > ): T fun < T : Any > Resource .parse (): T parseObjects fun < T : Any > Resource .parseObjects ( type : KClass < T > ): List < T > fun < T : Any > Resource .parseObjects (): List < T >","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.serialization/-json/","text":"hexagon_core / com.hexagonkt.serialization / Json Json \u00b6 object Json : SerializationFormat","title":" json"},{"location":"hexagon_core/com.hexagonkt.serialization/-json/#json","text":"object Json : SerializationFormat","title":"Json"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml/","text":"hexagon_core / com.hexagonkt.serialization / Yaml Yaml \u00b6 object Yaml : SerializationFormat","title":" yaml"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml/#yaml","text":"object Yaml : SerializationFormat","title":"Yaml"},{"location":"hexagon_core/com.hexagonkt.serialization/parse-objects/","text":"hexagon_core / com.hexagonkt.serialization / parseObjects parseObjects \u00b6 fun < T : Any > Resource .parseObjects ( type : KClass < T > ): List < T > fun < reified T : Any > Resource .parseObjects (): List < T >","title":"Parse objects"},{"location":"hexagon_core/com.hexagonkt.serialization/parse-objects/#parseobjects","text":"fun < T : Any > Resource .parseObjects ( type : KClass < T > ): List < T > fun < reified T : Any > Resource .parseObjects (): List < T >","title":"parseObjects"},{"location":"hexagon_core/com.hexagonkt.serialization/parse/","text":"hexagon_core / com.hexagonkt.serialization / parse parse \u00b6 fun < T : Any > Resource .parse ( type : KClass < T > ): T fun < reified T : Any > Resource .parse (): T","title":"Parse"},{"location":"hexagon_core/com.hexagonkt.serialization/parse/#parse","text":"fun < T : Any > Resource .parse ( type : KClass < T > ): T fun < reified T : Any > Resource .parse (): T","title":"parse"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/","text":"hexagon_core / com.hexagonkt.serialization / Company Company \u00b6 data class Company Constructors \u00b6 Name Summary <init> Company ( id : String , foundation : LocalDate , closeTime : LocalTime , openTime : ClosedRange < LocalTime > , web : URL ? , clients : List < URL > = listOf (), logo : ByteBuffer ? = null , notes : String ? = null , people : Set < Person > , departments : Set < Department > = setOf (), creationDate : LocalDateTime = LocalDateTime . now (), host : InetAddress ) Properties \u00b6 Name Summary clients val clients: List < URL > closeTime val closeTime: LocalTime creationDate val creationDate: LocalDateTime departments val departments: Set < Department > foundation val foundation: LocalDate host val host: InetAddress id val id: String logo val logo: ByteBuffer ? notes val notes: String ? openTime val openTime: ClosedRange < LocalTime > people val people: Set < Person > web val web: URL ?","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/#company","text":"data class Company","title":"Company"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/#constructors","text":"Name Summary <init> Company ( id : String , foundation : LocalDate , closeTime : LocalTime , openTime : ClosedRange < LocalTime > , web : URL ? , clients : List < URL > = listOf (), logo : ByteBuffer ? = null , notes : String ? = null , people : Set < Person > , departments : Set < Department > = setOf (), creationDate : LocalDateTime = LocalDateTime . now (), host : InetAddress )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/#properties","text":"Name Summary clients val clients: List < URL > closeTime val closeTime: LocalTime creationDate val creationDate: LocalDateTime departments val departments: Set < Department > foundation val foundation: LocalDate host val host: InetAddress id val id: String logo val logo: ByteBuffer ? notes val notes: String ? openTime val openTime: ClosedRange < LocalTime > people val people: Set < Person > web val web: URL ?","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/-init-/","text":"hexagon_core / com.hexagonkt.serialization / Company / <init> <init> \u00b6 Company ( id : String , foundation : LocalDate , closeTime : LocalTime , openTime : ClosedRange < LocalTime > , web : URL ? , clients : List < URL > = listOf (), logo : ByteBuffer ? = null , notes : String ? = null , people : Set < Person > , departments : Set < Department > = setOf (), creationDate : LocalDateTime = LocalDateTime . now (), host : InetAddress )","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-company/-init-/#init","text":"Company ( id : String , foundation : LocalDate , closeTime : LocalTime , openTime : ClosedRange < LocalTime > , web : URL ? , clients : List < URL > = listOf (), logo : ByteBuffer ? = null , notes : String ? = null , people : Set < Person > , departments : Set < Department > = setOf (), creationDate : LocalDateTime = LocalDateTime . now (), host : InetAddress )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/clients/","text":"hexagon_core / com.hexagonkt.serialization / Company / clients clients \u00b6 val clients: List < URL >","title":"Clients"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/clients/#clients","text":"val clients: List < URL >","title":"clients"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/close-time/","text":"hexagon_core / com.hexagonkt.serialization / Company / closeTime closeTime \u00b6 val closeTime: LocalTime","title":"Close time"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/close-time/#closetime","text":"val closeTime: LocalTime","title":"closeTime"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/creation-date/","text":"hexagon_core / com.hexagonkt.serialization / Company / creationDate creationDate \u00b6 val creationDate: LocalDateTime","title":"Creation date"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/creation-date/#creationdate","text":"val creationDate: LocalDateTime","title":"creationDate"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/departments/","text":"hexagon_core / com.hexagonkt.serialization / Company / departments departments \u00b6 val departments: Set < Department >","title":"Departments"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/departments/#departments","text":"val departments: Set < Department >","title":"departments"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/foundation/","text":"hexagon_core / com.hexagonkt.serialization / Company / foundation foundation \u00b6 val foundation: LocalDate","title":"Foundation"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/foundation/#foundation","text":"val foundation: LocalDate","title":"foundation"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/host/","text":"hexagon_core / com.hexagonkt.serialization / Company / host host \u00b6 val host: InetAddress","title":"Host"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/host/#host","text":"val host: InetAddress","title":"host"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/id/","text":"hexagon_core / com.hexagonkt.serialization / Company / id id \u00b6 val id: String","title":"Id"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/id/#id","text":"val id: String","title":"id"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/logo/","text":"hexagon_core / com.hexagonkt.serialization / Company / logo logo \u00b6 val logo: ByteBuffer ?","title":"Logo"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/logo/#logo","text":"val logo: ByteBuffer ?","title":"logo"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/notes/","text":"hexagon_core / com.hexagonkt.serialization / Company / notes notes \u00b6 val notes: String ?","title":"Notes"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/notes/#notes","text":"val notes: String ?","title":"notes"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/open-time/","text":"hexagon_core / com.hexagonkt.serialization / Company / openTime openTime \u00b6 val openTime: ClosedRange < LocalTime >","title":"Open time"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/open-time/#opentime","text":"val openTime: ClosedRange < LocalTime >","title":"openTime"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/people/","text":"hexagon_core / com.hexagonkt.serialization / Company / people people \u00b6 val people: Set < Person >","title":"People"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/people/#people","text":"val people: Set < Person >","title":"people"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/web/","text":"hexagon_core / com.hexagonkt.serialization / Company / web web \u00b6 val web: URL ?","title":"Web"},{"location":"hexagon_core/com.hexagonkt.serialization/-company/web/#web","text":"val web: URL ?","title":"web"},{"location":"hexagon_core/com.hexagonkt.serialization/-company-serialization-test/","text":"hexagon_core / com.hexagonkt.serialization / CompanySerializationTest CompanySerializationTest \u00b6 class CompanySerializationTest : SerializationTest < Company > Constructors \u00b6 Name Summary <init> CompanySerializationTest () Properties \u00b6 Name Summary testObjects val testObjects: List < Company >","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-company-serialization-test/#companyserializationtest","text":"class CompanySerializationTest : SerializationTest < Company >","title":"CompanySerializationTest"},{"location":"hexagon_core/com.hexagonkt.serialization/-company-serialization-test/#constructors","text":"Name Summary <init> CompanySerializationTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-company-serialization-test/#properties","text":"Name Summary testObjects val testObjects: List < Company >","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.serialization/-company-serialization-test/-init-/","text":"hexagon_core / com.hexagonkt.serialization / CompanySerializationTest / <init> <init> \u00b6 CompanySerializationTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-company-serialization-test/-init-/#init","text":"CompanySerializationTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-company-serialization-test/test-objects/","text":"hexagon_core / com.hexagonkt.serialization / CompanySerializationTest / testObjects testObjects \u00b6 val testObjects: List < Company >","title":"Test objects"},{"location":"hexagon_core/com.hexagonkt.serialization/-company-serialization-test/test-objects/#testobjects","text":"val testObjects: List < Company >","title":"testObjects"},{"location":"hexagon_core/com.hexagonkt.serialization/-content-type/","text":"hexagon_core / com.hexagonkt.serialization / ContentType ContentType \u00b6 data class ContentType Constructors \u00b6 Name Summary <init> ContentType ( format : SerializationFormat , charset : Charset ? = null ) Properties \u00b6 Name Summary charset val charset: Charset ? format val format: SerializationFormat Functions \u00b6 Name Summary toString fun toString (): String","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-content-type/#contenttype","text":"data class ContentType","title":"ContentType"},{"location":"hexagon_core/com.hexagonkt.serialization/-content-type/#constructors","text":"Name Summary <init> ContentType ( format : SerializationFormat , charset : Charset ? = null )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-content-type/#properties","text":"Name Summary charset val charset: Charset ? format val format: SerializationFormat","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.serialization/-content-type/#functions","text":"Name Summary toString fun toString (): String","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.serialization/-content-type/-init-/","text":"hexagon_core / com.hexagonkt.serialization / ContentType / <init> <init> \u00b6 ContentType ( format : SerializationFormat , charset : Charset ? = null )","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-content-type/-init-/#init","text":"ContentType ( format : SerializationFormat , charset : Charset ? = null )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-content-type/charset/","text":"hexagon_core / com.hexagonkt.serialization / ContentType / charset charset \u00b6 val charset: Charset ?","title":"Charset"},{"location":"hexagon_core/com.hexagonkt.serialization/-content-type/charset/#charset","text":"val charset: Charset ?","title":"charset"},{"location":"hexagon_core/com.hexagonkt.serialization/-content-type/format/","text":"hexagon_core / com.hexagonkt.serialization / ContentType / format format \u00b6 val format: SerializationFormat","title":"Format"},{"location":"hexagon_core/com.hexagonkt.serialization/-content-type/format/#format","text":"val format: SerializationFormat","title":"format"},{"location":"hexagon_core/com.hexagonkt.serialization/-content-type/to-string/","text":"hexagon_core / com.hexagonkt.serialization / ContentType / toString toString \u00b6 fun toString (): String","title":"To string"},{"location":"hexagon_core/com.hexagonkt.serialization/-content-type/to-string/#tostring","text":"fun toString (): String","title":"toString"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv/","text":"hexagon_core / com.hexagonkt.serialization / Csv Csv \u00b6 object Csv : SerializationFormat Properties \u00b6 Name Summary contentType val contentType: String extensions val extensions: Set < String > isBinary val isBinary: Boolean Functions \u00b6 Name Summary parse fun < T : Any > parse ( input : InputStream , type : KClass < T > ): T parseObjects fun < T : Any > parseObjects ( input : InputStream , type : KClass < T > ): List < T > serialize fun serialize ( obj : Any , output : OutputStream ): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv/#csv","text":"object Csv : SerializationFormat","title":"Csv"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv/#properties","text":"Name Summary contentType val contentType: String extensions val extensions: Set < String > isBinary val isBinary: Boolean","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv/#functions","text":"Name Summary parse fun < T : Any > parse ( input : InputStream , type : KClass < T > ): T parseObjects fun < T : Any > parseObjects ( input : InputStream , type : KClass < T > ): List < T > serialize fun serialize ( obj : Any , output : OutputStream ): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv/content-type/","text":"hexagon_core / com.hexagonkt.serialization / Csv / contentType contentType \u00b6 val contentType: String","title":"Content type"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv/content-type/#contenttype","text":"val contentType: String","title":"contentType"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv/extensions/","text":"hexagon_core / com.hexagonkt.serialization / Csv / extensions extensions \u00b6 val extensions: Set < String >","title":"Extensions"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv/extensions/#extensions","text":"val extensions: Set < String >","title":"extensions"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv/is-binary/","text":"hexagon_core / com.hexagonkt.serialization / Csv / isBinary isBinary \u00b6 val isBinary: Boolean","title":"Is binary"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv/is-binary/#isbinary","text":"val isBinary: Boolean","title":"isBinary"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv/parse-objects/","text":"hexagon_core / com.hexagonkt.serialization / Csv / parseObjects parseObjects \u00b6 fun < T : Any > parseObjects ( input : InputStream , type : KClass < T > ): List < T >","title":"Parse objects"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv/parse-objects/#parseobjects","text":"fun < T : Any > parseObjects ( input : InputStream , type : KClass < T > ): List < T >","title":"parseObjects"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv/parse/","text":"hexagon_core / com.hexagonkt.serialization / Csv / parse parse \u00b6 fun < T : Any > parse ( input : InputStream , type : KClass < T > ): T","title":"Parse"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv/parse/#parse","text":"fun < T : Any > parse ( input : InputStream , type : KClass < T > ): T","title":"parse"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv/serialize/","text":"hexagon_core / com.hexagonkt.serialization / Csv / serialize serialize \u00b6 fun serialize ( obj : Any , output : OutputStream ): Unit","title":"Serialize"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv/serialize/#serialize","text":"fun serialize ( obj : Any , output : OutputStream ): Unit","title":"serialize"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/","text":"hexagon_core / com.hexagonkt.serialization / CsvTest CsvTest \u00b6 class CsvTest Types \u00b6 Name Summary Player data class Player Constructors \u00b6 Name Summary <init> CsvTest () Functions \u00b6 Name Summary CSV is serialized properly fun CSV is serialized properly (): Unit Invalid format exceptions field is 'null' fun Invalid format exceptions field is 'null' (): Unit Parse an invalid class list throws exception fun Parse an invalid class list throws exception (): Unit Parse exceptions contains failed field fun Parse exceptions contains failed field (): Unit Parse invalid CSV type fun Parse invalid CSV type (): Unit Serialize an empty list works as expected fun Serialize an empty list works as expected (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/#csvtest","text":"class CsvTest","title":"CsvTest"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/#types","text":"Name Summary Player data class Player","title":"Types"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/#constructors","text":"Name Summary <init> CsvTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/#functions","text":"Name Summary CSV is serialized properly fun CSV is serialized properly (): Unit Invalid format exceptions field is 'null' fun Invalid format exceptions field is 'null' (): Unit Parse an invalid class list throws exception fun Parse an invalid class list throws exception (): Unit Parse exceptions contains failed field fun Parse exceptions contains failed field (): Unit Parse invalid CSV type fun Parse invalid CSV type (): Unit Serialize an empty list works as expected fun Serialize an empty list works as expected (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-c-s-v is serialized properly/","text":"hexagon_core / com.hexagonkt.serialization / CsvTest / CSV is serialized properly CSV is serialized properly \u00b6 fun CSV is serialized properly (): Unit","title":" c s v is serialized properly"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-c-s-v is serialized properly/#csv-is-serialized-properly","text":"fun CSV is serialized properly (): Unit","title":"CSV is serialized properly"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-init-/","text":"hexagon_core / com.hexagonkt.serialization / CsvTest / <init> <init> \u00b6 CsvTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-init-/#init","text":"CsvTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-invalid format exceptions field is 'null'/","text":"hexagon_core / com.hexagonkt.serialization / CsvTest / Invalid format exceptions field is 'null' Invalid format exceptions field is 'null' \u00b6 fun Invalid format exceptions field is 'null' (): Unit","title":" invalid format exceptions field is 'null'"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-invalid format exceptions field is 'null'/#invalid-format-exceptions-field-is-null","text":"fun Invalid format exceptions field is 'null' (): Unit","title":"Invalid format exceptions field is 'null'"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-parse an invalid class list throws exception/","text":"hexagon_core / com.hexagonkt.serialization / CsvTest / Parse an invalid class list throws exception Parse an invalid class list throws exception \u00b6 fun Parse an invalid class list throws exception (): Unit","title":" parse an invalid class list throws exception"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-parse an invalid class list throws exception/#parse-an-invalid-class-list-throws-exception","text":"fun Parse an invalid class list throws exception (): Unit","title":"Parse an invalid class list throws exception"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-parse exceptions contains failed field/","text":"hexagon_core / com.hexagonkt.serialization / CsvTest / Parse exceptions contains failed field Parse exceptions contains failed field \u00b6 fun Parse exceptions contains failed field (): Unit","title":" parse exceptions contains failed field"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-parse exceptions contains failed field/#parse-exceptions-contains-failed-field","text":"fun Parse exceptions contains failed field (): Unit","title":"Parse exceptions contains failed field"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-parse invalid -c-s-v type/","text":"hexagon_core / com.hexagonkt.serialization / CsvTest / Parse invalid CSV type Parse invalid CSV type \u00b6 fun Parse invalid CSV type (): Unit","title":" parse invalid  c s v type"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-parse invalid -c-s-v type/#parse-invalid-csv-type","text":"fun Parse invalid CSV type (): Unit","title":"Parse invalid CSV type"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-serialize an empty list works as expected/","text":"hexagon_core / com.hexagonkt.serialization / CsvTest / Serialize an empty list works as expected Serialize an empty list works as expected \u00b6 fun Serialize an empty list works as expected (): Unit","title":" serialize an empty list works as expected"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-serialize an empty list works as expected/#serialize-an-empty-list-works-as-expected","text":"fun Serialize an empty list works as expected (): Unit","title":"Serialize an empty list works as expected"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-player/","text":"hexagon_core / com.hexagonkt.serialization / CsvTest / Player Player \u00b6 data class Player Constructors \u00b6 Name Summary <init> Player ( name : String , number : Int , category : Int ) Properties \u00b6 Name Summary category val category: Int name val name: String number val number: Int","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-player/#player","text":"data class Player","title":"Player"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-player/#constructors","text":"Name Summary <init> Player ( name : String , number : Int , category : Int )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-player/#properties","text":"Name Summary category val category: Int name val name: String number val number: Int","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-player/-init-/","text":"hexagon_core / com.hexagonkt.serialization / CsvTest / Player / <init> <init> \u00b6 Player ( name : String , number : Int , category : Int )","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-player/-init-/#init","text":"Player ( name : String , number : Int , category : Int )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-player/category/","text":"hexagon_core / com.hexagonkt.serialization / CsvTest / Player / category category \u00b6 val category: Int","title":"Category"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-player/category/#category","text":"val category: Int","title":"category"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-player/name/","text":"hexagon_core / com.hexagonkt.serialization / CsvTest / Player / name name \u00b6 val name: String","title":"Name"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-player/name/#name","text":"val name: String","title":"name"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-player/number/","text":"hexagon_core / com.hexagonkt.serialization / CsvTest / Player / number number \u00b6 val number: Int","title":"Number"},{"location":"hexagon_core/com.hexagonkt.serialization/-csv-test/-player/number/#number","text":"val number: Int","title":"number"},{"location":"hexagon_core/com.hexagonkt.serialization/-department/","text":"hexagon_core / com.hexagonkt.serialization / Department Department \u00b6 enum class Department Enum Values \u00b6 Name Summary DESIGN DEVELOPMENT","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-department/#department","text":"enum class Department","title":"Department"},{"location":"hexagon_core/com.hexagonkt.serialization/-department/#enum-values","text":"Name Summary DESIGN DEVELOPMENT","title":"Enum Values"},{"location":"hexagon_core/com.hexagonkt.serialization/-department/-d-e-s-i-g-n/","text":"hexagon_core / com.hexagonkt.serialization / Department / DESIGN DESIGN \u00b6 DESIGN","title":" d e s i g n"},{"location":"hexagon_core/com.hexagonkt.serialization/-department/-d-e-s-i-g-n/#design","text":"DESIGN","title":"DESIGN"},{"location":"hexagon_core/com.hexagonkt.serialization/-department/-d-e-v-e-l-o-p-m-e-n-t/","text":"hexagon_core / com.hexagonkt.serialization / Department / DEVELOPMENT DEVELOPMENT \u00b6 DEVELOPMENT","title":" d e v e l o p m e n t"},{"location":"hexagon_core/com.hexagonkt.serialization/-department/-d-e-v-e-l-o-p-m-e-n-t/#development","text":"DEVELOPMENT","title":"DEVELOPMENT"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/","text":"hexagon_core / com.hexagonkt.serialization / Device Device \u00b6 data class Device Constructors \u00b6 Name Summary <init> Device ( id : String , brand : String , model : String , os : DeviceOs , osVersion : String , alias : String = \"$brand $model\" ) Properties \u00b6 Name Summary alias val alias: String brand val brand: String id val id: String model val model: String os val os: DeviceOs osVersion val osVersion: String","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/#device","text":"data class Device","title":"Device"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/#constructors","text":"Name Summary <init> Device ( id : String , brand : String , model : String , os : DeviceOs , osVersion : String , alias : String = \"$brand $model\" )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/#properties","text":"Name Summary alias val alias: String brand val brand: String id val id: String model val model: String os val os: DeviceOs osVersion val osVersion: String","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/-init-/","text":"hexagon_core / com.hexagonkt.serialization / Device / <init> <init> \u00b6 Device ( id : String , brand : String , model : String , os : DeviceOs , osVersion : String , alias : String = \"$brand $model\" )","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-device/-init-/#init","text":"Device ( id : String , brand : String , model : String , os : DeviceOs , osVersion : String , alias : String = \"$brand $model\" )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/alias/","text":"hexagon_core / com.hexagonkt.serialization / Device / alias alias \u00b6 val alias: String","title":"Alias"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/alias/#alias","text":"val alias: String","title":"alias"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/brand/","text":"hexagon_core / com.hexagonkt.serialization / Device / brand brand \u00b6 val brand: String","title":"Brand"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/brand/#brand","text":"val brand: String","title":"brand"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/id/","text":"hexagon_core / com.hexagonkt.serialization / Device / id id \u00b6 val id: String","title":"Id"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/id/#id","text":"val id: String","title":"id"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/model/","text":"hexagon_core / com.hexagonkt.serialization / Device / model model \u00b6 val model: String","title":"Model"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/model/#model","text":"val model: String","title":"model"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/os-version/","text":"hexagon_core / com.hexagonkt.serialization / Device / osVersion osVersion \u00b6 val osVersion: String","title":"Os version"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/os-version/#osversion","text":"val osVersion: String","title":"osVersion"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/os/","text":"hexagon_core / com.hexagonkt.serialization / Device / os os \u00b6 val os: DeviceOs","title":"Os"},{"location":"hexagon_core/com.hexagonkt.serialization/-device/os/#os","text":"val os: DeviceOs","title":"os"},{"location":"hexagon_core/com.hexagonkt.serialization/-device-os/","text":"hexagon_core / com.hexagonkt.serialization / DeviceOs DeviceOs \u00b6 enum class DeviceOs Enum Values \u00b6 Name Summary ANDROID IOS","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-device-os/#deviceos","text":"enum class DeviceOs","title":"DeviceOs"},{"location":"hexagon_core/com.hexagonkt.serialization/-device-os/#enum-values","text":"Name Summary ANDROID IOS","title":"Enum Values"},{"location":"hexagon_core/com.hexagonkt.serialization/-device-os/-a-n-d-r-o-i-d/","text":"hexagon_core / com.hexagonkt.serialization / DeviceOs / ANDROID ANDROID \u00b6 ANDROID","title":" a n d r o i d"},{"location":"hexagon_core/com.hexagonkt.serialization/-device-os/-a-n-d-r-o-i-d/#android","text":"ANDROID","title":"ANDROID"},{"location":"hexagon_core/com.hexagonkt.serialization/-device-os/-i-o-s/","text":"hexagon_core / com.hexagonkt.serialization / DeviceOs / IOS IOS \u00b6 IOS","title":" i o s"},{"location":"hexagon_core/com.hexagonkt.serialization/-device-os/-i-o-s/#ios","text":"IOS","title":"IOS"},{"location":"hexagon_core/com.hexagonkt.serialization/-jackson-serializer-test/","text":"hexagon_core / com.hexagonkt.serialization / JacksonSerializerTest JacksonSerializerTest \u00b6 class JacksonSerializerTest Constructors \u00b6 Name Summary <init> JacksonSerializerTest () Functions \u00b6 Name Summary Parse resource works ok fun Parse resource works ok (): Unit Parse URL works ok fun Parse URL works ok (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-jackson-serializer-test/#jacksonserializertest","text":"class JacksonSerializerTest","title":"JacksonSerializerTest"},{"location":"hexagon_core/com.hexagonkt.serialization/-jackson-serializer-test/#constructors","text":"Name Summary <init> JacksonSerializerTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-jackson-serializer-test/#functions","text":"Name Summary Parse resource works ok fun Parse resource works ok (): Unit Parse URL works ok fun Parse URL works ok (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.serialization/-jackson-serializer-test/-init-/","text":"hexagon_core / com.hexagonkt.serialization / JacksonSerializerTest / <init> <init> \u00b6 JacksonSerializerTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-jackson-serializer-test/-init-/#init","text":"JacksonSerializerTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-jackson-serializer-test/-parse -u-r-l works ok/","text":"hexagon_core / com.hexagonkt.serialization / JacksonSerializerTest / Parse URL works ok Parse URL works ok \u00b6 fun Parse URL works ok (): Unit","title":" parse  u r l works ok"},{"location":"hexagon_core/com.hexagonkt.serialization/-jackson-serializer-test/-parse -u-r-l works ok/#parse-url-works-ok","text":"fun Parse URL works ok (): Unit","title":"Parse URL works ok"},{"location":"hexagon_core/com.hexagonkt.serialization/-jackson-serializer-test/-parse resource works ok/","text":"hexagon_core / com.hexagonkt.serialization / JacksonSerializerTest / Parse resource works ok Parse resource works ok \u00b6 fun Parse resource works ok (): Unit","title":" parse resource works ok"},{"location":"hexagon_core/com.hexagonkt.serialization/-jackson-serializer-test/-parse resource works ok/#parse-resource-works-ok","text":"fun Parse resource works ok (): Unit","title":"Parse resource works ok"},{"location":"hexagon_core/com.hexagonkt.serialization/-parse-exception/","text":"hexagon_core / com.hexagonkt.serialization / ParseException ParseException \u00b6 class ParseException : RuntimeException Constructors \u00b6 Name Summary <init> ParseException ( cause : Throwable ? = null ) Properties \u00b6 Name Summary field val field: String","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-parse-exception/#parseexception","text":"class ParseException : RuntimeException","title":"ParseException"},{"location":"hexagon_core/com.hexagonkt.serialization/-parse-exception/#constructors","text":"Name Summary <init> ParseException ( cause : Throwable ? = null )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-parse-exception/#properties","text":"Name Summary field val field: String","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.serialization/-parse-exception/-init-/","text":"hexagon_core / com.hexagonkt.serialization / ParseException / <init> <init> \u00b6 ParseException ( cause : Throwable ? = null )","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-parse-exception/-init-/#init","text":"ParseException ( cause : Throwable ? = null )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-parse-exception/field/","text":"hexagon_core / com.hexagonkt.serialization / ParseException / field field \u00b6 val field: String","title":"Field"},{"location":"hexagon_core/com.hexagonkt.serialization/-parse-exception/field/#field","text":"val field: String","title":"field"},{"location":"hexagon_core/com.hexagonkt.serialization/-parse-exception-test/","text":"hexagon_core / com.hexagonkt.serialization / ParseExceptionTest ParseExceptionTest \u00b6 class ParseExceptionTest Constructors \u00b6 Name Summary <init> ParseExceptionTest () Functions \u00b6 Name Summary ParseException obtains field name properly fun ParseException obtains field name properly (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-parse-exception-test/#parseexceptiontest","text":"class ParseExceptionTest","title":"ParseExceptionTest"},{"location":"hexagon_core/com.hexagonkt.serialization/-parse-exception-test/#constructors","text":"Name Summary <init> ParseExceptionTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-parse-exception-test/#functions","text":"Name Summary ParseException obtains field name properly fun ParseException obtains field name properly (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.serialization/-parse-exception-test/-init-/","text":"hexagon_core / com.hexagonkt.serialization / ParseExceptionTest / <init> <init> \u00b6 ParseExceptionTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-parse-exception-test/-init-/#init","text":"ParseExceptionTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-parse-exception-test/-parse-exception obtains field name properly/","text":"hexagon_core / com.hexagonkt.serialization / ParseExceptionTest / ParseException obtains field name properly ParseException obtains field name properly \u00b6 fun ParseException obtains field name properly (): Unit","title":" parse exception obtains field name properly"},{"location":"hexagon_core/com.hexagonkt.serialization/-parse-exception-test/-parse-exception obtains field name properly/#parseexception-obtains-field-name-properly","text":"fun ParseException obtains field name properly (): Unit","title":"ParseException obtains field name properly"},{"location":"hexagon_core/com.hexagonkt.serialization/-person/","text":"hexagon_core / com.hexagonkt.serialization / Person Person \u00b6 data class Person Constructors \u00b6 Name Summary <init> Person ( name : String ) Properties \u00b6 Name Summary name val name: String","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-person/#person","text":"data class Person","title":"Person"},{"location":"hexagon_core/com.hexagonkt.serialization/-person/#constructors","text":"Name Summary <init> Person ( name : String )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-person/#properties","text":"Name Summary name val name: String","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.serialization/-person/-init-/","text":"hexagon_core / com.hexagonkt.serialization / Person / <init> <init> \u00b6 Person ( name : String )","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-person/-init-/#init","text":"Person ( name : String )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-person/name/","text":"hexagon_core / com.hexagonkt.serialization / Person / name name \u00b6 val name: String","title":"Name"},{"location":"hexagon_core/com.hexagonkt.serialization/-person/name/#name","text":"val name: String","title":"name"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormat SerializationFormat \u00b6 interface SerializationFormat Properties \u00b6 Name Summary contentType abstract val contentType: String extensions abstract val extensions: Set < String > isBinary abstract val isBinary: Boolean Functions \u00b6 Name Summary parse abstract fun < T : Any > parse ( input : InputStream , type : KClass < T > ): T parseObjects abstract fun < T : Any > parseObjects ( input : InputStream , type : KClass < T > ): List < T > serialize abstract fun serialize ( obj : Any , output : OutputStream ): Unit open fun serialize ( obj : Any ): String Inheritors \u00b6 Name Summary Csv object Csv : SerializationFormat Json object Json : SerializationFormat Yaml object Yaml : SerializationFormat","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/#serializationformat","text":"interface SerializationFormat","title":"SerializationFormat"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/#properties","text":"Name Summary contentType abstract val contentType: String extensions abstract val extensions: Set < String > isBinary abstract val isBinary: Boolean","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/#functions","text":"Name Summary parse abstract fun < T : Any > parse ( input : InputStream , type : KClass < T > ): T parseObjects abstract fun < T : Any > parseObjects ( input : InputStream , type : KClass < T > ): List < T > serialize abstract fun serialize ( obj : Any , output : OutputStream ): Unit open fun serialize ( obj : Any ): String","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/#inheritors","text":"Name Summary Csv object Csv : SerializationFormat Json object Json : SerializationFormat Yaml object Yaml : SerializationFormat","title":"Inheritors"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/content-type/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormat / contentType contentType \u00b6 abstract val contentType: String","title":"Content type"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/content-type/#contenttype","text":"abstract val contentType: String","title":"contentType"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/extensions/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormat / extensions extensions \u00b6 abstract val extensions: Set < String >","title":"Extensions"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/extensions/#extensions","text":"abstract val extensions: Set < String >","title":"extensions"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/is-binary/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormat / isBinary isBinary \u00b6 abstract val isBinary: Boolean","title":"Is binary"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/is-binary/#isbinary","text":"abstract val isBinary: Boolean","title":"isBinary"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/parse-objects/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormat / parseObjects parseObjects \u00b6 abstract fun < T : Any > parseObjects ( input : InputStream , type : KClass < T > ): List < T >","title":"Parse objects"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/parse-objects/#parseobjects","text":"abstract fun < T : Any > parseObjects ( input : InputStream , type : KClass < T > ): List < T >","title":"parseObjects"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/parse/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormat / parse parse \u00b6 abstract fun < T : Any > parse ( input : InputStream , type : KClass < T > ): T","title":"Parse"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/parse/#parse","text":"abstract fun < T : Any > parse ( input : InputStream , type : KClass < T > ): T","title":"parse"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/serialize/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormat / serialize serialize \u00b6 abstract fun serialize ( obj : Any , output : OutputStream ): Unit open fun serialize ( obj : Any ): String","title":"Serialize"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format/serialize/#serialize","text":"abstract fun serialize ( obj : Any , output : OutputStream ): Unit open fun serialize ( obj : Any ): String","title":"serialize"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest SerializationFormatTest \u00b6 class SerializationFormatTest Types \u00b6 Name Summary BinaryTestFormat class BinaryTestFormat : SerializationFormat TextTestFormat class TextTestFormat : SerializationFormat Constructors \u00b6 Name Summary <init> SerializationFormatTest () Functions \u00b6 Name Summary A binary format fails to serialize to a string fun A binary format fails to serialize to a string (): Unit A text format can be serialized to a string fun A text format can be serialized to a string (): Unit Test Jackson text format fun Test Jackson text format (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/#serializationformattest","text":"class SerializationFormatTest","title":"SerializationFormatTest"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/#types","text":"Name Summary BinaryTestFormat class BinaryTestFormat : SerializationFormat TextTestFormat class TextTestFormat : SerializationFormat","title":"Types"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/#constructors","text":"Name Summary <init> SerializationFormatTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/#functions","text":"Name Summary A binary format fails to serialize to a string fun A binary format fails to serialize to a string (): Unit A text format can be serialized to a string fun A text format can be serialized to a string (): Unit Test Jackson text format fun Test Jackson text format (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-a binary format fails to serialize to a string/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / A binary format fails to serialize to a string A binary format fails to serialize to a string \u00b6 fun A binary format fails to serialize to a string (): Unit","title":" a binary format fails to serialize to a string"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-a binary format fails to serialize to a string/#a-binary-format-fails-to-serialize-to-a-string","text":"fun A binary format fails to serialize to a string (): Unit","title":"A binary format fails to serialize to a string"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-a text format can be serialized to a string/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / A text format can be serialized to a string A text format can be serialized to a string \u00b6 fun A text format can be serialized to a string (): Unit","title":" a text format can be serialized to a string"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-a text format can be serialized to a string/#a-text-format-can-be-serialized-to-a-string","text":"fun A text format can be serialized to a string (): Unit","title":"A text format can be serialized to a string"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-init-/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / <init> <init> \u00b6 SerializationFormatTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-init-/#init","text":"SerializationFormatTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-test -jackson text format/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / Test Jackson text format Test Jackson text format \u00b6 fun Test Jackson text format (): Unit","title":" test  jackson text format"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-test -jackson text format/#test-jackson-text-format","text":"fun Test Jackson text format (): Unit","title":"Test Jackson text format"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / BinaryTestFormat BinaryTestFormat \u00b6 class BinaryTestFormat : SerializationFormat Constructors \u00b6 Name Summary <init> BinaryTestFormat () Properties \u00b6 Name Summary contentType val contentType: String extensions val extensions: Set < String > isBinary val isBinary: Boolean Functions \u00b6 Name Summary parse fun < T : Any > parse ( input : InputStream , type : KClass < T > ): T parseObjects fun < T : Any > parseObjects ( input : InputStream , type : KClass < T > ): List < T > serialize fun serialize ( obj : Any , output : OutputStream ): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/#binarytestformat","text":"class BinaryTestFormat : SerializationFormat","title":"BinaryTestFormat"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/#constructors","text":"Name Summary <init> BinaryTestFormat ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/#properties","text":"Name Summary contentType val contentType: String extensions val extensions: Set < String > isBinary val isBinary: Boolean","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/#functions","text":"Name Summary parse fun < T : Any > parse ( input : InputStream , type : KClass < T > ): T parseObjects fun < T : Any > parseObjects ( input : InputStream , type : KClass < T > ): List < T > serialize fun serialize ( obj : Any , output : OutputStream ): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/-init-/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / BinaryTestFormat / <init> <init> \u00b6 BinaryTestFormat ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/-init-/#init","text":"BinaryTestFormat ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/content-type/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / BinaryTestFormat / contentType contentType \u00b6 val contentType: String","title":"Content type"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/content-type/#contenttype","text":"val contentType: String","title":"contentType"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/extensions/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / BinaryTestFormat / extensions extensions \u00b6 val extensions: Set < String >","title":"Extensions"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/extensions/#extensions","text":"val extensions: Set < String >","title":"extensions"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/is-binary/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / BinaryTestFormat / isBinary isBinary \u00b6 val isBinary: Boolean","title":"Is binary"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/is-binary/#isbinary","text":"val isBinary: Boolean","title":"isBinary"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/parse-objects/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / BinaryTestFormat / parseObjects parseObjects \u00b6 fun < T : Any > parseObjects ( input : InputStream , type : KClass < T > ): List < T >","title":"Parse objects"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/parse-objects/#parseobjects","text":"fun < T : Any > parseObjects ( input : InputStream , type : KClass < T > ): List < T >","title":"parseObjects"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/parse/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / BinaryTestFormat / parse parse \u00b6 fun < T : Any > parse ( input : InputStream , type : KClass < T > ): T","title":"Parse"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/parse/#parse","text":"fun < T : Any > parse ( input : InputStream , type : KClass < T > ): T","title":"parse"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/serialize/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / BinaryTestFormat / serialize serialize \u00b6 fun serialize ( obj : Any , output : OutputStream ): Unit","title":"Serialize"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-binary-test-format/serialize/#serialize","text":"fun serialize ( obj : Any , output : OutputStream ): Unit","title":"serialize"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / TextTestFormat TextTestFormat \u00b6 class TextTestFormat : SerializationFormat Constructors \u00b6 Name Summary <init> TextTestFormat () Properties \u00b6 Name Summary contentType val contentType: String extensions val extensions: Set < String > isBinary val isBinary: Boolean Functions \u00b6 Name Summary parse fun < T : Any > parse ( input : InputStream , type : KClass < T > ): T parseObjects fun < T : Any > parseObjects ( input : InputStream , type : KClass < T > ): List < T > serialize fun serialize ( obj : Any , output : OutputStream ): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/#texttestformat","text":"class TextTestFormat : SerializationFormat","title":"TextTestFormat"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/#constructors","text":"Name Summary <init> TextTestFormat ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/#properties","text":"Name Summary contentType val contentType: String extensions val extensions: Set < String > isBinary val isBinary: Boolean","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/#functions","text":"Name Summary parse fun < T : Any > parse ( input : InputStream , type : KClass < T > ): T parseObjects fun < T : Any > parseObjects ( input : InputStream , type : KClass < T > ): List < T > serialize fun serialize ( obj : Any , output : OutputStream ): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/-init-/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / TextTestFormat / <init> <init> \u00b6 TextTestFormat ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/-init-/#init","text":"TextTestFormat ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/content-type/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / TextTestFormat / contentType contentType \u00b6 val contentType: String","title":"Content type"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/content-type/#contenttype","text":"val contentType: String","title":"contentType"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/extensions/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / TextTestFormat / extensions extensions \u00b6 val extensions: Set < String >","title":"Extensions"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/extensions/#extensions","text":"val extensions: Set < String >","title":"extensions"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/is-binary/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / TextTestFormat / isBinary isBinary \u00b6 val isBinary: Boolean","title":"Is binary"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/is-binary/#isbinary","text":"val isBinary: Boolean","title":"isBinary"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/parse-objects/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / TextTestFormat / parseObjects parseObjects \u00b6 fun < T : Any > parseObjects ( input : InputStream , type : KClass < T > ): List < T >","title":"Parse objects"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/parse-objects/#parseobjects","text":"fun < T : Any > parseObjects ( input : InputStream , type : KClass < T > ): List < T >","title":"parseObjects"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/parse/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / TextTestFormat / parse parse \u00b6 fun < T : Any > parse ( input : InputStream , type : KClass < T > ): T","title":"Parse"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/parse/#parse","text":"fun < T : Any > parse ( input : InputStream , type : KClass < T > ): T","title":"parse"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/serialize/","text":"hexagon_core / com.hexagonkt.serialization / SerializationFormatTest / TextTestFormat / serialize serialize \u00b6 fun serialize ( obj : Any , output : OutputStream ): Unit","title":"Serialize"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-format-test/-text-test-format/serialize/#serialize","text":"fun serialize ( obj : Any , output : OutputStream ): Unit","title":"serialize"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManager SerializationManager \u00b6 object SerializationManager TODO Can be a Serializator immutable class and: object SerializationManager : Serializator(mimeTypesResource, formats) Properties \u00b6 Name Summary defaultFormat var defaultFormat : SerializationFormat formats List of formats. NOTE should be defined AFTER mapper definition to avoid runtime issues. var formats : LinkedHashSet < SerializationFormat > Functions \u00b6 Name Summary contentTypeOf fun contentTypeOf ( extension : String ): String ? fun contentTypeOf ( url : URL ): String ? fun contentTypeOf ( file : File ): String ? fun contentTypeOf ( resource : Resource ): String ? defaultFormat fun defaultFormat ( defaultFormat : SerializationFormat ): Unit formatOf fun formatOf ( contentType : String ): SerializationFormat fun formatOf ( contentType : String , defaultFormat : SerializationFormat ): SerializationFormat fun formatOf ( url : URL ): SerializationFormat fun formatOf ( file : File ): SerializationFormat fun formatOf ( resource : Resource ): SerializationFormat formats fun formats ( vararg formats : SerializationFormat ): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager/#serializationmanager","text":"object SerializationManager TODO Can be a Serializator immutable class and: object SerializationManager : Serializator(mimeTypesResource, formats)","title":"SerializationManager"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager/#properties","text":"Name Summary defaultFormat var defaultFormat : SerializationFormat formats List of formats. NOTE should be defined AFTER mapper definition to avoid runtime issues. var formats : LinkedHashSet < SerializationFormat >","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager/#functions","text":"Name Summary contentTypeOf fun contentTypeOf ( extension : String ): String ? fun contentTypeOf ( url : URL ): String ? fun contentTypeOf ( file : File ): String ? fun contentTypeOf ( resource : Resource ): String ? defaultFormat fun defaultFormat ( defaultFormat : SerializationFormat ): Unit formatOf fun formatOf ( contentType : String ): SerializationFormat fun formatOf ( contentType : String , defaultFormat : SerializationFormat ): SerializationFormat fun formatOf ( url : URL ): SerializationFormat fun formatOf ( file : File ): SerializationFormat fun formatOf ( resource : Resource ): SerializationFormat formats fun formats ( vararg formats : SerializationFormat ): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager/content-type-of/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManager / contentTypeOf contentTypeOf \u00b6 fun contentTypeOf ( extension : String ): String ? fun contentTypeOf ( url : URL ): String ? fun contentTypeOf ( file : File ): String ? fun contentTypeOf ( resource : Resource ): String ?","title":"Content type of"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager/content-type-of/#contenttypeof","text":"fun contentTypeOf ( extension : String ): String ? fun contentTypeOf ( url : URL ): String ? fun contentTypeOf ( file : File ): String ? fun contentTypeOf ( resource : Resource ): String ?","title":"contentTypeOf"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager/default-format/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManager / defaultFormat defaultFormat \u00b6 var defaultFormat : SerializationFormat fun defaultFormat ( defaultFormat : SerializationFormat ): Unit","title":"Default format"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager/default-format/#defaultformat","text":"var defaultFormat : SerializationFormat fun defaultFormat ( defaultFormat : SerializationFormat ): Unit","title":"defaultFormat"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager/format-of/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManager / formatOf formatOf \u00b6 fun formatOf ( contentType : String ): SerializationFormat fun formatOf ( contentType : String , defaultFormat : SerializationFormat ): SerializationFormat fun formatOf ( url : URL ): SerializationFormat fun formatOf ( file : File ): SerializationFormat fun formatOf ( resource : Resource ): SerializationFormat","title":"Format of"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager/format-of/#formatof","text":"fun formatOf ( contentType : String ): SerializationFormat fun formatOf ( contentType : String , defaultFormat : SerializationFormat ): SerializationFormat fun formatOf ( url : URL ): SerializationFormat fun formatOf ( file : File ): SerializationFormat fun formatOf ( resource : Resource ): SerializationFormat","title":"formatOf"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager/formats/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManager / formats formats \u00b6 var formats : LinkedHashSet < SerializationFormat > List of formats. NOTE should be defined AFTER mapper definition to avoid runtime issues. fun formats ( vararg formats : SerializationFormat ): Unit","title":"Formats"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager/formats/#formats","text":"var formats : LinkedHashSet < SerializationFormat > List of formats. NOTE should be defined AFTER mapper definition to avoid runtime issues. fun formats ( vararg formats : SerializationFormat ): Unit","title":"formats"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManagerTest SerializationManagerTest \u00b6 class SerializationManagerTest Constructors \u00b6 Name Summary <init> SerializationManagerTest () Functions \u00b6 Name Summary MIME types return correct content type for extensions fun MIME types return correct content type for extensions () : Unit MIME types return correct content type for files fun MIME types return correct content type for files () : Unit MIME types return correct content type for resources fun MIME types return correct content type for resources () : Unit MIME types return correct content type for URLs fun MIME types return correct content type for URLs () : Unit Not found Serialization format returns the default fun Not found Serialization format returns the default (): Unit Not found Serialization format throws an exception fun Not found Serialization format throws an exception (): Unit resetSerializationFormats fun resetSerializationFormats (): Unit Searching a format not loaded raises an exception fun Searching a format not loaded raises an exception (): Unit Searching serialization format for content types, URLs, files and resources works fun Searching serialization format for content types , URLs , files and resources works () : Unit User can add and remove serialization formats fun User can add and remove serialization formats (): Unit User can change default format fun User can change default format (): Unit User can not set a default format not loaded fun User can not set a default format not loaded (): Unit User can not set an empty list of formats fun User can not set an empty list of formats (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/#serializationmanagertest","text":"class SerializationManagerTest","title":"SerializationManagerTest"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/#constructors","text":"Name Summary <init> SerializationManagerTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/#functions","text":"Name Summary MIME types return correct content type for extensions fun MIME types return correct content type for extensions () : Unit MIME types return correct content type for files fun MIME types return correct content type for files () : Unit MIME types return correct content type for resources fun MIME types return correct content type for resources () : Unit MIME types return correct content type for URLs fun MIME types return correct content type for URLs () : Unit Not found Serialization format returns the default fun Not found Serialization format returns the default (): Unit Not found Serialization format throws an exception fun Not found Serialization format throws an exception (): Unit resetSerializationFormats fun resetSerializationFormats (): Unit Searching a format not loaded raises an exception fun Searching a format not loaded raises an exception (): Unit Searching serialization format for content types, URLs, files and resources works fun Searching serialization format for content types , URLs , files and resources works () : Unit User can add and remove serialization formats fun User can add and remove serialization formats (): Unit User can change default format fun User can change default format (): Unit User can not set a default format not loaded fun User can not set a default format not loaded (): Unit User can not set an empty list of formats fun User can not set an empty list of formats (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-init-/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManagerTest / <init> <init> \u00b6 SerializationManagerTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-init-/#init","text":"SerializationManagerTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-m-i-m-e types return correct content type for -u-r-ls/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManagerTest / MIME types return correct content type for URLs MIME types return correct content type for URLs \u00b6 fun MIME types return correct content type for URLs () : Unit","title":" m i m e types return correct content type for  u r ls"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-m-i-m-e types return correct content type for -u-r-ls/#mime-types-return-correct-content-type-for-urls","text":"fun MIME types return correct content type for URLs () : Unit","title":"MIME types return correct content type for URLs"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-m-i-m-e types return correct content type for extensions/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManagerTest / MIME types return correct content type for extensions MIME types return correct content type for extensions \u00b6 fun MIME types return correct content type for extensions () : Unit","title":" m i m e types return correct content type for extensions"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-m-i-m-e types return correct content type for extensions/#mime-types-return-correct-content-type-for-extensions","text":"fun MIME types return correct content type for extensions () : Unit","title":"MIME types return correct content type for extensions"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-m-i-m-e types return correct content type for files/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManagerTest / MIME types return correct content type for files MIME types return correct content type for files \u00b6 fun MIME types return correct content type for files () : Unit","title":" m i m e types return correct content type for files"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-m-i-m-e types return correct content type for files/#mime-types-return-correct-content-type-for-files","text":"fun MIME types return correct content type for files () : Unit","title":"MIME types return correct content type for files"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-m-i-m-e types return correct content type for resources/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManagerTest / MIME types return correct content type for resources MIME types return correct content type for resources \u00b6 fun MIME types return correct content type for resources () : Unit","title":" m i m e types return correct content type for resources"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-m-i-m-e types return correct content type for resources/#mime-types-return-correct-content-type-for-resources","text":"fun MIME types return correct content type for resources () : Unit","title":"MIME types return correct content type for resources"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-not found -serialization format returns the default/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManagerTest / Not found Serialization format returns the default Not found Serialization format returns the default \u00b6 fun Not found Serialization format returns the default (): Unit","title":" not found  serialization format returns the default"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-not found -serialization format returns the default/#not-found-serialization-format-returns-the-default","text":"fun Not found Serialization format returns the default (): Unit","title":"Not found Serialization format returns the default"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-not found -serialization format throws an exception/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManagerTest / Not found Serialization format throws an exception Not found Serialization format throws an exception \u00b6 fun Not found Serialization format throws an exception (): Unit","title":" not found  serialization format throws an exception"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-not found -serialization format throws an exception/#not-found-serialization-format-throws-an-exception","text":"fun Not found Serialization format throws an exception (): Unit","title":"Not found Serialization format throws an exception"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-searching a format not loaded raises an exception/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManagerTest / Searching a format not loaded raises an exception Searching a format not loaded raises an exception \u00b6 fun Searching a format not loaded raises an exception (): Unit","title":" searching a format not loaded raises an exception"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-searching a format not loaded raises an exception/#searching-a-format-not-loaded-raises-an-exception","text":"fun Searching a format not loaded raises an exception (): Unit","title":"Searching a format not loaded raises an exception"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-searching serialization format for content types, -u-r-ls, files and resources works/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManagerTest / Searching serialization format for content types, URLs, files and resources works Searching serialization format for content types, URLs, files and resources works \u00b6 fun Searching serialization format for content types , URLs , files and resources works () : Unit","title":" searching serialization format for content types,  u r ls, files and resources works"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-searching serialization format for content types, -u-r-ls, files and resources works/#searching-serialization-format-for-content-types-urls-files-and-resources-works","text":"fun Searching serialization format for content types , URLs , files and resources works () : Unit","title":"Searching serialization format for content types, URLs, files and resources works"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-user can add and remove serialization formats/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManagerTest / User can add and remove serialization formats User can add and remove serialization formats \u00b6 fun User can add and remove serialization formats (): Unit","title":" user can add and remove serialization formats"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-user can add and remove serialization formats/#user-can-add-and-remove-serialization-formats","text":"fun User can add and remove serialization formats (): Unit","title":"User can add and remove serialization formats"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-user can change default format/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManagerTest / User can change default format User can change default format \u00b6 fun User can change default format (): Unit","title":" user can change default format"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-user can change default format/#user-can-change-default-format","text":"fun User can change default format (): Unit","title":"User can change default format"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-user can not set a default format not loaded/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManagerTest / User can not set a default format not loaded User can not set a default format not loaded \u00b6 fun User can not set a default format not loaded (): Unit","title":" user can not set a default format not loaded"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-user can not set a default format not loaded/#user-can-not-set-a-default-format-not-loaded","text":"fun User can not set a default format not loaded (): Unit","title":"User can not set a default format not loaded"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-user can not set an empty list of formats/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManagerTest / User can not set an empty list of formats User can not set an empty list of formats \u00b6 fun User can not set an empty list of formats (): Unit","title":" user can not set an empty list of formats"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/-user can not set an empty list of formats/#user-can-not-set-an-empty-list-of-formats","text":"fun User can not set an empty list of formats (): Unit","title":"User can not set an empty list of formats"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/reset-serialization-formats/","text":"hexagon_core / com.hexagonkt.serialization / SerializationManagerTest / resetSerializationFormats resetSerializationFormats \u00b6 fun resetSerializationFormats (): Unit","title":"Reset serialization formats"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-manager-test/reset-serialization-formats/#resetserializationformats","text":"fun resetSerializationFormats (): Unit","title":"resetSerializationFormats"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-package-test/","text":"hexagon_core / com.hexagonkt.serialization / SerializationPackageTest SerializationPackageTest \u00b6 class SerializationPackageTest Constructors \u00b6 Name Summary <init> SerializationPackageTest () Functions \u00b6 Name Summary Inline convert list work correctly fun Inline convert list work correctly (): Unit Inline convert object work correctly fun Inline convert object work correctly (): Unit Parse stream objects works properly fun Parse stream objects works properly (): Unit Parse streams works properly fun Parse streams works properly (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-package-test/#serializationpackagetest","text":"class SerializationPackageTest","title":"SerializationPackageTest"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-package-test/#constructors","text":"Name Summary <init> SerializationPackageTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-package-test/#functions","text":"Name Summary Inline convert list work correctly fun Inline convert list work correctly (): Unit Inline convert object work correctly fun Inline convert object work correctly (): Unit Parse stream objects works properly fun Parse stream objects works properly (): Unit Parse streams works properly fun Parse streams works properly (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-package-test/-init-/","text":"hexagon_core / com.hexagonkt.serialization / SerializationPackageTest / <init> <init> \u00b6 SerializationPackageTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-package-test/-init-/#init","text":"SerializationPackageTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-package-test/-inline convert list work correctly/","text":"hexagon_core / com.hexagonkt.serialization / SerializationPackageTest / Inline convert list work correctly Inline convert list work correctly \u00b6 fun Inline convert list work correctly (): Unit","title":" inline convert list work correctly"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-package-test/-inline convert list work correctly/#inline-convert-list-work-correctly","text":"fun Inline convert list work correctly (): Unit","title":"Inline convert list work correctly"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-package-test/-inline convert object work correctly/","text":"hexagon_core / com.hexagonkt.serialization / SerializationPackageTest / Inline convert object work correctly Inline convert object work correctly \u00b6 fun Inline convert object work correctly (): Unit","title":" inline convert object work correctly"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-package-test/-inline convert object work correctly/#inline-convert-object-work-correctly","text":"fun Inline convert object work correctly (): Unit","title":"Inline convert object work correctly"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-package-test/-parse stream objects works properly/","text":"hexagon_core / com.hexagonkt.serialization / SerializationPackageTest / Parse stream objects works properly Parse stream objects works properly \u00b6 fun Parse stream objects works properly (): Unit","title":" parse stream objects works properly"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-package-test/-parse stream objects works properly/#parse-stream-objects-works-properly","text":"fun Parse stream objects works properly (): Unit","title":"Parse stream objects works properly"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-package-test/-parse streams works properly/","text":"hexagon_core / com.hexagonkt.serialization / SerializationPackageTest / Parse streams works properly Parse streams works properly \u00b6 fun Parse streams works properly (): Unit","title":" parse streams works properly"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-package-test/-parse streams works properly/#parse-streams-works-properly","text":"fun Parse streams works properly (): Unit","title":"Parse streams works properly"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-test/","text":"hexagon_core / com.hexagonkt.serialization / SerializationTest SerializationTest \u00b6 abstract class SerializationTest < out T : Any > Constructors \u00b6 Name Summary <init> SerializationTest ( type : KClass < T > ) Properties \u00b6 Name Summary testObjects abstract val testObjects: List < T > Functions \u00b6 Name Summary Object is mapped and parsed back without error fun Object is mapped and parsed back without error (): Unit Inheritors \u00b6 Name Summary CompanySerializationTest class CompanySerializationTest : SerializationTest < Company >","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-test/#serializationtest","text":"abstract class SerializationTest < out T : Any >","title":"SerializationTest"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-test/#constructors","text":"Name Summary <init> SerializationTest ( type : KClass < T > )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-test/#properties","text":"Name Summary testObjects abstract val testObjects: List < T >","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-test/#functions","text":"Name Summary Object is mapped and parsed back without error fun Object is mapped and parsed back without error (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-test/#inheritors","text":"Name Summary CompanySerializationTest class CompanySerializationTest : SerializationTest < Company >","title":"Inheritors"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-test/-init-/","text":"hexagon_core / com.hexagonkt.serialization / SerializationTest / <init> <init> \u00b6 SerializationTest ( type : KClass < T > )","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-test/-init-/#init","text":"SerializationTest ( type : KClass < T > )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-test/-object is mapped and parsed back without error/","text":"hexagon_core / com.hexagonkt.serialization / SerializationTest / Object is mapped and parsed back without error Object is mapped and parsed back without error \u00b6 fun Object is mapped and parsed back without error (): Unit","title":" object is mapped and parsed back without error"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-test/-object is mapped and parsed back without error/#object-is-mapped-and-parsed-back-without-error","text":"fun Object is mapped and parsed back without error (): Unit","title":"Object is mapped and parsed back without error"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-test/test-objects/","text":"hexagon_core / com.hexagonkt.serialization / SerializationTest / testObjects testObjects \u00b6 abstract val testObjects: List < T >","title":"Test objects"},{"location":"hexagon_core/com.hexagonkt.serialization/-serialization-test/test-objects/#testobjects","text":"abstract val testObjects: List < T >","title":"testObjects"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/","text":"hexagon_core / com.hexagonkt.serialization / YamlTest YamlTest \u00b6 class YamlTest Types \u00b6 Name Summary Player data class Player Constructors \u00b6 Name Summary <init> YamlTest () Functions \u00b6 Name Summary Invalid format exceptions field is 'null' fun Invalid format exceptions field is 'null' (): Unit Parse an invalid class throws exception fun Parse an invalid class throws exception (): Unit Parse exceptions contains failed field fun Parse exceptions contains failed field (): Unit Parse invalid YAML range fun Parse invalid YAML range (): Unit Parse invalid YAML range end fun Parse invalid YAML range end () : Unit Parse invalid YAML range start fun Parse invalid YAML range start (): Unit Parse valid YAML fun Parse valid YAML (): Unit Serialize by content type fun Serialize by content type (): Unit YAML is serialized properly fun YAML is serialized properly (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/#yamltest","text":"class YamlTest","title":"YamlTest"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/#types","text":"Name Summary Player data class Player","title":"Types"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/#constructors","text":"Name Summary <init> YamlTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/#functions","text":"Name Summary Invalid format exceptions field is 'null' fun Invalid format exceptions field is 'null' (): Unit Parse an invalid class throws exception fun Parse an invalid class throws exception (): Unit Parse exceptions contains failed field fun Parse exceptions contains failed field (): Unit Parse invalid YAML range fun Parse invalid YAML range (): Unit Parse invalid YAML range end fun Parse invalid YAML range end () : Unit Parse invalid YAML range start fun Parse invalid YAML range start (): Unit Parse valid YAML fun Parse valid YAML (): Unit Serialize by content type fun Serialize by content type (): Unit YAML is serialized properly fun YAML is serialized properly (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-init-/","text":"hexagon_core / com.hexagonkt.serialization / YamlTest / <init> <init> \u00b6 YamlTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-init-/#init","text":"YamlTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-invalid format exceptions field is 'null'/","text":"hexagon_core / com.hexagonkt.serialization / YamlTest / Invalid format exceptions field is 'null' Invalid format exceptions field is 'null' \u00b6 fun Invalid format exceptions field is 'null' (): Unit","title":" invalid format exceptions field is 'null'"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-invalid format exceptions field is 'null'/#invalid-format-exceptions-field-is-null","text":"fun Invalid format exceptions field is 'null' (): Unit","title":"Invalid format exceptions field is 'null'"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-parse an invalid class throws exception/","text":"hexagon_core / com.hexagonkt.serialization / YamlTest / Parse an invalid class throws exception Parse an invalid class throws exception \u00b6 fun Parse an invalid class throws exception (): Unit","title":" parse an invalid class throws exception"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-parse an invalid class throws exception/#parse-an-invalid-class-throws-exception","text":"fun Parse an invalid class throws exception (): Unit","title":"Parse an invalid class throws exception"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-parse exceptions contains failed field/","text":"hexagon_core / com.hexagonkt.serialization / YamlTest / Parse exceptions contains failed field Parse exceptions contains failed field \u00b6 fun Parse exceptions contains failed field (): Unit","title":" parse exceptions contains failed field"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-parse exceptions contains failed field/#parse-exceptions-contains-failed-field","text":"fun Parse exceptions contains failed field (): Unit","title":"Parse exceptions contains failed field"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-parse invalid -y-a-m-l range end/","text":"hexagon_core / com.hexagonkt.serialization / YamlTest / Parse invalid YAML range end Parse invalid YAML range end \u00b6 fun Parse invalid YAML range end () : Unit","title":" parse invalid  y a m l range end"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-parse invalid -y-a-m-l range end/#parse-invalid-yaml-range-end","text":"fun Parse invalid YAML range end () : Unit","title":"Parse invalid YAML range end"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-parse invalid -y-a-m-l range start/","text":"hexagon_core / com.hexagonkt.serialization / YamlTest / Parse invalid YAML range start Parse invalid YAML range start \u00b6 fun Parse invalid YAML range start (): Unit","title":" parse invalid  y a m l range start"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-parse invalid -y-a-m-l range start/#parse-invalid-yaml-range-start","text":"fun Parse invalid YAML range start (): Unit","title":"Parse invalid YAML range start"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-parse invalid -y-a-m-l range/","text":"hexagon_core / com.hexagonkt.serialization / YamlTest / Parse invalid YAML range Parse invalid YAML range \u00b6 fun Parse invalid YAML range (): Unit","title":" parse invalid  y a m l range"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-parse invalid -y-a-m-l range/#parse-invalid-yaml-range","text":"fun Parse invalid YAML range (): Unit","title":"Parse invalid YAML range"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-parse valid -y-a-m-l/","text":"hexagon_core / com.hexagonkt.serialization / YamlTest / Parse valid YAML Parse valid YAML \u00b6 fun Parse valid YAML (): Unit","title":" parse valid  y a m l"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-parse valid -y-a-m-l/#parse-valid-yaml","text":"fun Parse valid YAML (): Unit","title":"Parse valid YAML"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-serialize by content type/","text":"hexagon_core / com.hexagonkt.serialization / YamlTest / Serialize by content type Serialize by content type \u00b6 fun Serialize by content type (): Unit","title":" serialize by content type"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-serialize by content type/#serialize-by-content-type","text":"fun Serialize by content type (): Unit","title":"Serialize by content type"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-y-a-m-l is serialized properly/","text":"hexagon_core / com.hexagonkt.serialization / YamlTest / YAML is serialized properly YAML is serialized properly \u00b6 fun YAML is serialized properly (): Unit","title":" y a m l is serialized properly"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-y-a-m-l is serialized properly/#yaml-is-serialized-properly","text":"fun YAML is serialized properly (): Unit","title":"YAML is serialized properly"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-player/","text":"hexagon_core / com.hexagonkt.serialization / YamlTest / Player Player \u00b6 data class Player Constructors \u00b6 Name Summary <init> Player ( name : String , number : Int , category : ClosedRange < Int > ) Properties \u00b6 Name Summary category val category: ClosedRange < Int > name val name: String number val number: Int","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-player/#player","text":"data class Player","title":"Player"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-player/#constructors","text":"Name Summary <init> Player ( name : String , number : Int , category : ClosedRange < Int > )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-player/#properties","text":"Name Summary category val category: ClosedRange < Int > name val name: String number val number: Int","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-player/-init-/","text":"hexagon_core / com.hexagonkt.serialization / YamlTest / Player / <init> <init> \u00b6 Player ( name : String , number : Int , category : ClosedRange < Int > )","title":" init "},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-player/-init-/#init","text":"Player ( name : String , number : Int , category : ClosedRange < Int > )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-player/category/","text":"hexagon_core / com.hexagonkt.serialization / YamlTest / Player / category category \u00b6 val category: ClosedRange < Int >","title":"Category"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-player/category/#category","text":"val category: ClosedRange < Int >","title":"category"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-player/name/","text":"hexagon_core / com.hexagonkt.serialization / YamlTest / Player / name name \u00b6 val name: String","title":"Name"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-player/name/#name","text":"val name: String","title":"name"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-player/number/","text":"hexagon_core / com.hexagonkt.serialization / YamlTest / Player / number number \u00b6 val number: Int","title":"Number"},{"location":"hexagon_core/com.hexagonkt.serialization/-yaml-test/-player/number/#number","text":"val number: Int","title":"number"},{"location":"hexagon_core/com.hexagonkt.serialization/java.io.-file/","text":"hexagon_core / com.hexagonkt.serialization / java.io.File Extensions for java.io.File \u00b6 Name Summary parse fun < T : Any > File .parse ( type : KClass < T > ): T fun < T : Any > File .parse (): T parseObjects fun < T : Any > File .parseObjects ( type : KClass < T > ): List < T > fun < T : Any > File .parseObjects (): List < T >","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/java.io.-file/#extensions-for-javaiofile","text":"Name Summary parse fun < T : Any > File .parse ( type : KClass < T > ): T fun < T : Any > File .parse (): T parseObjects fun < T : Any > File .parseObjects ( type : KClass < T > ): List < T > fun < T : Any > File .parseObjects (): List < T >","title":"Extensions for java.io.File"},{"location":"hexagon_core/com.hexagonkt.serialization/java.io.-file/parse-objects/","text":"hexagon_core / com.hexagonkt.serialization / java.io.File / parseObjects parseObjects \u00b6 fun < T : Any > File .parseObjects ( type : KClass < T > ): List < T > fun < reified T : Any > File .parseObjects (): List < T >","title":"Parse objects"},{"location":"hexagon_core/com.hexagonkt.serialization/java.io.-file/parse-objects/#parseobjects","text":"fun < T : Any > File .parseObjects ( type : KClass < T > ): List < T > fun < reified T : Any > File .parseObjects (): List < T >","title":"parseObjects"},{"location":"hexagon_core/com.hexagonkt.serialization/java.io.-file/parse/","text":"hexagon_core / com.hexagonkt.serialization / java.io.File / parse parse \u00b6 fun < T : Any > File .parse ( type : KClass < T > ): T fun < reified T : Any > File .parse (): T","title":"Parse"},{"location":"hexagon_core/com.hexagonkt.serialization/java.io.-file/parse/#parse","text":"fun < T : Any > File .parse ( type : KClass < T > ): T fun < reified T : Any > File .parse (): T","title":"parse"},{"location":"hexagon_core/com.hexagonkt.serialization/java.io.-input-stream/","text":"hexagon_core / com.hexagonkt.serialization / java.io.InputStream Extensions for java.io.InputStream \u00b6 Name Summary parse fun < T : Any > InputStream .parse ( type : KClass < T > , format : SerializationFormat = defaultFormat ): T fun < T : Any > InputStream .parse ( format : SerializationFormat = defaultFormat ): T parseObjects fun < T : Any > InputStream .parseObjects ( type : KClass < T > , format : SerializationFormat = defaultFormat ): List < T > fun < T : Any > InputStream .parseObjects ( format : SerializationFormat = defaultFormat ): List < T >","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/java.io.-input-stream/#extensions-for-javaioinputstream","text":"Name Summary parse fun < T : Any > InputStream .parse ( type : KClass < T > , format : SerializationFormat = defaultFormat ): T fun < T : Any > InputStream .parse ( format : SerializationFormat = defaultFormat ): T parseObjects fun < T : Any > InputStream .parseObjects ( type : KClass < T > , format : SerializationFormat = defaultFormat ): List < T > fun < T : Any > InputStream .parseObjects ( format : SerializationFormat = defaultFormat ): List < T >","title":"Extensions for java.io.InputStream"},{"location":"hexagon_core/com.hexagonkt.serialization/java.io.-input-stream/parse-objects/","text":"hexagon_core / com.hexagonkt.serialization / java.io.InputStream / parseObjects parseObjects \u00b6 fun < T : Any > InputStream .parseObjects ( type : KClass < T > , format : SerializationFormat = defaultFormat ): List < T > fun < reified T : Any > InputStream .parseObjects ( format : SerializationFormat = defaultFormat ): List < T >","title":"Parse objects"},{"location":"hexagon_core/com.hexagonkt.serialization/java.io.-input-stream/parse-objects/#parseobjects","text":"fun < T : Any > InputStream .parseObjects ( type : KClass < T > , format : SerializationFormat = defaultFormat ): List < T > fun < reified T : Any > InputStream .parseObjects ( format : SerializationFormat = defaultFormat ): List < T >","title":"parseObjects"},{"location":"hexagon_core/com.hexagonkt.serialization/java.io.-input-stream/parse/","text":"hexagon_core / com.hexagonkt.serialization / java.io.InputStream / parse parse \u00b6 fun < T : Any > InputStream .parse ( type : KClass < T > , format : SerializationFormat = defaultFormat ): T fun < reified T : Any > InputStream .parse ( format : SerializationFormat = defaultFormat ): T","title":"Parse"},{"location":"hexagon_core/com.hexagonkt.serialization/java.io.-input-stream/parse/#parse","text":"fun < T : Any > InputStream .parse ( type : KClass < T > , format : SerializationFormat = defaultFormat ): T fun < reified T : Any > InputStream .parse ( format : SerializationFormat = defaultFormat ): T","title":"parse"},{"location":"hexagon_core/com.hexagonkt.serialization/java.net.-u-r-l/","text":"hexagon_core / com.hexagonkt.serialization / java.net.URL Extensions for java.net.URL \u00b6 Name Summary parse fun < T : Any > URL .parse ( type : KClass < T > ): T fun < T : Any > URL .parse (): T parseObjects fun < T : Any > URL .parseObjects ( type : KClass < T > ): List < T > fun < T : Any > URL .parseObjects (): List < T >","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/java.net.-u-r-l/#extensions-for-javaneturl","text":"Name Summary parse fun < T : Any > URL .parse ( type : KClass < T > ): T fun < T : Any > URL .parse (): T parseObjects fun < T : Any > URL .parseObjects ( type : KClass < T > ): List < T > fun < T : Any > URL .parseObjects (): List < T >","title":"Extensions for java.net.URL"},{"location":"hexagon_core/com.hexagonkt.serialization/java.net.-u-r-l/parse-objects/","text":"hexagon_core / com.hexagonkt.serialization / java.net.URL / parseObjects parseObjects \u00b6 fun < T : Any > URL .parseObjects ( type : KClass < T > ): List < T > fun < reified T : Any > URL .parseObjects (): List < T >","title":"Parse objects"},{"location":"hexagon_core/com.hexagonkt.serialization/java.net.-u-r-l/parse-objects/#parseobjects","text":"fun < T : Any > URL .parseObjects ( type : KClass < T > ): List < T > fun < reified T : Any > URL .parseObjects (): List < T >","title":"parseObjects"},{"location":"hexagon_core/com.hexagonkt.serialization/java.net.-u-r-l/parse/","text":"hexagon_core / com.hexagonkt.serialization / java.net.URL / parse parse \u00b6 fun < T : Any > URL .parse ( type : KClass < T > ): T fun < reified T : Any > URL .parse (): T","title":"Parse"},{"location":"hexagon_core/com.hexagonkt.serialization/java.net.-u-r-l/parse/#parse","text":"fun < T : Any > URL .parse ( type : KClass < T > ): T fun < reified T : Any > URL .parse (): T","title":"parse"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.-any/","text":"hexagon_core / com.hexagonkt.serialization / kotlin.Any Extensions for kotlin.Any \u00b6 Name Summary convertToMap fun Any .convertToMap (): Map <* , *> serialize fun Any .serialize ( format : SerializationFormat = defaultFormat ): String fun Any .serialize ( contentType : String ): String","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.-any/#extensions-for-kotlinany","text":"Name Summary convertToMap fun Any .convertToMap (): Map <* , *> serialize fun Any .serialize ( format : SerializationFormat = defaultFormat ): String fun Any .serialize ( contentType : String ): String","title":"Extensions for kotlin.Any"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.-any/convert-to-map/","text":"hexagon_core / com.hexagonkt.serialization / kotlin.Any / convertToMap convertToMap \u00b6 fun Any .convertToMap (): Map <* , *>","title":"Convert to map"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.-any/convert-to-map/#converttomap","text":"fun Any .convertToMap (): Map <* , *>","title":"convertToMap"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.-any/serialize/","text":"hexagon_core / com.hexagonkt.serialization / kotlin.Any / serialize serialize \u00b6 fun Any .serialize ( format : SerializationFormat = defaultFormat ): String fun Any .serialize ( contentType : String ): String","title":"Serialize"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.-any/serialize/#serialize","text":"fun Any .serialize ( format : SerializationFormat = defaultFormat ): String fun Any .serialize ( contentType : String ): String","title":"serialize"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.-string/","text":"hexagon_core / com.hexagonkt.serialization / kotlin.String Extensions for kotlin.String \u00b6 Name Summary parse fun < T : Any > any_iterable < T > . parse ( type : KClass < T > , format : SerializationFormat = defaultFormat ): T parseObjects fun < T : Any > any_iterable < T > . parseObjects ( type : KClass < T > , format : SerializationFormat = defaultFormat ): List < T >","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.-string/#extensions-for-kotlinstring","text":"Name Summary parse fun < T : Any > any_iterable < T > . parse ( type : KClass < T > , format : SerializationFormat = defaultFormat ): T parseObjects fun < T : Any > any_iterable < T > . parseObjects ( type : KClass < T > , format : SerializationFormat = defaultFormat ): List < T >","title":"Extensions for kotlin.String"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.-string/parse-objects/","text":"hexagon_core / com.hexagonkt.serialization / kotlin.String / parseObjects parseObjects \u00b6 fun < T : Any > String .parseObjects ( type : KClass < T > , format : SerializationFormat = defaultFormat ): List < T > fun < reified T : Any > String .parseObjects ( format : SerializationFormat = defaultFormat ): List < T >","title":"Parse objects"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.-string/parse-objects/#parseobjects","text":"fun < T : Any > String .parseObjects ( type : KClass < T > , format : SerializationFormat = defaultFormat ): List < T > fun < reified T : Any > String .parseObjects ( format : SerializationFormat = defaultFormat ): List < T >","title":"parseObjects"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.-string/parse/","text":"hexagon_core / com.hexagonkt.serialization / kotlin.String / parse parse \u00b6 fun < T : Any > String .parse ( type : KClass < T > , format : SerializationFormat = defaultFormat ): T fun < reified T : Any > String .parse ( format : SerializationFormat = defaultFormat ): T","title":"Parse"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.-string/parse/#parse","text":"fun < T : Any > String .parse ( type : KClass < T > , format : SerializationFormat = defaultFormat ): T fun < reified T : Any > String .parse ( format : SerializationFormat = defaultFormat ): T","title":"parse"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.collections.-list/","text":"hexagon_core / com.hexagonkt.serialization / kotlin.collections.List Extensions for kotlin.collections.List \u00b6 Name Summary convertToObjects fun < T : Any > List < Map <* , *>> . convertToObjects ( type : KClass < T > ): List < T > fun < T : Any > List < Map <* , *>> . convertToObjects (): List < T >","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.collections.-list/#extensions-for-kotlincollectionslist","text":"Name Summary convertToObjects fun < T : Any > List < Map <* , *>> . convertToObjects ( type : KClass < T > ): List < T > fun < T : Any > List < Map <* , *>> . convertToObjects (): List < T >","title":"Extensions for kotlin.collections.List"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.collections.-list/convert-to-objects/","text":"hexagon_core / com.hexagonkt.serialization / kotlin.collections.List / convertToObjects convertToObjects \u00b6 fun < T : Any > List < Map <* , *>> . convertToObjects ( type : KClass < T > ): List < T > fun < reified T : Any > List < Map <* , *>> . convertToObjects (): List < T >","title":"Convert to objects"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.collections.-list/convert-to-objects/#converttoobjects","text":"fun < T : Any > List < Map <* , *>> . convertToObjects ( type : KClass < T > ): List < T > fun < reified T : Any > List < Map <* , *>> . convertToObjects (): List < T >","title":"convertToObjects"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.collections.-map/","text":"hexagon_core / com.hexagonkt.serialization / kotlin.collections.Map Extensions for kotlin.collections.Map \u00b6 Name Summary convertToObject fun < T : Any > Map <* , *> . convertToObject ( type : KClass < T > ): T fun < T : Any > Map <* , *> . convertToObject (): T","title":"Home"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.collections.-map/#extensions-for-kotlincollectionsmap","text":"Name Summary convertToObject fun < T : Any > Map <* , *> . convertToObject ( type : KClass < T > ): T fun < T : Any > Map <* , *> . convertToObject (): T","title":"Extensions for kotlin.collections.Map"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.collections.-map/convert-to-object/","text":"hexagon_core / com.hexagonkt.serialization / kotlin.collections.Map / convertToObject convertToObject \u00b6 fun < T : Any > Map <* , *> . convertToObject ( type : KClass < T > ): T fun < reified T : Any > Map <* , *> . convertToObject (): T","title":"Convert to object"},{"location":"hexagon_core/com.hexagonkt.serialization/kotlin.collections.-map/convert-to-object/#converttoobject","text":"fun < T : Any > Map <* , *> . convertToObject ( type : KClass < T > ): T fun < reified T : Any > Map <* , *> . convertToObject (): T","title":"convertToObject"},{"location":"hexagon_core/com.hexagonkt.settings/","text":"hexagon_core / com.hexagonkt.settings Package com.hexagonkt.settings \u00b6 Load settings from different data sources and formats. Types \u00b6 Name Summary CommandLineArgumentsSource class CommandLineArgumentsSource : SettingsSource EnvironmentVariablesSource class EnvironmentVariablesSource : SettingsSource FileSource class FileSource : SettingsSource ObjectSource class ObjectSource : SettingsSource ResourceSource class ResourceSource : SettingsSource SettingsManager object SettingsManager SettingsManagerTest Check gradle . build to see the related files creation. class SettingsManagerTest SettingsSource interface SettingsSource SettingsTest class SettingsTest SystemPropertiesSource class SystemPropertiesSource : SettingsSource","title":"Home"},{"location":"hexagon_core/com.hexagonkt.settings/#package-comhexagonktsettings","text":"Load settings from different data sources and formats.","title":"Package com.hexagonkt.settings"},{"location":"hexagon_core/com.hexagonkt.settings/#types","text":"Name Summary CommandLineArgumentsSource class CommandLineArgumentsSource : SettingsSource EnvironmentVariablesSource class EnvironmentVariablesSource : SettingsSource FileSource class FileSource : SettingsSource ObjectSource class ObjectSource : SettingsSource ResourceSource class ResourceSource : SettingsSource SettingsManager object SettingsManager SettingsManagerTest Check gradle . build to see the related files creation. class SettingsManagerTest SettingsSource interface SettingsSource SettingsTest class SettingsTest SystemPropertiesSource class SystemPropertiesSource : SettingsSource","title":"Types"},{"location":"hexagon_core/com.hexagonkt.settings/-command-line-arguments-source/","text":"hexagon_core / com.hexagonkt.settings / CommandLineArgumentsSource CommandLineArgumentsSource \u00b6 class CommandLineArgumentsSource : SettingsSource Constructors \u00b6 Name Summary <init> CommandLineArgumentsSource ( args : Array < out String > ) CommandLineArgumentsSource ( args : List < String > ) Properties \u00b6 Name Summary args val args: List < String > Functions \u00b6 Name Summary load fun load (): Map < String , *> toString fun toString (): String","title":"Home"},{"location":"hexagon_core/com.hexagonkt.settings/-command-line-arguments-source/#commandlineargumentssource","text":"class CommandLineArgumentsSource : SettingsSource","title":"CommandLineArgumentsSource"},{"location":"hexagon_core/com.hexagonkt.settings/-command-line-arguments-source/#constructors","text":"Name Summary <init> CommandLineArgumentsSource ( args : Array < out String > ) CommandLineArgumentsSource ( args : List < String > )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.settings/-command-line-arguments-source/#properties","text":"Name Summary args val args: List < String >","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.settings/-command-line-arguments-source/#functions","text":"Name Summary load fun load (): Map < String , *> toString fun toString (): String","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.settings/-command-line-arguments-source/-init-/","text":"hexagon_core / com.hexagonkt.settings / CommandLineArgumentsSource / <init> <init> \u00b6 CommandLineArgumentsSource ( args : Array < out String > ) CommandLineArgumentsSource ( args : List < String > )","title":" init "},{"location":"hexagon_core/com.hexagonkt.settings/-command-line-arguments-source/-init-/#init","text":"CommandLineArgumentsSource ( args : Array < out String > ) CommandLineArgumentsSource ( args : List < String > )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.settings/-command-line-arguments-source/args/","text":"hexagon_core / com.hexagonkt.settings / CommandLineArgumentsSource / args args \u00b6 val args: List < String >","title":"Args"},{"location":"hexagon_core/com.hexagonkt.settings/-command-line-arguments-source/args/#args","text":"val args: List < String >","title":"args"},{"location":"hexagon_core/com.hexagonkt.settings/-command-line-arguments-source/load/","text":"hexagon_core / com.hexagonkt.settings / CommandLineArgumentsSource / load load \u00b6 fun load (): Map < String , *>","title":"Load"},{"location":"hexagon_core/com.hexagonkt.settings/-command-line-arguments-source/load/#load","text":"fun load (): Map < String , *>","title":"load"},{"location":"hexagon_core/com.hexagonkt.settings/-command-line-arguments-source/to-string/","text":"hexagon_core / com.hexagonkt.settings / CommandLineArgumentsSource / toString toString \u00b6 fun toString (): String","title":"To string"},{"location":"hexagon_core/com.hexagonkt.settings/-command-line-arguments-source/to-string/#tostring","text":"fun toString (): String","title":"toString"},{"location":"hexagon_core/com.hexagonkt.settings/-environment-variables-source/","text":"hexagon_core / com.hexagonkt.settings / EnvironmentVariablesSource EnvironmentVariablesSource \u00b6 class EnvironmentVariablesSource : SettingsSource Constructors \u00b6 Name Summary <init> EnvironmentVariablesSource ( prefix : String ) Functions \u00b6 Name Summary load fun load (): Map < String , *> toString fun toString (): String","title":"Home"},{"location":"hexagon_core/com.hexagonkt.settings/-environment-variables-source/#environmentvariablessource","text":"class EnvironmentVariablesSource : SettingsSource","title":"EnvironmentVariablesSource"},{"location":"hexagon_core/com.hexagonkt.settings/-environment-variables-source/#constructors","text":"Name Summary <init> EnvironmentVariablesSource ( prefix : String )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.settings/-environment-variables-source/#functions","text":"Name Summary load fun load (): Map < String , *> toString fun toString (): String","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.settings/-environment-variables-source/-init-/","text":"hexagon_core / com.hexagonkt.settings / EnvironmentVariablesSource / <init> <init> \u00b6 EnvironmentVariablesSource ( prefix : String )","title":" init "},{"location":"hexagon_core/com.hexagonkt.settings/-environment-variables-source/-init-/#init","text":"EnvironmentVariablesSource ( prefix : String )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.settings/-environment-variables-source/load/","text":"hexagon_core / com.hexagonkt.settings / EnvironmentVariablesSource / load load \u00b6 fun load (): Map < String , *>","title":"Load"},{"location":"hexagon_core/com.hexagonkt.settings/-environment-variables-source/load/#load","text":"fun load (): Map < String , *>","title":"load"},{"location":"hexagon_core/com.hexagonkt.settings/-environment-variables-source/to-string/","text":"hexagon_core / com.hexagonkt.settings / EnvironmentVariablesSource / toString toString \u00b6 fun toString (): String","title":"To string"},{"location":"hexagon_core/com.hexagonkt.settings/-environment-variables-source/to-string/#tostring","text":"fun toString (): String","title":"toString"},{"location":"hexagon_core/com.hexagonkt.settings/-file-source/","text":"hexagon_core / com.hexagonkt.settings / FileSource FileSource \u00b6 class FileSource : SettingsSource Constructors \u00b6 Name Summary <init> FileSource ( file : String ) FileSource ( file : File ) Properties \u00b6 Name Summary file val file: File Functions \u00b6 Name Summary load fun load (): Map < String , *> toString fun toString (): String","title":"Home"},{"location":"hexagon_core/com.hexagonkt.settings/-file-source/#filesource","text":"class FileSource : SettingsSource","title":"FileSource"},{"location":"hexagon_core/com.hexagonkt.settings/-file-source/#constructors","text":"Name Summary <init> FileSource ( file : String ) FileSource ( file : File )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.settings/-file-source/#properties","text":"Name Summary file val file: File","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.settings/-file-source/#functions","text":"Name Summary load fun load (): Map < String , *> toString fun toString (): String","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.settings/-file-source/-init-/","text":"hexagon_core / com.hexagonkt.settings / FileSource / <init> <init> \u00b6 FileSource ( file : String ) FileSource ( file : File )","title":" init "},{"location":"hexagon_core/com.hexagonkt.settings/-file-source/-init-/#init","text":"FileSource ( file : String ) FileSource ( file : File )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.settings/-file-source/file/","text":"hexagon_core / com.hexagonkt.settings / FileSource / file file \u00b6 val file: File","title":"File"},{"location":"hexagon_core/com.hexagonkt.settings/-file-source/file/#file","text":"val file: File","title":"file"},{"location":"hexagon_core/com.hexagonkt.settings/-file-source/load/","text":"hexagon_core / com.hexagonkt.settings / FileSource / load load \u00b6 fun load (): Map < String , *>","title":"Load"},{"location":"hexagon_core/com.hexagonkt.settings/-file-source/load/#load","text":"fun load (): Map < String , *>","title":"load"},{"location":"hexagon_core/com.hexagonkt.settings/-file-source/to-string/","text":"hexagon_core / com.hexagonkt.settings / FileSource / toString toString \u00b6 fun toString (): String","title":"To string"},{"location":"hexagon_core/com.hexagonkt.settings/-file-source/to-string/#tostring","text":"fun toString (): String","title":"toString"},{"location":"hexagon_core/com.hexagonkt.settings/-object-source/","text":"hexagon_core / com.hexagonkt.settings / ObjectSource ObjectSource \u00b6 class ObjectSource : SettingsSource Constructors \u00b6 Name Summary <init> ObjectSource ( vararg pairs : Pair < String , *> ) ObjectSource ( instance : Any ) ObjectSource ( settings : Map < String , *> ) Properties \u00b6 Name Summary settings val settings: Map < String , *> Functions \u00b6 Name Summary load fun load (): Map < String , *> toString fun toString (): String","title":"Home"},{"location":"hexagon_core/com.hexagonkt.settings/-object-source/#objectsource","text":"class ObjectSource : SettingsSource","title":"ObjectSource"},{"location":"hexagon_core/com.hexagonkt.settings/-object-source/#constructors","text":"Name Summary <init> ObjectSource ( vararg pairs : Pair < String , *> ) ObjectSource ( instance : Any ) ObjectSource ( settings : Map < String , *> )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.settings/-object-source/#properties","text":"Name Summary settings val settings: Map < String , *>","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.settings/-object-source/#functions","text":"Name Summary load fun load (): Map < String , *> toString fun toString (): String","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.settings/-object-source/-init-/","text":"hexagon_core / com.hexagonkt.settings / ObjectSource / <init> <init> \u00b6 ObjectSource ( vararg pairs : Pair < String , *> ) ObjectSource ( instance : Any ) ObjectSource ( settings : Map < String , *> )","title":" init "},{"location":"hexagon_core/com.hexagonkt.settings/-object-source/-init-/#init","text":"ObjectSource ( vararg pairs : Pair < String , *> ) ObjectSource ( instance : Any ) ObjectSource ( settings : Map < String , *> )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.settings/-object-source/load/","text":"hexagon_core / com.hexagonkt.settings / ObjectSource / load load \u00b6 fun load (): Map < String , *>","title":"Load"},{"location":"hexagon_core/com.hexagonkt.settings/-object-source/load/#load","text":"fun load (): Map < String , *>","title":"load"},{"location":"hexagon_core/com.hexagonkt.settings/-object-source/settings/","text":"hexagon_core / com.hexagonkt.settings / ObjectSource / settings settings \u00b6 val settings: Map < String , *>","title":"Settings"},{"location":"hexagon_core/com.hexagonkt.settings/-object-source/settings/#settings","text":"val settings: Map < String , *>","title":"settings"},{"location":"hexagon_core/com.hexagonkt.settings/-object-source/to-string/","text":"hexagon_core / com.hexagonkt.settings / ObjectSource / toString toString \u00b6 fun toString (): String","title":"To string"},{"location":"hexagon_core/com.hexagonkt.settings/-object-source/to-string/#tostring","text":"fun toString (): String","title":"toString"},{"location":"hexagon_core/com.hexagonkt.settings/-resource-source/","text":"hexagon_core / com.hexagonkt.settings / ResourceSource ResourceSource \u00b6 class ResourceSource : SettingsSource Constructors \u00b6 Name Summary <init> ResourceSource ( resource : String ) ResourceSource ( resource : Resource ) Properties \u00b6 Name Summary resource val resource: Resource Functions \u00b6 Name Summary load fun load (): Map < String , *> toString fun toString (): String","title":"Home"},{"location":"hexagon_core/com.hexagonkt.settings/-resource-source/#resourcesource","text":"class ResourceSource : SettingsSource","title":"ResourceSource"},{"location":"hexagon_core/com.hexagonkt.settings/-resource-source/#constructors","text":"Name Summary <init> ResourceSource ( resource : String ) ResourceSource ( resource : Resource )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.settings/-resource-source/#properties","text":"Name Summary resource val resource: Resource","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.settings/-resource-source/#functions","text":"Name Summary load fun load (): Map < String , *> toString fun toString (): String","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.settings/-resource-source/-init-/","text":"hexagon_core / com.hexagonkt.settings / ResourceSource / <init> <init> \u00b6 ResourceSource ( resource : String ) ResourceSource ( resource : Resource )","title":" init "},{"location":"hexagon_core/com.hexagonkt.settings/-resource-source/-init-/#init","text":"ResourceSource ( resource : String ) ResourceSource ( resource : Resource )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.settings/-resource-source/load/","text":"hexagon_core / com.hexagonkt.settings / ResourceSource / load load \u00b6 fun load (): Map < String , *>","title":"Load"},{"location":"hexagon_core/com.hexagonkt.settings/-resource-source/load/#load","text":"fun load (): Map < String , *>","title":"load"},{"location":"hexagon_core/com.hexagonkt.settings/-resource-source/resource/","text":"hexagon_core / com.hexagonkt.settings / ResourceSource / resource resource \u00b6 val resource: Resource","title":"Resource"},{"location":"hexagon_core/com.hexagonkt.settings/-resource-source/resource/#resource","text":"val resource: Resource","title":"resource"},{"location":"hexagon_core/com.hexagonkt.settings/-resource-source/to-string/","text":"hexagon_core / com.hexagonkt.settings / ResourceSource / toString toString \u00b6 fun toString (): String","title":"To string"},{"location":"hexagon_core/com.hexagonkt.settings/-resource-source/to-string/#tostring","text":"fun toString (): String","title":"toString"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/","text":"hexagon_core / com.hexagonkt.settings / SettingsManager SettingsManager \u00b6 object SettingsManager Properties \u00b6 Name Summary log val log: Logger settings var settings : Map < String , *> settingsSources var settingsSources : List < SettingsSource > Functions \u00b6 Name Summary defaultSetting fun < T : Any > defaultSetting ( name : String , value : T ): T fun < T : Any > defaultSetting ( name : List < String > , value : T ): T invoke operator fun invoke ( block : SettingsManager .() -> Unit ): SettingsManager requireSetting fun < T : Any > requireSetting ( vararg name : String ): T setting fun < T : Any > setting ( vararg name : String ): T ?","title":"Home"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/#settingsmanager","text":"object SettingsManager","title":"SettingsManager"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/#properties","text":"Name Summary log val log: Logger settings var settings : Map < String , *> settingsSources var settingsSources : List < SettingsSource >","title":"Properties"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/#functions","text":"Name Summary defaultSetting fun < T : Any > defaultSetting ( name : String , value : T ): T fun < T : Any > defaultSetting ( name : List < String > , value : T ): T invoke operator fun invoke ( block : SettingsManager .() -> Unit ): SettingsManager requireSetting fun < T : Any > requireSetting ( vararg name : String ): T setting fun < T : Any > setting ( vararg name : String ): T ?","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/default-setting/","text":"hexagon_core / com.hexagonkt.settings / SettingsManager / defaultSetting defaultSetting \u00b6 fun < T : Any > defaultSetting ( name : String , value : T ): T fun < T : Any > defaultSetting ( name : List < String > , value : T ): T","title":"Default setting"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/default-setting/#defaultsetting","text":"fun < T : Any > defaultSetting ( name : String , value : T ): T fun < T : Any > defaultSetting ( name : List < String > , value : T ): T","title":"defaultSetting"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/invoke/","text":"hexagon_core / com.hexagonkt.settings / SettingsManager / invoke invoke \u00b6 operator fun invoke ( block : SettingsManager .() -> Unit ): SettingsManager","title":"Invoke"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/invoke/#invoke","text":"operator fun invoke ( block : SettingsManager .() -> Unit ): SettingsManager","title":"invoke"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/log/","text":"hexagon_core / com.hexagonkt.settings / SettingsManager / log log \u00b6 val log: Logger","title":"Log"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/log/#log","text":"val log: Logger","title":"log"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/require-setting/","text":"hexagon_core / com.hexagonkt.settings / SettingsManager / requireSetting requireSetting \u00b6 fun < T : Any > requireSetting ( vararg name : String ): T","title":"Require setting"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/require-setting/#requiresetting","text":"fun < T : Any > requireSetting ( vararg name : String ): T","title":"requireSetting"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/setting/","text":"hexagon_core / com.hexagonkt.settings / SettingsManager / setting setting \u00b6 fun < T : Any > setting ( vararg name : String ): T ?","title":"Setting"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/setting/#setting","text":"fun < T : Any > setting ( vararg name : String ): T ?","title":"setting"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/settings-sources/","text":"hexagon_core / com.hexagonkt.settings / SettingsManager / settingsSources settingsSources \u00b6 var settingsSources : List < SettingsSource >","title":"Settings sources"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/settings-sources/#settingssources","text":"var settingsSources : List < SettingsSource >","title":"settingsSources"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/settings/","text":"hexagon_core / com.hexagonkt.settings / SettingsManager / settings settings \u00b6 var settings : Map < String , *>","title":"Settings"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager/settings/#settings","text":"var settings : Map < String , *>","title":"settings"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/","text":"hexagon_core / com.hexagonkt.settings / SettingsManagerTest SettingsManagerTest \u00b6 class SettingsManagerTest Check gradle . build to see the related files creation. Constructors \u00b6 Name Summary <init> Check gradle . build to see the related files creation. SettingsManagerTest () Functions \u00b6 Name Summary Get configuration properties fun Get configuration properties (): Unit Get configuration properties with defaults fun Get configuration properties with defaults (): Unit Require configuration properties fun Require configuration properties (): Unit Require not found setting fun Require not found setting (): Unit resetSettingSources fun resetSettingSources (): Unit Set default settings add command line arguments fun Set default settings add command line arguments (): Unit Setting works as expected fun Setting works as expected (): Unit Using the 'apply' shortcut works correctly fun Using the 'apply' shortcut works correctly (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/#settingsmanagertest","text":"class SettingsManagerTest Check gradle . build to see the related files creation.","title":"SettingsManagerTest"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/#constructors","text":"Name Summary <init> Check gradle . build to see the related files creation. SettingsManagerTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/#functions","text":"Name Summary Get configuration properties fun Get configuration properties (): Unit Get configuration properties with defaults fun Get configuration properties with defaults (): Unit Require configuration properties fun Require configuration properties (): Unit Require not found setting fun Require not found setting (): Unit resetSettingSources fun resetSettingSources (): Unit Set default settings add command line arguments fun Set default settings add command line arguments (): Unit Setting works as expected fun Setting works as expected (): Unit Using the 'apply' shortcut works correctly fun Using the 'apply' shortcut works correctly (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/-get configuration properties with defaults/","text":"hexagon_core / com.hexagonkt.settings / SettingsManagerTest / Get configuration properties with defaults Get configuration properties with defaults \u00b6 fun Get configuration properties with defaults (): Unit","title":" get configuration properties with defaults"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/-get configuration properties with defaults/#get-configuration-properties-with-defaults","text":"fun Get configuration properties with defaults (): Unit","title":"Get configuration properties with defaults"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/-get configuration properties/","text":"hexagon_core / com.hexagonkt.settings / SettingsManagerTest / Get configuration properties Get configuration properties \u00b6 fun Get configuration properties (): Unit","title":" get configuration properties"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/-get configuration properties/#get-configuration-properties","text":"fun Get configuration properties (): Unit","title":"Get configuration properties"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/-init-/","text":"hexagon_core / com.hexagonkt.settings / SettingsManagerTest / <init> <init> \u00b6 SettingsManagerTest () Check gradle . build to see the related files creation.","title":" init "},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/-init-/#init","text":"SettingsManagerTest () Check gradle . build to see the related files creation.","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/-require configuration properties/","text":"hexagon_core / com.hexagonkt.settings / SettingsManagerTest / Require configuration properties Require configuration properties \u00b6 fun Require configuration properties (): Unit","title":" require configuration properties"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/-require configuration properties/#require-configuration-properties","text":"fun Require configuration properties (): Unit","title":"Require configuration properties"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/-require not found setting/","text":"hexagon_core / com.hexagonkt.settings / SettingsManagerTest / Require not found setting Require not found setting \u00b6 fun Require not found setting (): Unit","title":" require not found setting"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/-require not found setting/#require-not-found-setting","text":"fun Require not found setting (): Unit","title":"Require not found setting"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/-set default settings add command line arguments/","text":"hexagon_core / com.hexagonkt.settings / SettingsManagerTest / Set default settings add command line arguments Set default settings add command line arguments \u00b6 fun Set default settings add command line arguments (): Unit","title":" set default settings add command line arguments"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/-set default settings add command line arguments/#set-default-settings-add-command-line-arguments","text":"fun Set default settings add command line arguments (): Unit","title":"Set default settings add command line arguments"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/-setting works as expected/","text":"hexagon_core / com.hexagonkt.settings / SettingsManagerTest / Setting works as expected Setting works as expected \u00b6 fun Setting works as expected (): Unit","title":" setting works as expected"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/-setting works as expected/#setting-works-as-expected","text":"fun Setting works as expected (): Unit","title":"Setting works as expected"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/-using the 'apply' shortcut works correctly/","text":"hexagon_core / com.hexagonkt.settings / SettingsManagerTest / Using the 'apply' shortcut works correctly Using the 'apply' shortcut works correctly \u00b6 fun Using the 'apply' shortcut works correctly (): Unit","title":" using the 'apply' shortcut works correctly"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/-using the 'apply' shortcut works correctly/#using-the-apply-shortcut-works-correctly","text":"fun Using the 'apply' shortcut works correctly (): Unit","title":"Using the 'apply' shortcut works correctly"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/reset-setting-sources/","text":"hexagon_core / com.hexagonkt.settings / SettingsManagerTest / resetSettingSources resetSettingSources \u00b6 fun resetSettingSources (): Unit","title":"Reset setting sources"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-manager-test/reset-setting-sources/#resetsettingsources","text":"fun resetSettingSources (): Unit","title":"resetSettingSources"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-source/","text":"hexagon_core / com.hexagonkt.settings / SettingsSource SettingsSource \u00b6 interface SettingsSource Functions \u00b6 Name Summary load abstract fun load (): Map < String , *> Inheritors \u00b6 Name Summary CommandLineArgumentsSource class CommandLineArgumentsSource : SettingsSource EnvironmentVariablesSource class EnvironmentVariablesSource : SettingsSource FileSource class FileSource : SettingsSource ObjectSource class ObjectSource : SettingsSource ResourceSource class ResourceSource : SettingsSource SystemPropertiesSource class SystemPropertiesSource : SettingsSource","title":"Home"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-source/#settingssource","text":"interface SettingsSource","title":"SettingsSource"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-source/#functions","text":"Name Summary load abstract fun load (): Map < String , *>","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-source/#inheritors","text":"Name Summary CommandLineArgumentsSource class CommandLineArgumentsSource : SettingsSource EnvironmentVariablesSource class EnvironmentVariablesSource : SettingsSource FileSource class FileSource : SettingsSource ObjectSource class ObjectSource : SettingsSource ResourceSource class ResourceSource : SettingsSource SystemPropertiesSource class SystemPropertiesSource : SettingsSource","title":"Inheritors"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-source/load/","text":"hexagon_core / com.hexagonkt.settings / SettingsSource / load load \u00b6 abstract fun load (): Map < String , *>","title":"Load"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-source/load/#load","text":"abstract fun load (): Map < String , *>","title":"load"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/","text":"hexagon_core / com.hexagonkt.settings / SettingsTest SettingsTest \u00b6 class SettingsTest Constructors \u00b6 Name Summary <init> SettingsTest () Functions \u00b6 Name Summary Load command line arguments adds correct settings fun Load command line arguments adds correct settings (): Unit Load environment variables add settings with provided prefixes fun Load environment variables add settings with provided prefixes (): Unit Load file add variables contained in that file fun Load file add variables contained in that file (): Unit Load system properties add variables with provided prefixes fun Load system properties add variables with provided prefixes (): Unit ObjectSource settings properties are correct fun ObjectSource settings properties are correct (): Unit Settings are loaded from objects fun Settings are loaded from objects (): Unit","title":"Home"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/#settingstest","text":"class SettingsTest","title":"SettingsTest"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/#constructors","text":"Name Summary <init> SettingsTest ()","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/#functions","text":"Name Summary Load command line arguments adds correct settings fun Load command line arguments adds correct settings (): Unit Load environment variables add settings with provided prefixes fun Load environment variables add settings with provided prefixes (): Unit Load file add variables contained in that file fun Load file add variables contained in that file (): Unit Load system properties add variables with provided prefixes fun Load system properties add variables with provided prefixes (): Unit ObjectSource settings properties are correct fun ObjectSource settings properties are correct (): Unit Settings are loaded from objects fun Settings are loaded from objects (): Unit","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/-init-/","text":"hexagon_core / com.hexagonkt.settings / SettingsTest / <init> <init> \u00b6 SettingsTest ()","title":" init "},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/-init-/#init","text":"SettingsTest ()","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/-load command line arguments adds correct settings /","text":"hexagon_core / com.hexagonkt.settings / SettingsTest / Load command line arguments adds correct settings Load command line arguments adds correct settings \u00b6 fun Load command line arguments adds correct settings (): Unit","title":" load command line arguments adds correct settings "},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/-load command line arguments adds correct settings /#load-command-line-arguments-adds-correct-settings","text":"fun Load command line arguments adds correct settings (): Unit","title":"Load command line arguments adds correct settings"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/-load environment variables add settings with provided prefixes/","text":"hexagon_core / com.hexagonkt.settings / SettingsTest / Load environment variables add settings with provided prefixes Load environment variables add settings with provided prefixes \u00b6 fun Load environment variables add settings with provided prefixes (): Unit","title":" load environment variables add settings with provided prefixes"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/-load environment variables add settings with provided prefixes/#load-environment-variables-add-settings-with-provided-prefixes","text":"fun Load environment variables add settings with provided prefixes (): Unit","title":"Load environment variables add settings with provided prefixes"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/-load file add variables contained in that file/","text":"hexagon_core / com.hexagonkt.settings / SettingsTest / Load file add variables contained in that file Load file add variables contained in that file \u00b6 fun Load file add variables contained in that file (): Unit","title":" load file add variables contained in that file"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/-load file add variables contained in that file/#load-file-add-variables-contained-in-that-file","text":"fun Load file add variables contained in that file (): Unit","title":"Load file add variables contained in that file"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/-load system properties add variables with provided prefixes/","text":"hexagon_core / com.hexagonkt.settings / SettingsTest / Load system properties add variables with provided prefixes Load system properties add variables with provided prefixes \u00b6 fun Load system properties add variables with provided prefixes (): Unit","title":" load system properties add variables with provided prefixes"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/-load system properties add variables with provided prefixes/#load-system-properties-add-variables-with-provided-prefixes","text":"fun Load system properties add variables with provided prefixes (): Unit","title":"Load system properties add variables with provided prefixes"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/-object-source settings properties are correct/","text":"hexagon_core / com.hexagonkt.settings / SettingsTest / ObjectSource settings properties are correct ObjectSource settings properties are correct \u00b6 fun ObjectSource settings properties are correct (): Unit","title":" object source settings properties are correct"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/-object-source settings properties are correct/#objectsource-settings-properties-are-correct","text":"fun ObjectSource settings properties are correct (): Unit","title":"ObjectSource settings properties are correct"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/-settings are loaded from objects/","text":"hexagon_core / com.hexagonkt.settings / SettingsTest / Settings are loaded from objects Settings are loaded from objects \u00b6 fun Settings are loaded from objects (): Unit","title":" settings are loaded from objects"},{"location":"hexagon_core/com.hexagonkt.settings/-settings-test/-settings are loaded from objects/#settings-are-loaded-from-objects","text":"fun Settings are loaded from objects (): Unit","title":"Settings are loaded from objects"},{"location":"hexagon_core/com.hexagonkt.settings/-system-properties-source/","text":"hexagon_core / com.hexagonkt.settings / SystemPropertiesSource SystemPropertiesSource \u00b6 class SystemPropertiesSource : SettingsSource Constructors \u00b6 Name Summary <init> SystemPropertiesSource ( prefix : String ) Functions \u00b6 Name Summary load fun load (): Map < String , *> toString fun toString (): String","title":"Home"},{"location":"hexagon_core/com.hexagonkt.settings/-system-properties-source/#systempropertiessource","text":"class SystemPropertiesSource : SettingsSource","title":"SystemPropertiesSource"},{"location":"hexagon_core/com.hexagonkt.settings/-system-properties-source/#constructors","text":"Name Summary <init> SystemPropertiesSource ( prefix : String )","title":"Constructors"},{"location":"hexagon_core/com.hexagonkt.settings/-system-properties-source/#functions","text":"Name Summary load fun load (): Map < String , *> toString fun toString (): String","title":"Functions"},{"location":"hexagon_core/com.hexagonkt.settings/-system-properties-source/-init-/","text":"hexagon_core / com.hexagonkt.settings / SystemPropertiesSource / <init> <init> \u00b6 SystemPropertiesSource ( prefix : String )","title":" init "},{"location":"hexagon_core/com.hexagonkt.settings/-system-properties-source/-init-/#init","text":"SystemPropertiesSource ( prefix : String )","title":"&lt;init&gt;"},{"location":"hexagon_core/com.hexagonkt.settings/-system-properties-source/load/","text":"hexagon_core / com.hexagonkt.settings / SystemPropertiesSource / load load \u00b6 fun load (): Map < String , *>","title":"Load"},{"location":"hexagon_core/com.hexagonkt.settings/-system-properties-source/load/#load","text":"fun load (): Map < String , *>","title":"load"},{"location":"hexagon_core/com.hexagonkt.settings/-system-properties-source/to-string/","text":"hexagon_core / com.hexagonkt.settings / SystemPropertiesSource / toString toString \u00b6 fun toString (): String","title":"To string"},{"location":"hexagon_core/com.hexagonkt.settings/-system-properties-source/to-string/#tostring","text":"fun toString (): String","title":"toString"},{"location":"hexagon_scheduler/","text":"hexagon_scheduler Repeated tasks execution based on Cron expressions for Hexagon framework. It uses the Cron-utils Java Library . You can check an usage example in the following method: val cron = CronScheduler () val times = 1 var count = 0 cron . schedule ( \"0/1 * * * * ?\" ) { count ++ } sleep (( times * 1 _000 ) + 100L ) cron . shutdown () assert ( count == times ) Packages \u00b6 Name Summary com.hexagonkt.scheduler Classes for scheduling blocks of code repeatedly based on a Cron expression. Index \u00b6 All Types","title":"Scheduler"},{"location":"hexagon_scheduler/#packages","text":"Name Summary com.hexagonkt.scheduler Classes for scheduling blocks of code repeatedly based on a Cron expression.","title":"Packages"},{"location":"hexagon_scheduler/#index","text":"All Types","title":"Index"},{"location":"hexagon_scheduler/alltypes/","text":"Repeated tasks execution based on Cron expressions for Hexagon framework. It uses the Cron-utils Java Library . All Types \u00b6 Name Summary com.hexagonkt.scheduler.CronScheduler \u00b6 Scheduler to execute tasks repeatedly. After using it, you should call the shutdown method. If the JVM finishes without calling shutdown , it will be called upon JVM termination. | com.hexagonkt.scheduler.CronSchedulerSamplesTest \u00b6 | com.hexagonkt.scheduler.CronSchedulerTest \u00b6","title":"Home"},{"location":"hexagon_scheduler/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"hexagon_scheduler/alltypes/#comhexagonktschedulercronscheduler","text":"Scheduler to execute tasks repeatedly. After using it, you should call the shutdown method. If the JVM finishes without calling shutdown , it will be called upon JVM termination. |","title":"com.hexagonkt.scheduler.CronScheduler"},{"location":"hexagon_scheduler/alltypes/#comhexagonktschedulercronschedulersamplestest","text":"|","title":"com.hexagonkt.scheduler.CronSchedulerSamplesTest"},{"location":"hexagon_scheduler/alltypes/#comhexagonktschedulercronschedulertest","text":"","title":"com.hexagonkt.scheduler.CronSchedulerTest"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/","text":"hexagon_scheduler / com.hexagonkt.scheduler Package com.hexagonkt.scheduler \u00b6 Classes for scheduling blocks of code repeatedly based on a Cron expression. Types \u00b6 Name Summary CronScheduler Scheduler to execute tasks repeatedly. After using it, you should call the shutdown method. If the JVM finishes without calling shutdown , it will be called upon JVM termination. class CronScheduler CronSchedulerSamplesTest class CronSchedulerSamplesTest CronSchedulerTest class CronSchedulerTest","title":"Home"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/#package-comhexagonktscheduler","text":"Classes for scheduling blocks of code repeatedly based on a Cron expression.","title":"Package com.hexagonkt.scheduler"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/#types","text":"Name Summary CronScheduler Scheduler to execute tasks repeatedly. After using it, you should call the shutdown method. If the JVM finishes without calling shutdown , it will be called upon JVM termination. class CronScheduler CronSchedulerSamplesTest class CronSchedulerSamplesTest CronSchedulerTest class CronSchedulerTest","title":"Types"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler/","text":"hexagon_scheduler / com.hexagonkt.scheduler / CronScheduler CronScheduler \u00b6 class CronScheduler Scheduler to execute tasks repeatedly. After using it, you should call the shutdown method. If the JVM finishes without calling shutdown , it will be called upon JVM termination. // sample val cron = CronScheduler () val times = 1 var count = 0 cron . schedule ( \"0/1 * * * * ?\" ) { count ++ } sleep (( times * 1 _000 ) + 100L ) cron . shutdown () assert ( count == times ) Parameters \u00b6 threads - Number of threads used by the thread pool. By default it is equals to the number of processors. Constructors \u00b6 Name Summary <init> Scheduler to execute tasks repeatedly. After using it, you should call the shutdown method. If the JVM finishes without calling shutdown , it will be called upon JVM termination. CronScheduler ( threads : Int = getRuntime (). availableProcessors ()) Functions \u00b6 Name Summary schedule Schedules a block of code to be executed repeatedly by a Cron expresion. fun schedule ( cronExpression : String , callback : () -> Unit ): Unit shutdown Shuts down this scheduler's thread pool. Calling over an already closed scheduler does not have any effect. It is called by the JVM when it is shut down. fun shutdown (): Unit","title":"Home"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler/#cronscheduler","text":"class CronScheduler Scheduler to execute tasks repeatedly. After using it, you should call the shutdown method. If the JVM finishes without calling shutdown , it will be called upon JVM termination. // sample val cron = CronScheduler () val times = 1 var count = 0 cron . schedule ( \"0/1 * * * * ?\" ) { count ++ } sleep (( times * 1 _000 ) + 100L ) cron . shutdown () assert ( count == times )","title":"CronScheduler"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler/#parameters","text":"threads - Number of threads used by the thread pool. By default it is equals to the number of processors.","title":"Parameters"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler/#constructors","text":"Name Summary <init> Scheduler to execute tasks repeatedly. After using it, you should call the shutdown method. If the JVM finishes without calling shutdown , it will be called upon JVM termination. CronScheduler ( threads : Int = getRuntime (). availableProcessors ())","title":"Constructors"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler/#functions","text":"Name Summary schedule Schedules a block of code to be executed repeatedly by a Cron expresion. fun schedule ( cronExpression : String , callback : () -> Unit ): Unit shutdown Shuts down this scheduler's thread pool. Calling over an already closed scheduler does not have any effect. It is called by the JVM when it is shut down. fun shutdown (): Unit","title":"Functions"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler/-init-/","text":"hexagon_scheduler / com.hexagonkt.scheduler / CronScheduler / <init> <init> \u00b6 CronScheduler ( threads : Int = getRuntime (). availableProcessors ()) Scheduler to execute tasks repeatedly. After using it, you should call the shutdown method. If the JVM finishes without calling shutdown , it will be called upon JVM termination. // sample val cron = CronScheduler () val times = 1 var count = 0 cron . schedule ( \"0/1 * * * * ?\" ) { count ++ } sleep (( times * 1 _000 ) + 100L ) cron . shutdown () assert ( count == times ) Parameters \u00b6 threads - Number of threads used by the thread pool. By default it is equals to the number of processors.","title":" init "},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler/-init-/#init","text":"CronScheduler ( threads : Int = getRuntime (). availableProcessors ()) Scheduler to execute tasks repeatedly. After using it, you should call the shutdown method. If the JVM finishes without calling shutdown , it will be called upon JVM termination. // sample val cron = CronScheduler () val times = 1 var count = 0 cron . schedule ( \"0/1 * * * * ?\" ) { count ++ } sleep (( times * 1 _000 ) + 100L ) cron . shutdown () assert ( count == times )","title":"&lt;init&gt;"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler/-init-/#parameters","text":"threads - Number of threads used by the thread pool. By default it is equals to the number of processors.","title":"Parameters"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler/schedule/","text":"hexagon_scheduler / com.hexagonkt.scheduler / CronScheduler / schedule schedule \u00b6 fun schedule ( cronExpression : String , callback : () -> Unit ): Unit Schedules a block of code to be executed repeatedly by a Cron expresion. Parameters \u00b6 cronExpression - Periodicity of the task in Cron format. callback - Task code to be executed periodically.","title":"Schedule"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler/schedule/#schedule","text":"fun schedule ( cronExpression : String , callback : () -> Unit ): Unit Schedules a block of code to be executed repeatedly by a Cron expresion.","title":"schedule"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler/schedule/#parameters","text":"cronExpression - Periodicity of the task in Cron format. callback - Task code to be executed periodically.","title":"Parameters"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler/shutdown/","text":"hexagon_scheduler / com.hexagonkt.scheduler / CronScheduler / shutdown shutdown \u00b6 fun shutdown (): Unit Shuts down this scheduler's thread pool. Calling over an already closed scheduler does not have any effect. It is called by the JVM when it is shut down.","title":"Shutdown"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler/shutdown/#shutdown","text":"fun shutdown (): Unit Shuts down this scheduler's thread pool. Calling over an already closed scheduler does not have any effect. It is called by the JVM when it is shut down.","title":"shutdown"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-samples-test/","text":"hexagon_scheduler / com.hexagonkt.scheduler / CronSchedulerSamplesTest CronSchedulerSamplesTest \u00b6 class CronSchedulerSamplesTest Constructors \u00b6 Name Summary <init> CronSchedulerSamplesTest () Functions \u00b6 Name Summary callbackExecutedProperly fun callbackExecutedProperly (): Unit","title":"Home"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-samples-test/#cronschedulersamplestest","text":"class CronSchedulerSamplesTest","title":"CronSchedulerSamplesTest"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-samples-test/#constructors","text":"Name Summary <init> CronSchedulerSamplesTest ()","title":"Constructors"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-samples-test/#functions","text":"Name Summary callbackExecutedProperly fun callbackExecutedProperly (): Unit","title":"Functions"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-samples-test/-init-/","text":"hexagon_scheduler / com.hexagonkt.scheduler / CronSchedulerSamplesTest / <init> <init> \u00b6 CronSchedulerSamplesTest ()","title":" init "},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-samples-test/-init-/#init","text":"CronSchedulerSamplesTest ()","title":"&lt;init&gt;"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-samples-test/callback-executed-properly/","text":"hexagon_scheduler / com.hexagonkt.scheduler / CronSchedulerSamplesTest / callbackExecutedProperly callbackExecutedProperly \u00b6 fun callbackExecutedProperly (): Unit","title":"Callback executed properly"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-samples-test/callback-executed-properly/#callbackexecutedproperly","text":"fun callbackExecutedProperly (): Unit","title":"callbackExecutedProperly"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-test/","text":"hexagon_scheduler / com.hexagonkt.scheduler / CronSchedulerTest CronSchedulerTest \u00b6 class CronSchedulerTest Constructors \u00b6 Name Summary <init> CronSchedulerTest () Functions \u00b6 Name Summary Callback is executed properly fun Callback is executed properly (): Unit Failing callback does not prevent future executions fun Failing callback does not prevent future executions (): Unit","title":"Home"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-test/#cronschedulertest","text":"class CronSchedulerTest","title":"CronSchedulerTest"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-test/#constructors","text":"Name Summary <init> CronSchedulerTest ()","title":"Constructors"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-test/#functions","text":"Name Summary Callback is executed properly fun Callback is executed properly (): Unit Failing callback does not prevent future executions fun Failing callback does not prevent future executions (): Unit","title":"Functions"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-test/-callback is executed properly/","text":"hexagon_scheduler / com.hexagonkt.scheduler / CronSchedulerTest / Callback is executed properly Callback is executed properly \u00b6 fun Callback is executed properly (): Unit","title":" callback is executed properly"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-test/-callback is executed properly/#callback-is-executed-properly","text":"fun Callback is executed properly (): Unit","title":"Callback is executed properly"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-test/-failing callback does not prevent future executions/","text":"hexagon_scheduler / com.hexagonkt.scheduler / CronSchedulerTest / Failing callback does not prevent future executions Failing callback does not prevent future executions \u00b6 fun Failing callback does not prevent future executions (): Unit","title":" failing callback does not prevent future executions"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-test/-failing callback does not prevent future executions/#failing-callback-does-not-prevent-future-executions","text":"fun Failing callback does not prevent future executions (): Unit","title":"Failing callback does not prevent future executions"},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-test/-init-/","text":"hexagon_scheduler / com.hexagonkt.scheduler / CronSchedulerTest / <init> <init> \u00b6 CronSchedulerTest ()","title":" init "},{"location":"hexagon_scheduler/com.hexagonkt.scheduler/-cron-scheduler-test/-init-/#init","text":"CronSchedulerTest ()","title":"&lt;init&gt;"},{"location":"hexagon_web/","text":"hexagon_web TODO Add support for kotlinx.html . Templates \u00b6 Provide utilities for template processing inside HTTP handlers. Packages \u00b6 Name Summary com.hexagonkt.web TODO com.hexagonkt.web.examples Index \u00b6 All Types","title":"Web"},{"location":"hexagon_web/#templates","text":"Provide utilities for template processing inside HTTP handlers.","title":"Templates"},{"location":"hexagon_web/#packages","text":"Name Summary com.hexagonkt.web TODO com.hexagonkt.web.examples","title":"Packages"},{"location":"hexagon_web/#index","text":"All Types","title":"Index"},{"location":"hexagon_web/alltypes/","text":"TODO Add support for kotlinx.html . All Types \u00b6 Name Summary (extensions in package com.hexagonkt.web) com.hexagonkt.http.server.Call \u00b6 | com.hexagonkt.web.examples.TodoTest \u00b6 TODO Use templates | com.hexagonkt.web.WebTest \u00b6","title":"Home"},{"location":"hexagon_web/alltypes/#all-types","text":"Name Summary (extensions in package com.hexagonkt.web)","title":"All Types"},{"location":"hexagon_web/alltypes/#comhexagonkthttpservercall","text":"|","title":"com.hexagonkt.http.server.Call"},{"location":"hexagon_web/alltypes/#comhexagonktwebexamplestodotest","text":"TODO Use templates |","title":"com.hexagonkt.web.examples.TodoTest"},{"location":"hexagon_web/alltypes/#comhexagonktwebwebtest","text":"","title":"com.hexagonkt.web.WebTest"},{"location":"hexagon_web/com.hexagonkt.web/","text":"hexagon_web / com.hexagonkt.web Package com.hexagonkt.web \u00b6 TODO Types \u00b6 Name Summary WebTest class WebTest Extensions for External Classes \u00b6 Name Summary com.hexagonkt.http.server.Call","title":"Home"},{"location":"hexagon_web/com.hexagonkt.web/#package-comhexagonktweb","text":"TODO","title":"Package com.hexagonkt.web"},{"location":"hexagon_web/com.hexagonkt.web/#types","text":"Name Summary WebTest class WebTest","title":"Types"},{"location":"hexagon_web/com.hexagonkt.web/#extensions-for-external-classes","text":"Name Summary com.hexagonkt.http.server.Call","title":"Extensions for External Classes"},{"location":"hexagon_web/com.hexagonkt.web/-web-test/","text":"hexagon_web / com.hexagonkt.web / WebTest WebTest \u00b6 class WebTest Constructors \u00b6 Name Summary <init> WebTest () Functions \u00b6 Name Summary start fun start (): Unit stop fun stop (): Unit template fun template (): Unit","title":"Home"},{"location":"hexagon_web/com.hexagonkt.web/-web-test/#webtest","text":"class WebTest","title":"WebTest"},{"location":"hexagon_web/com.hexagonkt.web/-web-test/#constructors","text":"Name Summary <init> WebTest ()","title":"Constructors"},{"location":"hexagon_web/com.hexagonkt.web/-web-test/#functions","text":"Name Summary start fun start (): Unit stop fun stop (): Unit template fun template (): Unit","title":"Functions"},{"location":"hexagon_web/com.hexagonkt.web/-web-test/-init-/","text":"hexagon_web / com.hexagonkt.web / WebTest / <init> <init> \u00b6 WebTest ()","title":" init "},{"location":"hexagon_web/com.hexagonkt.web/-web-test/-init-/#init","text":"WebTest ()","title":"&lt;init&gt;"},{"location":"hexagon_web/com.hexagonkt.web/-web-test/start/","text":"hexagon_web / com.hexagonkt.web / WebTest / start start \u00b6 fun start (): Unit","title":"Start"},{"location":"hexagon_web/com.hexagonkt.web/-web-test/start/#start","text":"fun start (): Unit","title":"start"},{"location":"hexagon_web/com.hexagonkt.web/-web-test/stop/","text":"hexagon_web / com.hexagonkt.web / WebTest / stop stop \u00b6 fun stop (): Unit","title":"Stop"},{"location":"hexagon_web/com.hexagonkt.web/-web-test/stop/#stop","text":"fun stop (): Unit","title":"stop"},{"location":"hexagon_web/com.hexagonkt.web/-web-test/template/","text":"hexagon_web / com.hexagonkt.web / WebTest / template template \u00b6 fun template (): Unit","title":"Template"},{"location":"hexagon_web/com.hexagonkt.web/-web-test/template/#template","text":"fun template (): Unit","title":"template"},{"location":"hexagon_web/com.hexagonkt.web/com.hexagonkt.http.server.-call/","text":"hexagon_web / com.hexagonkt.web / com.hexagonkt.http.server.Call Extensions for com.hexagonkt.http.server.Call \u00b6 Name Summary fullContext fun Call . fullContext (): Map < String , *> obtainLocale TODO Review order precedence and complete code (now only taking request attribute) fun Call . obtainLocale (): Locale template fun Call . template ( templateAdapter : TemplatePort , templateName : String , locale : Locale = obtainLocale (), context : Map < String , *> = fullContext ()): Unit templateType fun Call . templateType ( template : String ): Unit","title":"Home"},{"location":"hexagon_web/com.hexagonkt.web/com.hexagonkt.http.server.-call/#extensions-for-comhexagonkthttpservercall","text":"Name Summary fullContext fun Call . fullContext (): Map < String , *> obtainLocale TODO Review order precedence and complete code (now only taking request attribute) fun Call . obtainLocale (): Locale template fun Call . template ( templateAdapter : TemplatePort , templateName : String , locale : Locale = obtainLocale (), context : Map < String , *> = fullContext ()): Unit templateType fun Call . templateType ( template : String ): Unit","title":"Extensions for com.hexagonkt.http.server.Call"},{"location":"hexagon_web/com.hexagonkt.web/com.hexagonkt.http.server.-call/full-context/","text":"hexagon_web / com.hexagonkt.web / com.hexagonkt.http.server.Call / fullContext fullContext \u00b6 fun Call . fullContext (): Map < String , *>","title":"Full context"},{"location":"hexagon_web/com.hexagonkt.web/com.hexagonkt.http.server.-call/full-context/#fullcontext","text":"fun Call . fullContext (): Map < String , *>","title":"fullContext"},{"location":"hexagon_web/com.hexagonkt.web/com.hexagonkt.http.server.-call/obtain-locale/","text":"hexagon_web / com.hexagonkt.web / com.hexagonkt.http.server.Call / obtainLocale obtainLocale \u00b6 fun Call . obtainLocale (): Locale TODO Review order precedence and complete code (now only taking request attribute) Request Session Cookie Accept-language Server default locale","title":"Obtain locale"},{"location":"hexagon_web/com.hexagonkt.web/com.hexagonkt.http.server.-call/obtain-locale/#obtainlocale","text":"fun Call . obtainLocale (): Locale TODO Review order precedence and complete code (now only taking request attribute) Request Session Cookie Accept-language Server default locale","title":"obtainLocale"},{"location":"hexagon_web/com.hexagonkt.web/com.hexagonkt.http.server.-call/template-type/","text":"hexagon_web / com.hexagonkt.web / com.hexagonkt.http.server.Call / templateType templateType \u00b6 fun Call . templateType ( template : String ): Unit","title":"Template type"},{"location":"hexagon_web/com.hexagonkt.web/com.hexagonkt.http.server.-call/template-type/#templatetype","text":"fun Call . templateType ( template : String ): Unit","title":"templateType"},{"location":"hexagon_web/com.hexagonkt.web/com.hexagonkt.http.server.-call/template/","text":"hexagon_web / com.hexagonkt.web / com.hexagonkt.http.server.Call / template template \u00b6 fun Call . template ( templateAdapter : TemplatePort , templateName : String , locale : Locale = obtainLocale (), context : Map < String , *> = fullContext ()): Unit","title":"Template"},{"location":"hexagon_web/com.hexagonkt.web/com.hexagonkt.http.server.-call/template/#template","text":"fun Call . template ( templateAdapter : TemplatePort , templateName : String , locale : Locale = obtainLocale (), context : Map < String , *> = fullContext ()): Unit","title":"template"},{"location":"hexagon_web/com.hexagonkt.web.examples/","text":"hexagon_web / com.hexagonkt.web.examples Package com.hexagonkt.web.examples \u00b6 Types \u00b6 Name Summary TodoTest TODO Use templates abstract class TodoTest","title":"Home"},{"location":"hexagon_web/com.hexagonkt.web.examples/#package-comhexagonktwebexamples","text":"","title":"Package com.hexagonkt.web.examples"},{"location":"hexagon_web/com.hexagonkt.web.examples/#types","text":"Name Summary TodoTest TODO Use templates abstract class TodoTest","title":"Types"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/","text":"hexagon_web / com.hexagonkt.web.examples / TodoTest TodoTest \u00b6 abstract class TodoTest TODO Use templates Types \u00b6 Name Summary Task data class Task Constructors \u00b6 Name Summary <init> TODO Use templates TodoTest ( adapter : ServerPort ) Functions \u00b6 Name Summary Create task fun Create task (): Unit Delete task fun Delete task (): Unit Get task fun Get task (): Unit initialize fun initialize (): Unit List tasks fun List tasks (): Unit shutdown fun shutdown (): Unit Task not found fun Task not found (): Unit Update task fun Update task (): Unit","title":"Home"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/#todotest","text":"abstract class TodoTest TODO Use templates","title":"TodoTest"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/#types","text":"Name Summary Task data class Task","title":"Types"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/#constructors","text":"Name Summary <init> TODO Use templates TodoTest ( adapter : ServerPort )","title":"Constructors"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/#functions","text":"Name Summary Create task fun Create task (): Unit Delete task fun Delete task (): Unit Get task fun Get task (): Unit initialize fun initialize (): Unit List tasks fun List tasks (): Unit shutdown fun shutdown (): Unit Task not found fun Task not found (): Unit Update task fun Update task (): Unit","title":"Functions"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-create task/","text":"hexagon_web / com.hexagonkt.web.examples / TodoTest / Create task Create task \u00b6 fun Create task (): Unit","title":" create task"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-create task/#create-task","text":"fun Create task (): Unit","title":"Create task"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-delete task/","text":"hexagon_web / com.hexagonkt.web.examples / TodoTest / Delete task Delete task \u00b6 fun Delete task (): Unit","title":" delete task"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-delete task/#delete-task","text":"fun Delete task (): Unit","title":"Delete task"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-get task/","text":"hexagon_web / com.hexagonkt.web.examples / TodoTest / Get task Get task \u00b6 fun Get task (): Unit","title":" get task"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-get task/#get-task","text":"fun Get task (): Unit","title":"Get task"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-init-/","text":"hexagon_web / com.hexagonkt.web.examples / TodoTest / <init> <init> \u00b6 TodoTest ( adapter : ServerPort ) TODO Use templates","title":" init "},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-init-/#init","text":"TodoTest ( adapter : ServerPort ) TODO Use templates","title":"&lt;init&gt;"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-list tasks/","text":"hexagon_web / com.hexagonkt.web.examples / TodoTest / List tasks List tasks \u00b6 fun List tasks (): Unit","title":" list tasks"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-list tasks/#list-tasks","text":"fun List tasks (): Unit","title":"List tasks"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-task not found/","text":"hexagon_web / com.hexagonkt.web.examples / TodoTest / Task not found Task not found \u00b6 fun Task not found (): Unit","title":" task not found"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-task not found/#task-not-found","text":"fun Task not found (): Unit","title":"Task not found"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-update task/","text":"hexagon_web / com.hexagonkt.web.examples / TodoTest / Update task Update task \u00b6 fun Update task (): Unit","title":" update task"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-update task/#update-task","text":"fun Update task (): Unit","title":"Update task"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/initialize/","text":"hexagon_web / com.hexagonkt.web.examples / TodoTest / initialize initialize \u00b6 fun initialize (): Unit","title":"Initialize"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/initialize/#initialize","text":"fun initialize (): Unit","title":"initialize"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/shutdown/","text":"hexagon_web / com.hexagonkt.web.examples / TodoTest / shutdown shutdown \u00b6 fun shutdown (): Unit","title":"Shutdown"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/shutdown/#shutdown","text":"fun shutdown (): Unit","title":"shutdown"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-task/","text":"hexagon_web / com.hexagonkt.web.examples / TodoTest / Task Task \u00b6 data class Task Constructors \u00b6 Name Summary <init> Task ( number : Int , title : String , description : String ) Properties \u00b6 Name Summary description val description: String number val number: Int title val title: String","title":"Home"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-task/#task","text":"data class Task","title":"Task"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-task/#constructors","text":"Name Summary <init> Task ( number : Int , title : String , description : String )","title":"Constructors"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-task/#properties","text":"Name Summary description val description: String number val number: Int title val title: String","title":"Properties"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-task/-init-/","text":"hexagon_web / com.hexagonkt.web.examples / TodoTest / Task / <init> <init> \u00b6 Task ( number : Int , title : String , description : String )","title":" init "},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-task/-init-/#init","text":"Task ( number : Int , title : String , description : String )","title":"&lt;init&gt;"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-task/description/","text":"hexagon_web / com.hexagonkt.web.examples / TodoTest / Task / description description \u00b6 val description: String","title":"Description"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-task/description/#description","text":"val description: String","title":"description"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-task/number/","text":"hexagon_web / com.hexagonkt.web.examples / TodoTest / Task / number number \u00b6 val number: Int","title":"Number"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-task/number/#number","text":"val number: Int","title":"number"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-task/title/","text":"hexagon_web / com.hexagonkt.web.examples / TodoTest / Task / title title \u00b6 val title: String","title":"Title"},{"location":"hexagon_web/com.hexagonkt.web.examples/-todo-test/-task/title/#title","text":"val title: String","title":"title"},{"location":"http_server_jetty/","text":"http_server_jetty Packages \u00b6 Name Summary com.hexagonkt.http com.hexagonkt.http.server.jetty Index \u00b6 All Types","title":"Jetty"},{"location":"http_server_jetty/#packages","text":"Name Summary com.hexagonkt.http com.hexagonkt.http.server.jetty","title":"Packages"},{"location":"http_server_jetty/#index","text":"All Types","title":"Index"},{"location":"http_server_jetty/alltypes/","text":"All Types \u00b6 Name Summary com.hexagonkt.http.HelloWorldTest \u00b6 | com.hexagonkt.http.server.jetty.JettyServletAdapter \u00b6 TODO . | com.hexagonkt.http.server.jetty.JettyServletAdapterBooksTest \u00b6 | com.hexagonkt.http.server.jetty.JettyServletAdapterCookiesTest \u00b6 | com.hexagonkt.http.server.jetty.JettyServletAdapterCorsTest \u00b6 | com.hexagonkt.http.server.jetty.JettyServletAdapterErrorsTest \u00b6 | com.hexagonkt.http.server.jetty.JettyServletAdapterFilesTest \u00b6 | com.hexagonkt.http.server.jetty.JettyServletAdapterFiltersTest \u00b6 | com.hexagonkt.http.server.jetty.JettyServletAdapterGenericTest \u00b6 | com.hexagonkt.http.server.jetty.JettyServletAdapterSamplesTest \u00b6 | com.hexagonkt.http.server.jetty.JettyServletAdapterSessionTest \u00b6 | com.hexagonkt.http.server.jetty.JettyServletAdapterTest \u00b6 | com.hexagonkt.http.server.jetty.JettyServletAdapterTodoTest \u00b6","title":"Home"},{"location":"http_server_jetty/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"http_server_jetty/alltypes/#comhexagonkthttphelloworldtest","text":"|","title":"com.hexagonkt.http.HelloWorldTest"},{"location":"http_server_jetty/alltypes/#comhexagonkthttpserverjettyjettyservletadapter","text":"TODO . |","title":"com.hexagonkt.http.server.jetty.JettyServletAdapter"},{"location":"http_server_jetty/alltypes/#comhexagonkthttpserverjettyjettyservletadapterbookstest","text":"|","title":"com.hexagonkt.http.server.jetty.JettyServletAdapterBooksTest"},{"location":"http_server_jetty/alltypes/#comhexagonkthttpserverjettyjettyservletadaptercookiestest","text":"|","title":"com.hexagonkt.http.server.jetty.JettyServletAdapterCookiesTest"},{"location":"http_server_jetty/alltypes/#comhexagonkthttpserverjettyjettyservletadaptercorstest","text":"|","title":"com.hexagonkt.http.server.jetty.JettyServletAdapterCorsTest"},{"location":"http_server_jetty/alltypes/#comhexagonkthttpserverjettyjettyservletadaptererrorstest","text":"|","title":"com.hexagonkt.http.server.jetty.JettyServletAdapterErrorsTest"},{"location":"http_server_jetty/alltypes/#comhexagonkthttpserverjettyjettyservletadapterfilestest","text":"|","title":"com.hexagonkt.http.server.jetty.JettyServletAdapterFilesTest"},{"location":"http_server_jetty/alltypes/#comhexagonkthttpserverjettyjettyservletadapterfilterstest","text":"|","title":"com.hexagonkt.http.server.jetty.JettyServletAdapterFiltersTest"},{"location":"http_server_jetty/alltypes/#comhexagonkthttpserverjettyjettyservletadaptergenerictest","text":"|","title":"com.hexagonkt.http.server.jetty.JettyServletAdapterGenericTest"},{"location":"http_server_jetty/alltypes/#comhexagonkthttpserverjettyjettyservletadaptersamplestest","text":"|","title":"com.hexagonkt.http.server.jetty.JettyServletAdapterSamplesTest"},{"location":"http_server_jetty/alltypes/#comhexagonkthttpserverjettyjettyservletadaptersessiontest","text":"|","title":"com.hexagonkt.http.server.jetty.JettyServletAdapterSessionTest"},{"location":"http_server_jetty/alltypes/#comhexagonkthttpserverjettyjettyservletadaptertest","text":"|","title":"com.hexagonkt.http.server.jetty.JettyServletAdapterTest"},{"location":"http_server_jetty/alltypes/#comhexagonkthttpserverjettyjettyservletadaptertodotest","text":"","title":"com.hexagonkt.http.server.jetty.JettyServletAdapterTodoTest"},{"location":"http_server_jetty/com.hexagonkt.http/","text":"http_server_jetty / com.hexagonkt.http Package com.hexagonkt.http \u00b6 Types \u00b6 Name Summary HelloWorldTest class HelloWorldTest Properties \u00b6 Name Summary server val server: Server Functions \u00b6 Name Summary main fun main (): Unit","title":"Home"},{"location":"http_server_jetty/com.hexagonkt.http/#package-comhexagonkthttp","text":"","title":"Package com.hexagonkt.http"},{"location":"http_server_jetty/com.hexagonkt.http/#types","text":"Name Summary HelloWorldTest class HelloWorldTest","title":"Types"},{"location":"http_server_jetty/com.hexagonkt.http/#properties","text":"Name Summary server val server: Server","title":"Properties"},{"location":"http_server_jetty/com.hexagonkt.http/#functions","text":"Name Summary main fun main (): Unit","title":"Functions"},{"location":"http_server_jetty/com.hexagonkt.http/main/","text":"http_server_jetty / com.hexagonkt.http / main main \u00b6 fun main (): Unit","title":"Main"},{"location":"http_server_jetty/com.hexagonkt.http/main/#main","text":"fun main (): Unit","title":"main"},{"location":"http_server_jetty/com.hexagonkt.http/server/","text":"http_server_jetty / com.hexagonkt.http / server server \u00b6 val server: Server","title":"Server"},{"location":"http_server_jetty/com.hexagonkt.http/server/#server","text":"val server: Server","title":"server"},{"location":"http_server_jetty/com.hexagonkt.http/-hello-world-test/","text":"http_server_jetty / com.hexagonkt.http / HelloWorldTest HelloWorldTest \u00b6 class HelloWorldTest Constructors \u00b6 Name Summary <init> HelloWorldTest () Functions \u00b6 Name Summary Create book returns 201 and new book ID fun Create book returns 201 and new book ID (): Unit initialize fun initialize (): Unit shutdown fun shutdown (): Unit","title":"Home"},{"location":"http_server_jetty/com.hexagonkt.http/-hello-world-test/#helloworldtest","text":"class HelloWorldTest","title":"HelloWorldTest"},{"location":"http_server_jetty/com.hexagonkt.http/-hello-world-test/#constructors","text":"Name Summary <init> HelloWorldTest ()","title":"Constructors"},{"location":"http_server_jetty/com.hexagonkt.http/-hello-world-test/#functions","text":"Name Summary Create book returns 201 and new book ID fun Create book returns 201 and new book ID (): Unit initialize fun initialize (): Unit shutdown fun shutdown (): Unit","title":"Functions"},{"location":"http_server_jetty/com.hexagonkt.http/-hello-world-test/-create book returns 201 and new book -i-d/","text":"http_server_jetty / com.hexagonkt.http / HelloWorldTest / Create book returns 201 and new book ID Create book returns 201 and new book ID \u00b6 fun Create book returns 201 and new book ID (): Unit","title":" create book returns 201 and new book  i d"},{"location":"http_server_jetty/com.hexagonkt.http/-hello-world-test/-create book returns 201 and new book -i-d/#create-book-returns-201-and-new-book-id","text":"fun Create book returns 201 and new book ID (): Unit","title":"Create book returns 201 and new book ID"},{"location":"http_server_jetty/com.hexagonkt.http/-hello-world-test/-init-/","text":"http_server_jetty / com.hexagonkt.http / HelloWorldTest / <init> <init> \u00b6 HelloWorldTest ()","title":" init "},{"location":"http_server_jetty/com.hexagonkt.http/-hello-world-test/-init-/#init","text":"HelloWorldTest ()","title":"&lt;init&gt;"},{"location":"http_server_jetty/com.hexagonkt.http/-hello-world-test/initialize/","text":"http_server_jetty / com.hexagonkt.http / HelloWorldTest / initialize initialize \u00b6 fun initialize (): Unit","title":"Initialize"},{"location":"http_server_jetty/com.hexagonkt.http/-hello-world-test/initialize/#initialize","text":"fun initialize (): Unit","title":"initialize"},{"location":"http_server_jetty/com.hexagonkt.http/-hello-world-test/shutdown/","text":"http_server_jetty / com.hexagonkt.http / HelloWorldTest / shutdown shutdown \u00b6 fun shutdown (): Unit","title":"Shutdown"},{"location":"http_server_jetty/com.hexagonkt.http/-hello-world-test/shutdown/#shutdown","text":"fun shutdown (): Unit","title":"shutdown"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/","text":"http_server_jetty / com.hexagonkt.http.server.jetty Package com.hexagonkt.http.server.jetty \u00b6 Types \u00b6 Name Summary JettyServletAdapter TODO . class JettyServletAdapter : ServerPort JettyServletAdapterBooksTest class JettyServletAdapterBooksTest JettyServletAdapterCookiesTest class JettyServletAdapterCookiesTest JettyServletAdapterCorsTest class JettyServletAdapterCorsTest JettyServletAdapterErrorsTest class JettyServletAdapterErrorsTest JettyServletAdapterFilesTest class JettyServletAdapterFilesTest JettyServletAdapterFiltersTest class JettyServletAdapterFiltersTest JettyServletAdapterGenericTest class JettyServletAdapterGenericTest JettyServletAdapterSamplesTest class JettyServletAdapterSamplesTest JettyServletAdapterSessionTest class JettyServletAdapterSessionTest JettyServletAdapterTest class JettyServletAdapterTest JettyServletAdapterTodoTest class JettyServletAdapterTodoTest Properties \u00b6 Name Summary adapter val adapter: JettyServletAdapter","title":"Home"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/#package-comhexagonkthttpserverjetty","text":"","title":"Package com.hexagonkt.http.server.jetty"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/#types","text":"Name Summary JettyServletAdapter TODO . class JettyServletAdapter : ServerPort JettyServletAdapterBooksTest class JettyServletAdapterBooksTest JettyServletAdapterCookiesTest class JettyServletAdapterCookiesTest JettyServletAdapterCorsTest class JettyServletAdapterCorsTest JettyServletAdapterErrorsTest class JettyServletAdapterErrorsTest JettyServletAdapterFilesTest class JettyServletAdapterFilesTest JettyServletAdapterFiltersTest class JettyServletAdapterFiltersTest JettyServletAdapterGenericTest class JettyServletAdapterGenericTest JettyServletAdapterSamplesTest class JettyServletAdapterSamplesTest JettyServletAdapterSessionTest class JettyServletAdapterSessionTest JettyServletAdapterTest class JettyServletAdapterTest JettyServletAdapterTodoTest class JettyServletAdapterTodoTest","title":"Types"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/#properties","text":"Name Summary adapter val adapter: JettyServletAdapter","title":"Properties"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/adapter/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / adapter adapter \u00b6 val adapter: JettyServletAdapter","title":"Adapter"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/adapter/#adapter","text":"val adapter: JettyServletAdapter","title":"adapter"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapter JettyServletAdapter \u00b6 class JettyServletAdapter : ServerPort TODO . Constructors \u00b6 Name Summary <init> TODO . JettyServletAdapter () Functions \u00b6 Name Summary runtimePort fun runtimePort (): Int shutdown fun shutdown (): Unit started fun started (): Boolean startup fun startup ( server : Server ): Unit","title":"Home"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/#jettyservletadapter","text":"class JettyServletAdapter : ServerPort TODO .","title":"JettyServletAdapter"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/#constructors","text":"Name Summary <init> TODO . JettyServletAdapter ()","title":"Constructors"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/#functions","text":"Name Summary runtimePort fun runtimePort (): Int shutdown fun shutdown (): Unit started fun started (): Boolean startup fun startup ( server : Server ): Unit","title":"Functions"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/-init-/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapter / <init> <init> \u00b6 JettyServletAdapter () TODO .","title":" init "},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/-init-/#init","text":"JettyServletAdapter () TODO .","title":"&lt;init&gt;"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/runtime-port/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapter / runtimePort runtimePort \u00b6 fun runtimePort (): Int","title":"Runtime port"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/runtime-port/#runtimeport","text":"fun runtimePort (): Int","title":"runtimePort"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/shutdown/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapter / shutdown shutdown \u00b6 fun shutdown (): Unit","title":"Shutdown"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/shutdown/#shutdown","text":"fun shutdown (): Unit","title":"shutdown"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/started/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapter / started started \u00b6 fun started (): Boolean","title":"Started"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/started/#started","text":"fun started (): Boolean","title":"started"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/startup/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapter / startup startup \u00b6 fun startup ( server : Server ): Unit","title":"Startup"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter/startup/#startup","text":"fun startup ( server : Server ): Unit","title":"startup"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-books-test/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterBooksTest JettyServletAdapterBooksTest \u00b6 class JettyServletAdapterBooksTest Constructors \u00b6 Name Summary <init> JettyServletAdapterBooksTest ()","title":"Home"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-books-test/#jettyservletadapterbookstest","text":"class JettyServletAdapterBooksTest","title":"JettyServletAdapterBooksTest"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-books-test/#constructors","text":"Name Summary <init> JettyServletAdapterBooksTest ()","title":"Constructors"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-books-test/-init-/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterBooksTest / <init> <init> \u00b6 JettyServletAdapterBooksTest ()","title":" init "},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-books-test/-init-/#init","text":"JettyServletAdapterBooksTest ()","title":"&lt;init&gt;"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-cookies-test/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterCookiesTest JettyServletAdapterCookiesTest \u00b6 class JettyServletAdapterCookiesTest Constructors \u00b6 Name Summary <init> JettyServletAdapterCookiesTest ()","title":"Home"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-cookies-test/#jettyservletadaptercookiestest","text":"class JettyServletAdapterCookiesTest","title":"JettyServletAdapterCookiesTest"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-cookies-test/#constructors","text":"Name Summary <init> JettyServletAdapterCookiesTest ()","title":"Constructors"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-cookies-test/-init-/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterCookiesTest / <init> <init> \u00b6 JettyServletAdapterCookiesTest ()","title":" init "},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-cookies-test/-init-/#init","text":"JettyServletAdapterCookiesTest ()","title":"&lt;init&gt;"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-cors-test/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterCorsTest JettyServletAdapterCorsTest \u00b6 class JettyServletAdapterCorsTest Constructors \u00b6 Name Summary <init> JettyServletAdapterCorsTest ()","title":"Home"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-cors-test/#jettyservletadaptercorstest","text":"class JettyServletAdapterCorsTest","title":"JettyServletAdapterCorsTest"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-cors-test/#constructors","text":"Name Summary <init> JettyServletAdapterCorsTest ()","title":"Constructors"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-cors-test/-init-/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterCorsTest / <init> <init> \u00b6 JettyServletAdapterCorsTest ()","title":" init "},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-cors-test/-init-/#init","text":"JettyServletAdapterCorsTest ()","title":"&lt;init&gt;"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-errors-test/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterErrorsTest JettyServletAdapterErrorsTest \u00b6 class JettyServletAdapterErrorsTest Constructors \u00b6 Name Summary <init> JettyServletAdapterErrorsTest ()","title":"Home"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-errors-test/#jettyservletadaptererrorstest","text":"class JettyServletAdapterErrorsTest","title":"JettyServletAdapterErrorsTest"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-errors-test/#constructors","text":"Name Summary <init> JettyServletAdapterErrorsTest ()","title":"Constructors"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-errors-test/-init-/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterErrorsTest / <init> <init> \u00b6 JettyServletAdapterErrorsTest ()","title":" init "},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-errors-test/-init-/#init","text":"JettyServletAdapterErrorsTest ()","title":"&lt;init&gt;"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-files-test/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterFilesTest JettyServletAdapterFilesTest \u00b6 class JettyServletAdapterFilesTest Constructors \u00b6 Name Summary <init> JettyServletAdapterFilesTest ()","title":"Home"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-files-test/#jettyservletadapterfilestest","text":"class JettyServletAdapterFilesTest","title":"JettyServletAdapterFilesTest"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-files-test/#constructors","text":"Name Summary <init> JettyServletAdapterFilesTest ()","title":"Constructors"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-files-test/-init-/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterFilesTest / <init> <init> \u00b6 JettyServletAdapterFilesTest ()","title":" init "},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-files-test/-init-/#init","text":"JettyServletAdapterFilesTest ()","title":"&lt;init&gt;"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-filters-test/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterFiltersTest JettyServletAdapterFiltersTest \u00b6 class JettyServletAdapterFiltersTest Constructors \u00b6 Name Summary <init> JettyServletAdapterFiltersTest ()","title":"Home"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-filters-test/#jettyservletadapterfilterstest","text":"class JettyServletAdapterFiltersTest","title":"JettyServletAdapterFiltersTest"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-filters-test/#constructors","text":"Name Summary <init> JettyServletAdapterFiltersTest ()","title":"Constructors"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-filters-test/-init-/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterFiltersTest / <init> <init> \u00b6 JettyServletAdapterFiltersTest ()","title":" init "},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-filters-test/-init-/#init","text":"JettyServletAdapterFiltersTest ()","title":"&lt;init&gt;"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-generic-test/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterGenericTest JettyServletAdapterGenericTest \u00b6 class JettyServletAdapterGenericTest Constructors \u00b6 Name Summary <init> JettyServletAdapterGenericTest ()","title":"Home"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-generic-test/#jettyservletadaptergenerictest","text":"class JettyServletAdapterGenericTest","title":"JettyServletAdapterGenericTest"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-generic-test/#constructors","text":"Name Summary <init> JettyServletAdapterGenericTest ()","title":"Constructors"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-generic-test/-init-/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterGenericTest / <init> <init> \u00b6 JettyServletAdapterGenericTest ()","title":" init "},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-generic-test/-init-/#init","text":"JettyServletAdapterGenericTest ()","title":"&lt;init&gt;"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-samples-test/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterSamplesTest JettyServletAdapterSamplesTest \u00b6 class JettyServletAdapterSamplesTest Constructors \u00b6 Name Summary <init> JettyServletAdapterSamplesTest ()","title":"Home"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-samples-test/#jettyservletadaptersamplestest","text":"class JettyServletAdapterSamplesTest","title":"JettyServletAdapterSamplesTest"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-samples-test/#constructors","text":"Name Summary <init> JettyServletAdapterSamplesTest ()","title":"Constructors"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-samples-test/-init-/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterSamplesTest / <init> <init> \u00b6 JettyServletAdapterSamplesTest ()","title":" init "},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-samples-test/-init-/#init","text":"JettyServletAdapterSamplesTest ()","title":"&lt;init&gt;"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-session-test/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterSessionTest JettyServletAdapterSessionTest \u00b6 class JettyServletAdapterSessionTest Constructors \u00b6 Name Summary <init> JettyServletAdapterSessionTest ()","title":"Home"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-session-test/#jettyservletadaptersessiontest","text":"class JettyServletAdapterSessionTest","title":"JettyServletAdapterSessionTest"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-session-test/#constructors","text":"Name Summary <init> JettyServletAdapterSessionTest ()","title":"Constructors"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-session-test/-init-/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterSessionTest / <init> <init> \u00b6 JettyServletAdapterSessionTest ()","title":" init "},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-session-test/-init-/#init","text":"JettyServletAdapterSessionTest ()","title":"&lt;init&gt;"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-test/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterTest JettyServletAdapterTest \u00b6 class JettyServletAdapterTest Constructors \u00b6 Name Summary <init> JettyServletAdapterTest () Functions \u00b6 Name Summary Getting the runtime port on stopped instance raises an exception fun Getting the runtime port on stopped instance raises an exception (): Unit Stop method works if called before running fun Stop method works if called before running () : Unit","title":"Home"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-test/#jettyservletadaptertest","text":"class JettyServletAdapterTest","title":"JettyServletAdapterTest"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-test/#constructors","text":"Name Summary <init> JettyServletAdapterTest ()","title":"Constructors"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-test/#functions","text":"Name Summary Getting the runtime port on stopped instance raises an exception fun Getting the runtime port on stopped instance raises an exception (): Unit Stop method works if called before running fun Stop method works if called before running () : Unit","title":"Functions"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-test/-getting the runtime port on stopped instance raises an exception/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterTest / Getting the runtime port on stopped instance raises an exception Getting the runtime port on stopped instance raises an exception \u00b6 fun Getting the runtime port on stopped instance raises an exception (): Unit","title":" getting the runtime port on stopped instance raises an exception"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-test/-getting the runtime port on stopped instance raises an exception/#getting-the-runtime-port-on-stopped-instance-raises-an-exception","text":"fun Getting the runtime port on stopped instance raises an exception (): Unit","title":"Getting the runtime port on stopped instance raises an exception"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-test/-init-/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterTest / <init> <init> \u00b6 JettyServletAdapterTest ()","title":" init "},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-test/-init-/#init","text":"JettyServletAdapterTest ()","title":"&lt;init&gt;"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-test/-stop method works if called before running/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterTest / Stop method works if called before running Stop method works if called before running \u00b6 fun Stop method works if called before running () : Unit","title":" stop method works if called before running"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-test/-stop method works if called before running/#stop-method-works-if-called-before-running","text":"fun Stop method works if called before running () : Unit","title":"Stop method works if called before running"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-todo-test/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterTodoTest JettyServletAdapterTodoTest \u00b6 class JettyServletAdapterTodoTest Constructors \u00b6 Name Summary <init> JettyServletAdapterTodoTest ()","title":"Home"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-todo-test/#jettyservletadaptertodotest","text":"class JettyServletAdapterTodoTest","title":"JettyServletAdapterTodoTest"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-todo-test/#constructors","text":"Name Summary <init> JettyServletAdapterTodoTest ()","title":"Constructors"},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-todo-test/-init-/","text":"http_server_jetty / com.hexagonkt.http.server.jetty / JettyServletAdapterTodoTest / <init> <init> \u00b6 JettyServletAdapterTodoTest ()","title":" init "},{"location":"http_server_jetty/com.hexagonkt.http.server.jetty/-jetty-servlet-adapter-todo-test/-init-/#init","text":"JettyServletAdapterTodoTest ()","title":"&lt;init&gt;"},{"location":"http_server_servlet/","text":"http_server_servlet TODO Packages \u00b6 Name Summary com.hexagonkt.http.server.servlet TODO Index \u00b6 All Types","title":"Servlet"},{"location":"http_server_servlet/#packages","text":"Name Summary com.hexagonkt.http.server.servlet TODO","title":"Packages"},{"location":"http_server_servlet/#index","text":"All Types","title":"Index"},{"location":"http_server_servlet/alltypes/","text":"TODO All Types \u00b6 Name Summary com.hexagonkt.http.server.servlet.RequestTest \u00b6 | com.hexagonkt.http.server.servlet.ServletFilter \u00b6 | com.hexagonkt.http.server.servlet.ServletServer \u00b6 Not a standard engine as it is not started/stopped TODO Take care of wildcards (review servlet specs) to group filters TODO Take care of wildcards (review servlet specs) to group routes in servlets TODO Receive router in parameter (easier to use in Servlet containers) | com.hexagonkt.http.server.servlet.ServletServerTest \u00b6","title":"Home"},{"location":"http_server_servlet/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"http_server_servlet/alltypes/#comhexagonkthttpserverservletrequesttest","text":"|","title":"com.hexagonkt.http.server.servlet.RequestTest"},{"location":"http_server_servlet/alltypes/#comhexagonkthttpserverservletservletfilter","text":"|","title":"com.hexagonkt.http.server.servlet.ServletFilter"},{"location":"http_server_servlet/alltypes/#comhexagonkthttpserverservletservletserver","text":"Not a standard engine as it is not started/stopped TODO Take care of wildcards (review servlet specs) to group filters TODO Take care of wildcards (review servlet specs) to group routes in servlets TODO Receive router in parameter (easier to use in Servlet containers) |","title":"com.hexagonkt.http.server.servlet.ServletServer"},{"location":"http_server_servlet/alltypes/#comhexagonkthttpserverservletservletservertest","text":"","title":"com.hexagonkt.http.server.servlet.ServletServerTest"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/","text":"http_server_servlet / com.hexagonkt.http.server.servlet Package com.hexagonkt.http.server.servlet \u00b6 TODO Types \u00b6 Name Summary RequestTest class RequestTest ServletFilter class ServletFilter : Filter ServletServer Not a standard engine as it is not started/stopped TODO Take care of wildcards (review servlet specs) to group filters TODO Take care of wildcards (review servlet specs) to group routes in servlets TODO Receive router in parameter (easier to use in Servlet containers) abstract class ServletServer : ServletContextListener ServletServerTest class ServletServerTest","title":"Home"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/#package-comhexagonkthttpserverservlet","text":"TODO","title":"Package com.hexagonkt.http.server.servlet"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/#types","text":"Name Summary RequestTest class RequestTest ServletFilter class ServletFilter : Filter ServletServer Not a standard engine as it is not started/stopped TODO Take care of wildcards (review servlet specs) to group filters TODO Take care of wildcards (review servlet specs) to group routes in servlets TODO Receive router in parameter (easier to use in Servlet containers) abstract class ServletServer : ServletContextListener ServletServerTest class ServletServerTest","title":"Types"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-request-test/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / RequestTest RequestTest \u00b6 class RequestTest Constructors \u00b6 Name Summary <init> RequestTest () Functions \u00b6 Name Summary Request path is obtained based on servlet path fun Request path is obtained based on servlet path (): Unit Request path parameters are returned properly fun Request path parameters are returned properly (): Unit Request without action path returns empty path parameters fun Request without action path returns empty path parameters (): Unit","title":"Home"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-request-test/#requesttest","text":"class RequestTest","title":"RequestTest"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-request-test/#constructors","text":"Name Summary <init> RequestTest ()","title":"Constructors"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-request-test/#functions","text":"Name Summary Request path is obtained based on servlet path fun Request path is obtained based on servlet path (): Unit Request path parameters are returned properly fun Request path parameters are returned properly (): Unit Request without action path returns empty path parameters fun Request without action path returns empty path parameters (): Unit","title":"Functions"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-request-test/-init-/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / RequestTest / <init> <init> \u00b6 RequestTest ()","title":" init "},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-request-test/-init-/#init","text":"RequestTest ()","title":"&lt;init&gt;"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-request-test/-request path is obtained based on servlet path/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / RequestTest / Request path is obtained based on servlet path Request path is obtained based on servlet path \u00b6 fun Request path is obtained based on servlet path (): Unit","title":" request path is obtained based on servlet path"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-request-test/-request path is obtained based on servlet path/#request-path-is-obtained-based-on-servlet-path","text":"fun Request path is obtained based on servlet path (): Unit","title":"Request path is obtained based on servlet path"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-request-test/-request path parameters are returned properly/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / RequestTest / Request path parameters are returned properly Request path parameters are returned properly \u00b6 fun Request path parameters are returned properly (): Unit","title":" request path parameters are returned properly"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-request-test/-request path parameters are returned properly/#request-path-parameters-are-returned-properly","text":"fun Request path parameters are returned properly (): Unit","title":"Request path parameters are returned properly"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-request-test/-request without action path returns empty path parameters/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / RequestTest / Request without action path returns empty path parameters Request without action path returns empty path parameters \u00b6 fun Request without action path returns empty path parameters (): Unit","title":" request without action path returns empty path parameters"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-request-test/-request without action path returns empty path parameters/#request-without-action-path-returns-empty-path-parameters","text":"fun Request without action path returns empty path parameters (): Unit","title":"Request without action path returns empty path parameters"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletFilter ServletFilter \u00b6 class ServletFilter : Filter Constructors \u00b6 Name Summary <init> ServletFilter ( router : List < RequestHandler > ) Functions \u00b6 Name Summary destroy fun destroy (): Unit doFilter fun doFilter ( request : ServletRequest , response : ServletResponse , chain : FilterChain ): Unit init fun init ( filterConfig : FilterConfig ): Unit","title":"Home"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/#servletfilter","text":"class ServletFilter : Filter","title":"ServletFilter"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/#constructors","text":"Name Summary <init> ServletFilter ( router : List < RequestHandler > )","title":"Constructors"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/#functions","text":"Name Summary destroy fun destroy (): Unit doFilter fun doFilter ( request : ServletRequest , response : ServletResponse , chain : FilterChain ): Unit init fun init ( filterConfig : FilterConfig ): Unit","title":"Functions"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/-init-/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletFilter / <init> <init> \u00b6 ServletFilter ( router : List < RequestHandler > )","title":" init "},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/-init-/#init","text":"ServletFilter ( router : List < RequestHandler > )","title":"&lt;init&gt;"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/destroy/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletFilter / destroy destroy \u00b6 fun destroy (): Unit","title":"Destroy"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/destroy/#destroy","text":"fun destroy (): Unit","title":"destroy"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/do-filter/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletFilter / doFilter doFilter \u00b6 fun doFilter ( request : ServletRequest , response : ServletResponse , chain : FilterChain ): Unit","title":"Do filter"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/do-filter/#dofilter","text":"fun doFilter ( request : ServletRequest , response : ServletResponse , chain : FilterChain ): Unit","title":"doFilter"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/init/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletFilter / init init \u00b6 fun init ( filterConfig : FilterConfig ): Unit","title":"Init"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-filter/init/#init","text":"fun init ( filterConfig : FilterConfig ): Unit","title":"init"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletServer ServletServer \u00b6 abstract class ServletServer : ServletContextListener Not a standard engine as it is not started/stopped TODO Take care of wildcards (review servlet specs) to group filters TODO Take care of wildcards (review servlet specs) to group routes in servlets TODO Receive router in parameter (easier to use in Servlet containers) Constructors \u00b6 Name Summary <init> Not a standard engine as it is not started/stopped TODO Take care of wildcards (review servlet specs) to group filters TODO Take care of wildcards (review servlet specs) to group routes in servlets TODO Receive router in parameter (easier to use in Servlet containers) ServletServer ( router : Router = Router (), async : Boolean = false ) Properties \u00b6 Name Summary serverRouter val serverRouter: Router Functions \u00b6 Name Summary contextDestroyed open fun contextDestroyed ( sce : ServletContextEvent ? ): Unit contextInitialized open fun contextInitialized ( sce : ServletContextEvent ): Unit createRouter open fun createRouter (): Router","title":"Home"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/#servletserver","text":"abstract class ServletServer : ServletContextListener Not a standard engine as it is not started/stopped TODO Take care of wildcards (review servlet specs) to group filters TODO Take care of wildcards (review servlet specs) to group routes in servlets TODO Receive router in parameter (easier to use in Servlet containers)","title":"ServletServer"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/#constructors","text":"Name Summary <init> Not a standard engine as it is not started/stopped TODO Take care of wildcards (review servlet specs) to group filters TODO Take care of wildcards (review servlet specs) to group routes in servlets TODO Receive router in parameter (easier to use in Servlet containers) ServletServer ( router : Router = Router (), async : Boolean = false )","title":"Constructors"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/#properties","text":"Name Summary serverRouter val serverRouter: Router","title":"Properties"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/#functions","text":"Name Summary contextDestroyed open fun contextDestroyed ( sce : ServletContextEvent ? ): Unit contextInitialized open fun contextInitialized ( sce : ServletContextEvent ): Unit createRouter open fun createRouter (): Router","title":"Functions"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/-init-/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletServer / <init> <init> \u00b6 ServletServer ( router : Router = Router (), async : Boolean = false ) Not a standard engine as it is not started/stopped TODO Take care of wildcards (review servlet specs) to group filters TODO Take care of wildcards (review servlet specs) to group routes in servlets TODO Receive router in parameter (easier to use in Servlet containers)","title":" init "},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/-init-/#init","text":"ServletServer ( router : Router = Router (), async : Boolean = false ) Not a standard engine as it is not started/stopped TODO Take care of wildcards (review servlet specs) to group filters TODO Take care of wildcards (review servlet specs) to group routes in servlets TODO Receive router in parameter (easier to use in Servlet containers)","title":"&lt;init&gt;"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/context-destroyed/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletServer / contextDestroyed contextDestroyed \u00b6 open fun contextDestroyed ( sce : ServletContextEvent ? ): Unit","title":"Context destroyed"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/context-destroyed/#contextdestroyed","text":"open fun contextDestroyed ( sce : ServletContextEvent ? ): Unit","title":"contextDestroyed"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/context-initialized/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletServer / contextInitialized contextInitialized \u00b6 open fun contextInitialized ( sce : ServletContextEvent ): Unit","title":"Context initialized"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/context-initialized/#contextinitialized","text":"open fun contextInitialized ( sce : ServletContextEvent ): Unit","title":"contextInitialized"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/create-router/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletServer / createRouter createRouter \u00b6 open fun createRouter (): Router","title":"Create router"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/create-router/#createrouter","text":"open fun createRouter (): Router","title":"createRouter"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/server-router/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletServer / serverRouter serverRouter \u00b6 val serverRouter: Router","title":"Server router"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server/server-router/#serverrouter","text":"val serverRouter: Router","title":"serverRouter"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletServerTest ServletServerTest \u00b6 class ServletServerTest Types \u00b6 Name Summary WebAppServer class WebAppServer : ServletServer Constructors \u00b6 Name Summary <init> ServletServerTest () Functions \u00b6 Name Summary Invalid types in filter calls raise an exception fun Invalid types in filter calls raise an exception (): Unit Run server fun Run server (): Unit Servlet server starts fun Servlet server starts (): Unit shutdown fun shutdown (): Unit","title":"Home"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/#servletservertest","text":"class ServletServerTest","title":"ServletServerTest"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/#types","text":"Name Summary WebAppServer class WebAppServer : ServletServer","title":"Types"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/#constructors","text":"Name Summary <init> ServletServerTest ()","title":"Constructors"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/#functions","text":"Name Summary Invalid types in filter calls raise an exception fun Invalid types in filter calls raise an exception (): Unit Run server fun Run server (): Unit Servlet server starts fun Servlet server starts (): Unit shutdown fun shutdown (): Unit","title":"Functions"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/-init-/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletServerTest / <init> <init> \u00b6 ServletServerTest ()","title":" init "},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/-init-/#init","text":"ServletServerTest ()","title":"&lt;init&gt;"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/-invalid types in filter calls raise an exception/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletServerTest / Invalid types in filter calls raise an exception Invalid types in filter calls raise an exception \u00b6 fun Invalid types in filter calls raise an exception (): Unit","title":" invalid types in filter calls raise an exception"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/-invalid types in filter calls raise an exception/#invalid-types-in-filter-calls-raise-an-exception","text":"fun Invalid types in filter calls raise an exception (): Unit","title":"Invalid types in filter calls raise an exception"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/-run server/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletServerTest / Run server Run server \u00b6 fun Run server (): Unit","title":" run server"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/-run server/#run-server","text":"fun Run server (): Unit","title":"Run server"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/-servlet server starts/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletServerTest / Servlet server starts Servlet server starts \u00b6 fun Servlet server starts (): Unit","title":" servlet server starts"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/-servlet server starts/#servlet-server-starts","text":"fun Servlet server starts (): Unit","title":"Servlet server starts"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/shutdown/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletServerTest / shutdown shutdown \u00b6 fun shutdown (): Unit","title":"Shutdown"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/shutdown/#shutdown","text":"fun shutdown (): Unit","title":"shutdown"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/-web-app-server/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletServerTest / WebAppServer WebAppServer \u00b6 @WebListener class WebAppServer : ServletServer Constructors \u00b6 Name Summary <init> WebAppServer () Functions \u00b6 Name Summary createRouter fun createRouter (): Router","title":"Home"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/-web-app-server/#webappserver","text":"@WebListener class WebAppServer : ServletServer","title":"WebAppServer"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/-web-app-server/#constructors","text":"Name Summary <init> WebAppServer ()","title":"Constructors"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/-web-app-server/#functions","text":"Name Summary createRouter fun createRouter (): Router","title":"Functions"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/-web-app-server/-init-/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletServerTest / WebAppServer / <init> <init> \u00b6 WebAppServer ()","title":" init "},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/-web-app-server/-init-/#init","text":"WebAppServer ()","title":"&lt;init&gt;"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/-web-app-server/create-router/","text":"http_server_servlet / com.hexagonkt.http.server.servlet / ServletServerTest / WebAppServer / createRouter createRouter \u00b6 fun createRouter (): Router","title":"Create router"},{"location":"http_server_servlet/com.hexagonkt.http.server.servlet/-servlet-server-test/-web-app-server/create-router/#createrouter","text":"fun createRouter (): Router","title":"createRouter"},{"location":"messaging_rabbitmq/","text":"messaging_rabbitmq Hexagon's event bus implementation based in RabbitMQ. Packages \u00b6 Name Summary com.hexagonkt.messaging.rabbitmq Contains a RabbitMQ Client and a Hexagon messaging implementation backed by it. Index \u00b6 All Types","title":"RabbitMQ"},{"location":"messaging_rabbitmq/#packages","text":"Name Summary com.hexagonkt.messaging.rabbitmq Contains a RabbitMQ Client and a Hexagon messaging implementation backed by it.","title":"Packages"},{"location":"messaging_rabbitmq/#index","text":"All Types","title":"Index"},{"location":"messaging_rabbitmq/alltypes/","text":"Hexagon's event bus implementation based in RabbitMQ. All Types \u00b6 Name Summary com.hexagonkt.messaging.rabbitmq.RabbitConnectionTest \u00b6 | com.hexagonkt.messaging.rabbitmq.RabbitMqAdapter \u00b6 TODO . | com.hexagonkt.messaging.rabbitmq.RabbitMqAdapterTest \u00b6 | com.hexagonkt.messaging.rabbitmq.RabbitMqClient \u00b6 Rabbit client. | com.hexagonkt.messaging.rabbitmq.RabbitMqClientTest \u00b6 | com.hexagonkt.messaging.rabbitmq.RabbitTest \u00b6","title":"Home"},{"location":"messaging_rabbitmq/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"messaging_rabbitmq/alltypes/#comhexagonktmessagingrabbitmqrabbitconnectiontest","text":"|","title":"com.hexagonkt.messaging.rabbitmq.RabbitConnectionTest"},{"location":"messaging_rabbitmq/alltypes/#comhexagonktmessagingrabbitmqrabbitmqadapter","text":"TODO . |","title":"com.hexagonkt.messaging.rabbitmq.RabbitMqAdapter"},{"location":"messaging_rabbitmq/alltypes/#comhexagonktmessagingrabbitmqrabbitmqadaptertest","text":"|","title":"com.hexagonkt.messaging.rabbitmq.RabbitMqAdapterTest"},{"location":"messaging_rabbitmq/alltypes/#comhexagonktmessagingrabbitmqrabbitmqclient","text":"Rabbit client. |","title":"com.hexagonkt.messaging.rabbitmq.RabbitMqClient"},{"location":"messaging_rabbitmq/alltypes/#comhexagonktmessagingrabbitmqrabbitmqclienttest","text":"|","title":"com.hexagonkt.messaging.rabbitmq.RabbitMqClientTest"},{"location":"messaging_rabbitmq/alltypes/#comhexagonktmessagingrabbitmqrabbittest","text":"","title":"com.hexagonkt.messaging.rabbitmq.RabbitTest"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq Package com.hexagonkt.messaging.rabbitmq \u00b6 Contains a RabbitMQ Client and a Hexagon messaging implementation backed by it. Types \u00b6 Name Summary RabbitConnectionTest class RabbitConnectionTest RabbitMqAdapter TODO . class RabbitMqAdapter : MessagingPort RabbitMqAdapterTest class RabbitMqAdapterTest RabbitMqClient Rabbit client. class RabbitMqClient : Closeable RabbitMqClientTest class RabbitMqClientTest RabbitTest class RabbitTest","title":"Home"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/#package-comhexagonktmessagingrabbitmq","text":"Contains a RabbitMQ Client and a Hexagon messaging implementation backed by it.","title":"Package com.hexagonkt.messaging.rabbitmq"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/#types","text":"Name Summary RabbitConnectionTest class RabbitConnectionTest RabbitMqAdapter TODO . class RabbitMqAdapter : MessagingPort RabbitMqAdapterTest class RabbitMqAdapterTest RabbitMqClient Rabbit client. class RabbitMqClient : Closeable RabbitMqClientTest class RabbitMqClientTest RabbitTest class RabbitTest","title":"Types"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-connection-test/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitConnectionTest RabbitConnectionTest \u00b6 class RabbitConnectionTest Constructors \u00b6 Name Summary <init> RabbitConnectionTest () Functions \u00b6 Name Summary call return expected results fun call return expected results () : Unit deleteTestQueue fun deleteTestQueue (): Unit startConsumer fun startConsumer (): Unit","title":"Home"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-connection-test/#rabbitconnectiontest","text":"class RabbitConnectionTest","title":"RabbitConnectionTest"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-connection-test/#constructors","text":"Name Summary <init> RabbitConnectionTest ()","title":"Constructors"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-connection-test/#functions","text":"Name Summary call return expected results fun call return expected results () : Unit deleteTestQueue fun deleteTestQueue (): Unit startConsumer fun startConsumer (): Unit","title":"Functions"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-connection-test/-init-/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitConnectionTest / <init> <init> \u00b6 RabbitConnectionTest ()","title":" init "},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-connection-test/-init-/#init","text":"RabbitConnectionTest ()","title":"&lt;init&gt;"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-connection-test/call return expected results/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitConnectionTest / call return expected results call return expected results \u00b6 fun call return expected results () : Unit","title":"Call return expected results"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-connection-test/call return expected results/#call-return-expected-results","text":"fun call return expected results () : Unit","title":"call return expected results"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-connection-test/delete-test-queue/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitConnectionTest / deleteTestQueue deleteTestQueue \u00b6 fun deleteTestQueue (): Unit","title":"Delete test queue"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-connection-test/delete-test-queue/#deletetestqueue","text":"fun deleteTestQueue (): Unit","title":"deleteTestQueue"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-connection-test/start-consumer/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitConnectionTest / startConsumer startConsumer \u00b6 fun startConsumer (): Unit","title":"Start consumer"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-connection-test/start-consumer/#startconsumer","text":"fun startConsumer (): Unit","title":"startConsumer"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqAdapter RabbitMqAdapter \u00b6 class RabbitMqAdapter : MessagingPort TODO . Constructors \u00b6 Name Summary <init> TODO . RabbitMqAdapter () Functions \u00b6 Name Summary consume fun < T : Message > consume ( type : KClass < T > , address : String , consumer : ( T ) -> Unit ): Unit publish fun publish ( message : Message , address : String ): Unit","title":"Home"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter/#rabbitmqadapter","text":"class RabbitMqAdapter : MessagingPort TODO .","title":"RabbitMqAdapter"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter/#constructors","text":"Name Summary <init> TODO . RabbitMqAdapter ()","title":"Constructors"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter/#functions","text":"Name Summary consume fun < T : Message > consume ( type : KClass < T > , address : String , consumer : ( T ) -> Unit ): Unit publish fun publish ( message : Message , address : String ): Unit","title":"Functions"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter/-init-/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqAdapter / <init> <init> \u00b6 RabbitMqAdapter () TODO .","title":" init "},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter/-init-/#init","text":"RabbitMqAdapter () TODO .","title":"&lt;init&gt;"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter/consume/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqAdapter / consume consume \u00b6 fun < T : Message > consume ( type : KClass < T > , address : String , consumer : ( T ) -> Unit ): Unit","title":"Consume"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter/consume/#consume","text":"fun < T : Message > consume ( type : KClass < T > , address : String , consumer : ( T ) -> Unit ): Unit","title":"consume"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter/publish/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqAdapter / publish publish \u00b6 fun publish ( message : Message , address : String ): Unit","title":"Publish"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter/publish/#publish","text":"fun publish ( message : Message , address : String ): Unit","title":"publish"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter-test/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqAdapterTest RabbitMqAdapterTest \u00b6 class RabbitMqAdapterTest Constructors \u00b6 Name Summary <init> RabbitMqAdapterTest () Functions \u00b6 Name Summary event manager TODO Add asserts fun event manager (): Unit","title":"Home"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter-test/#rabbitmqadaptertest","text":"class RabbitMqAdapterTest","title":"RabbitMqAdapterTest"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter-test/#constructors","text":"Name Summary <init> RabbitMqAdapterTest ()","title":"Constructors"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter-test/#functions","text":"Name Summary event manager TODO Add asserts fun event manager (): Unit","title":"Functions"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter-test/-init-/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqAdapterTest / <init> <init> \u00b6 RabbitMqAdapterTest ()","title":" init "},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter-test/-init-/#init","text":"RabbitMqAdapterTest ()","title":"&lt;init&gt;"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter-test/event manager/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqAdapterTest / event manager event manager \u00b6 fun event manager (): Unit TODO Add asserts","title":"Event manager"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-adapter-test/event manager/#event-manager","text":"fun event manager (): Unit TODO Add asserts","title":"event manager"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClient RabbitMqClient \u00b6 class RabbitMqClient : Closeable Rabbit client. TODO Review if channel handling is still needed in Java 4.1.x version TODO Add metrics TODO Ordered shutdown Constructors \u00b6 Name Summary <init> . RabbitMqClient ( uri : URI ) Rabbit client. RabbitMqClient ( connectionFactory : ConnectionFactory , poolSize : Int = getRuntime (). availableProcessors ()) Properties \u00b6 Name Summary connected . val connected: Boolean Functions \u00b6 Name Summary bindExchange . fun bindExchange ( exchange : String , exchangeType : String , routingKey : String , queue : String ): Unit call fun call ( requestQueue : String , message : String ): String close fun close (): Unit consume . fun < T : Any > consume ( exchange : String , routingKey : String , type : KClass < T > , handler : ( T ) -> Unit ): Unit fun < T : Any , R : Any > consume ( queueName : String , type : KClass < T > , handler : ( T ) -> R ): Unit declareQueue . fun declareQueue ( name : String ): Unit deleteQueue . fun deleteQueue ( name : String ): Unit publish fun publish ( queue : String , message : String , correlationId : String ? = null ): Unit fun publish ( exchange : String , routingKey : String , message : String , correlationId : String ? = null ): Unit","title":"Home"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/#rabbitmqclient","text":"class RabbitMqClient : Closeable Rabbit client. TODO Review if channel handling is still needed in Java 4.1.x version TODO Add metrics TODO Ordered shutdown","title":"RabbitMqClient"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/#constructors","text":"Name Summary <init> . RabbitMqClient ( uri : URI ) Rabbit client. RabbitMqClient ( connectionFactory : ConnectionFactory , poolSize : Int = getRuntime (). availableProcessors ())","title":"Constructors"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/#properties","text":"Name Summary connected . val connected: Boolean","title":"Properties"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/#functions","text":"Name Summary bindExchange . fun bindExchange ( exchange : String , exchangeType : String , routingKey : String , queue : String ): Unit call fun call ( requestQueue : String , message : String ): String close fun close (): Unit consume . fun < T : Any > consume ( exchange : String , routingKey : String , type : KClass < T > , handler : ( T ) -> Unit ): Unit fun < T : Any , R : Any > consume ( queueName : String , type : KClass < T > , handler : ( T ) -> R ): Unit declareQueue . fun declareQueue ( name : String ): Unit deleteQueue . fun deleteQueue ( name : String ): Unit publish fun publish ( queue : String , message : String , correlationId : String ? = null ): Unit fun publish ( exchange : String , routingKey : String , message : String , correlationId : String ? = null ): Unit","title":"Functions"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/-init-/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClient / <init> <init> \u00b6 RabbitMqClient ( uri : URI ) . RabbitMqClient ( connectionFactory : ConnectionFactory , poolSize : Int = getRuntime (). availableProcessors ()) Rabbit client. TODO Review if channel handling is still needed in Java 4.1.x version TODO Add metrics TODO Ordered shutdown","title":" init "},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/-init-/#init","text":"RabbitMqClient ( uri : URI ) . RabbitMqClient ( connectionFactory : ConnectionFactory , poolSize : Int = getRuntime (). availableProcessors ()) Rabbit client. TODO Review if channel handling is still needed in Java 4.1.x version TODO Add metrics TODO Ordered shutdown","title":"&lt;init&gt;"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/bind-exchange/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClient / bindExchange bindExchange \u00b6 fun bindExchange ( exchange : String , exchangeType : String , routingKey : String , queue : String ): Unit .","title":"Bind exchange"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/bind-exchange/#bindexchange","text":"fun bindExchange ( exchange : String , exchangeType : String , routingKey : String , queue : String ): Unit .","title":"bindExchange"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/call/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClient / call call \u00b6 fun call ( requestQueue : String , message : String ): String","title":"Call"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/call/#call","text":"fun call ( requestQueue : String , message : String ): String","title":"call"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/close/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClient / close close \u00b6 fun close (): Unit See Also Closeable.close","title":"Close"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/close/#close","text":"fun close (): Unit See Also Closeable.close","title":"close"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/connected/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClient / connected connected \u00b6 val connected: Boolean .","title":"Connected"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/connected/#connected","text":"val connected: Boolean .","title":"connected"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/consume/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClient / consume consume \u00b6 fun < T : Any > consume ( exchange : String , routingKey : String , type : KClass < T > , handler : ( T ) -> Unit ): Unit fun < T : Any , R : Any > consume ( queueName : String , type : KClass < T > , handler : ( T ) -> R ): Unit .","title":"Consume"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/consume/#consume","text":"fun < T : Any > consume ( exchange : String , routingKey : String , type : KClass < T > , handler : ( T ) -> Unit ): Unit fun < T : Any , R : Any > consume ( queueName : String , type : KClass < T > , handler : ( T ) -> R ): Unit .","title":"consume"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/declare-queue/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClient / declareQueue declareQueue \u00b6 fun declareQueue ( name : String ): Unit .","title":"Declare queue"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/declare-queue/#declarequeue","text":"fun declareQueue ( name : String ): Unit .","title":"declareQueue"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/delete-queue/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClient / deleteQueue deleteQueue \u00b6 fun deleteQueue ( name : String ): Unit .","title":"Delete queue"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/delete-queue/#deletequeue","text":"fun deleteQueue ( name : String ): Unit .","title":"deleteQueue"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/publish/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClient / publish publish \u00b6 fun publish ( queue : String , message : String , correlationId : String ? = null ): Unit fun publish ( exchange : String , routingKey : String , message : String , correlationId : String ? = null ): Unit","title":"Publish"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client/publish/#publish","text":"fun publish ( queue : String , message : String , correlationId : String ? = null ): Unit fun publish ( exchange : String , routingKey : String , message : String , correlationId : String ? = null ): Unit","title":"publish"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClientTest RabbitMqClientTest \u00b6 class RabbitMqClientTest Constructors \u00b6 Name Summary <init> RabbitMqClientTest () Functions \u00b6 Name Summary Consumers handle no reply messages fun Consumers handle no reply messages (): Unit Consumers handle numbers properly fun Consumers handle numbers properly (): Unit Create a connection factory with all parameters succeed fun Create a connection factory with all parameters succeed (): Unit Create a connection factory with empty parameters succeed fun Create a connection factory with empty parameters succeed (): Unit Create a connection factory with empty URI fails fun Create a connection factory with empty URI fails (): Unit Create a connection factory with invalid URI fails fun Create a connection factory with invalid URI fails (): Unit Create a connection factory with one parameter succeed fun Create a connection factory with one parameter succeed (): Unit Create a connection factory with two parameter succeed fun Create a connection factory with two parameter succeed (): Unit Create a connection factory without parameters succeed fun Create a connection factory without parameters succeed (): Unit Rabbit client disconnects properly fun Rabbit client disconnects properly (): Unit","title":"Home"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/#rabbitmqclienttest","text":"class RabbitMqClientTest","title":"RabbitMqClientTest"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/#constructors","text":"Name Summary <init> RabbitMqClientTest ()","title":"Constructors"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/#functions","text":"Name Summary Consumers handle no reply messages fun Consumers handle no reply messages (): Unit Consumers handle numbers properly fun Consumers handle numbers properly (): Unit Create a connection factory with all parameters succeed fun Create a connection factory with all parameters succeed (): Unit Create a connection factory with empty parameters succeed fun Create a connection factory with empty parameters succeed (): Unit Create a connection factory with empty URI fails fun Create a connection factory with empty URI fails (): Unit Create a connection factory with invalid URI fails fun Create a connection factory with invalid URI fails (): Unit Create a connection factory with one parameter succeed fun Create a connection factory with one parameter succeed (): Unit Create a connection factory with two parameter succeed fun Create a connection factory with two parameter succeed (): Unit Create a connection factory without parameters succeed fun Create a connection factory without parameters succeed (): Unit Rabbit client disconnects properly fun Rabbit client disconnects properly (): Unit","title":"Functions"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-consumers handle no reply messages/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClientTest / Consumers handle no reply messages Consumers handle no reply messages \u00b6 fun Consumers handle no reply messages (): Unit","title":" consumers handle no reply messages"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-consumers handle no reply messages/#consumers-handle-no-reply-messages","text":"fun Consumers handle no reply messages (): Unit","title":"Consumers handle no reply messages"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-consumers handle numbers properly/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClientTest / Consumers handle numbers properly Consumers handle numbers properly \u00b6 fun Consumers handle numbers properly (): Unit","title":" consumers handle numbers properly"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-consumers handle numbers properly/#consumers-handle-numbers-properly","text":"fun Consumers handle numbers properly (): Unit","title":"Consumers handle numbers properly"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-create a connection factory with all parameters succeed/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClientTest / Create a connection factory with all parameters succeed Create a connection factory with all parameters succeed \u00b6 fun Create a connection factory with all parameters succeed (): Unit","title":" create a connection factory with all parameters succeed"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-create a connection factory with all parameters succeed/#create-a-connection-factory-with-all-parameters-succeed","text":"fun Create a connection factory with all parameters succeed (): Unit","title":"Create a connection factory with all parameters succeed"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-create a connection factory with empty -u-r-i fails/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClientTest / Create a connection factory with empty URI fails Create a connection factory with empty URI fails \u00b6 fun Create a connection factory with empty URI fails (): Unit","title":" create a connection factory with empty  u r i fails"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-create a connection factory with empty -u-r-i fails/#create-a-connection-factory-with-empty-uri-fails","text":"fun Create a connection factory with empty URI fails (): Unit","title":"Create a connection factory with empty URI fails"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-create a connection factory with empty parameters succeed/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClientTest / Create a connection factory with empty parameters succeed Create a connection factory with empty parameters succeed \u00b6 fun Create a connection factory with empty parameters succeed (): Unit","title":" create a connection factory with empty parameters succeed"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-create a connection factory with empty parameters succeed/#create-a-connection-factory-with-empty-parameters-succeed","text":"fun Create a connection factory with empty parameters succeed (): Unit","title":"Create a connection factory with empty parameters succeed"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-create a connection factory with invalid -u-r-i fails/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClientTest / Create a connection factory with invalid URI fails Create a connection factory with invalid URI fails \u00b6 fun Create a connection factory with invalid URI fails (): Unit","title":" create a connection factory with invalid  u r i fails"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-create a connection factory with invalid -u-r-i fails/#create-a-connection-factory-with-invalid-uri-fails","text":"fun Create a connection factory with invalid URI fails (): Unit","title":"Create a connection factory with invalid URI fails"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-create a connection factory with one parameter succeed/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClientTest / Create a connection factory with one parameter succeed Create a connection factory with one parameter succeed \u00b6 fun Create a connection factory with one parameter succeed (): Unit","title":" create a connection factory with one parameter succeed"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-create a connection factory with one parameter succeed/#create-a-connection-factory-with-one-parameter-succeed","text":"fun Create a connection factory with one parameter succeed (): Unit","title":"Create a connection factory with one parameter succeed"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-create a connection factory with two parameter succeed/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClientTest / Create a connection factory with two parameter succeed Create a connection factory with two parameter succeed \u00b6 fun Create a connection factory with two parameter succeed (): Unit","title":" create a connection factory with two parameter succeed"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-create a connection factory with two parameter succeed/#create-a-connection-factory-with-two-parameter-succeed","text":"fun Create a connection factory with two parameter succeed (): Unit","title":"Create a connection factory with two parameter succeed"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-create a connection factory without parameters succeed/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClientTest / Create a connection factory without parameters succeed Create a connection factory without parameters succeed \u00b6 fun Create a connection factory without parameters succeed (): Unit","title":" create a connection factory without parameters succeed"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-create a connection factory without parameters succeed/#create-a-connection-factory-without-parameters-succeed","text":"fun Create a connection factory without parameters succeed (): Unit","title":"Create a connection factory without parameters succeed"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-init-/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClientTest / <init> <init> \u00b6 RabbitMqClientTest ()","title":" init "},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-init-/#init","text":"RabbitMqClientTest ()","title":"&lt;init&gt;"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-rabbit client disconnects properly/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitMqClientTest / Rabbit client disconnects properly Rabbit client disconnects properly \u00b6 fun Rabbit client disconnects properly (): Unit","title":" rabbit client disconnects properly"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-mq-client-test/-rabbit client disconnects properly/#rabbit-client-disconnects-properly","text":"fun Rabbit client disconnects properly (): Unit","title":"Rabbit client disconnects properly"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitTest RabbitTest \u00b6 class RabbitTest Types \u00b6 Name Summary Sample data class Sample : Message Constructors \u00b6 Name Summary <init> RabbitTest () Functions \u00b6 Name Summary call errors fun call errors (): Unit call return expected results fun call return expected results () : Unit deleteTestQueue fun deleteTestQueue (): Unit startConsumer fun startConsumer (): Unit","title":"Home"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/#rabbittest","text":"class RabbitTest","title":"RabbitTest"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/#types","text":"Name Summary Sample data class Sample : Message","title":"Types"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/#constructors","text":"Name Summary <init> RabbitTest ()","title":"Constructors"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/#functions","text":"Name Summary call errors fun call errors (): Unit call return expected results fun call return expected results () : Unit deleteTestQueue fun deleteTestQueue (): Unit startConsumer fun startConsumer (): Unit","title":"Functions"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/-init-/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitTest / <init> <init> \u00b6 RabbitTest ()","title":" init "},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/-init-/#init","text":"RabbitTest ()","title":"&lt;init&gt;"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/call errors/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitTest / call errors call errors \u00b6 fun call errors (): Unit","title":"Call errors"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/call errors/#call-errors","text":"fun call errors (): Unit","title":"call errors"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/call return expected results/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitTest / call return expected results call return expected results \u00b6 fun call return expected results () : Unit","title":"Call return expected results"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/call return expected results/#call-return-expected-results","text":"fun call return expected results () : Unit","title":"call return expected results"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/delete-test-queue/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitTest / deleteTestQueue deleteTestQueue \u00b6 fun deleteTestQueue (): Unit","title":"Delete test queue"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/delete-test-queue/#deletetestqueue","text":"fun deleteTestQueue (): Unit","title":"deleteTestQueue"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/start-consumer/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitTest / startConsumer startConsumer \u00b6 fun startConsumer (): Unit","title":"Start consumer"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/start-consumer/#startconsumer","text":"fun startConsumer (): Unit","title":"startConsumer"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/-sample/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitTest / Sample Sample \u00b6 data class Sample : Message Constructors \u00b6 Name Summary <init> Sample ( str : String , int : Int ) Properties \u00b6 Name Summary int val int: Int str val str: String","title":"Home"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/-sample/#sample","text":"data class Sample : Message","title":"Sample"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/-sample/#constructors","text":"Name Summary <init> Sample ( str : String , int : Int )","title":"Constructors"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/-sample/#properties","text":"Name Summary int val int: Int str val str: String","title":"Properties"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/-sample/-init-/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitTest / Sample / <init> <init> \u00b6 Sample ( str : String , int : Int )","title":" init "},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/-sample/-init-/#init","text":"Sample ( str : String , int : Int )","title":"&lt;init&gt;"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/-sample/int/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitTest / Sample / int int \u00b6 val int: Int","title":"Int"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/-sample/int/#int","text":"val int: Int","title":"int"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/-sample/str/","text":"messaging_rabbitmq / com.hexagonkt.messaging.rabbitmq / RabbitTest / Sample / str str \u00b6 val str: String","title":"Str"},{"location":"messaging_rabbitmq/com.hexagonkt.messaging.rabbitmq/-rabbit-test/-sample/str/#str","text":"val str: String","title":"str"},{"location":"port_http_client/","text":"port_http_client TODO Packages \u00b6 Name Summary com.hexagonkt.http.client Index \u00b6 All Types","title":"Async HTTP Client"},{"location":"port_http_client/#packages","text":"Name Summary com.hexagonkt.http.client","title":"Packages"},{"location":"port_http_client/#index","text":"All Types","title":"Index"},{"location":"port_http_client/alltypes/","text":"TODO All Types \u00b6 Name Summary com.hexagonkt.http.client.Client \u00b6 Client to use other REST services. | com.hexagonkt.http.client.ClientTest \u00b6","title":"Home"},{"location":"port_http_client/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"port_http_client/alltypes/#comhexagonkthttpclientclient","text":"Client to use other REST services. |","title":"com.hexagonkt.http.client.Client"},{"location":"port_http_client/alltypes/#comhexagonkthttpclientclienttest","text":"","title":"com.hexagonkt.http.client.ClientTest"},{"location":"port_http_client/com.hexagonkt.http.client/","text":"port_http_client / com.hexagonkt.http.client Package com.hexagonkt.http.client \u00b6 Types \u00b6 Name Summary Client Client to use other REST services. class Client ClientTest class ClientTest","title":"Home"},{"location":"port_http_client/com.hexagonkt.http.client/#package-comhexagonkthttpclient","text":"","title":"Package com.hexagonkt.http.client"},{"location":"port_http_client/com.hexagonkt.http.client/#types","text":"Name Summary Client Client to use other REST services. class Client ClientTest class ClientTest","title":"Types"},{"location":"port_http_client/com.hexagonkt.http.client/-client/","text":"port_http_client / com.hexagonkt.http.client / Client Client \u00b6 class Client Client to use other REST services. Constructors \u00b6 Name Summary <init> Client ( endpoint : String = \"\" , format : SerializationFormat , useCookies : Boolean = true , headers : Map < String , List < String >> = LinkedHashMap (), user : String ? = null , password : String ? = null , insecure : Boolean = false ) Client to use other REST services. Client ( endpoint : String = \"\" , contentType : String ? = null , useCookies : Boolean = true , headers : Map < String , List < String >> = LinkedHashMap (), user : String ? = null , password : String ? = null , insecure : Boolean = false ) Properties \u00b6 Name Summary contentType val contentType: String ? cookies val cookies: MutableMap < String , Cookie > endpoint val endpoint: String headers val headers: Map < String , List < String >> useCookies val useCookies: Boolean Functions \u00b6 Name Summary delete fun delete ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response get fun get ( url : String , callHeaders : Map < String , List < String >> = emptyMap (), callback : Response .() -> Unit = {} ): Response head fun head ( url : String , callHeaders : Map < String , List < String >> = emptyMap (), callback : Response .() -> Unit = {} ): Response options fun options ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callHeaders : Map < String , List < String >> = emptyMap (), callback : Response .() -> Unit = {} ): Response patch fun patch ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response post fun post ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response put fun put ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response send Synchronous execution. fun send ( method : Method , url : String = \"\" , body : Any ? = null , contentType : String ? = this . contentType , callHeaders : Map < String , List < String >> = LinkedHashMap (), parts : List < Part > = emptyList ()): Response trace fun trace ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response","title":"Home"},{"location":"port_http_client/com.hexagonkt.http.client/-client/#client","text":"class Client Client to use other REST services.","title":"Client"},{"location":"port_http_client/com.hexagonkt.http.client/-client/#constructors","text":"Name Summary <init> Client ( endpoint : String = \"\" , format : SerializationFormat , useCookies : Boolean = true , headers : Map < String , List < String >> = LinkedHashMap (), user : String ? = null , password : String ? = null , insecure : Boolean = false ) Client to use other REST services. Client ( endpoint : String = \"\" , contentType : String ? = null , useCookies : Boolean = true , headers : Map < String , List < String >> = LinkedHashMap (), user : String ? = null , password : String ? = null , insecure : Boolean = false )","title":"Constructors"},{"location":"port_http_client/com.hexagonkt.http.client/-client/#properties","text":"Name Summary contentType val contentType: String ? cookies val cookies: MutableMap < String , Cookie > endpoint val endpoint: String headers val headers: Map < String , List < String >> useCookies val useCookies: Boolean","title":"Properties"},{"location":"port_http_client/com.hexagonkt.http.client/-client/#functions","text":"Name Summary delete fun delete ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response get fun get ( url : String , callHeaders : Map < String , List < String >> = emptyMap (), callback : Response .() -> Unit = {} ): Response head fun head ( url : String , callHeaders : Map < String , List < String >> = emptyMap (), callback : Response .() -> Unit = {} ): Response options fun options ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callHeaders : Map < String , List < String >> = emptyMap (), callback : Response .() -> Unit = {} ): Response patch fun patch ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response post fun post ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response put fun put ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response send Synchronous execution. fun send ( method : Method , url : String = \"\" , body : Any ? = null , contentType : String ? = this . contentType , callHeaders : Map < String , List < String >> = LinkedHashMap (), parts : List < Part > = emptyList ()): Response trace fun trace ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response","title":"Functions"},{"location":"port_http_client/com.hexagonkt.http.client/-client/-init-/","text":"port_http_client / com.hexagonkt.http.client / Client / <init> <init> \u00b6 Client ( endpoint : String = \"\" , format : SerializationFormat , useCookies : Boolean = true , headers : Map < String , List < String >> = LinkedHashMap (), user : String ? = null , password : String ? = null , insecure : Boolean = false ) `` Client ( endpoint : String = \"\" , contentType : String ? = null , useCookies : Boolean = true , headers : Map < String , List < String >> = LinkedHashMap (), user : String ? = null , password : String ? = null , insecure : Boolean = false ) Client to use other REST services.","title":" init "},{"location":"port_http_client/com.hexagonkt.http.client/-client/-init-/#init","text":"Client ( endpoint : String = \"\" , format : SerializationFormat , useCookies : Boolean = true , headers : Map < String , List < String >> = LinkedHashMap (), user : String ? = null , password : String ? = null , insecure : Boolean = false ) `` Client ( endpoint : String = \"\" , contentType : String ? = null , useCookies : Boolean = true , headers : Map < String , List < String >> = LinkedHashMap (), user : String ? = null , password : String ? = null , insecure : Boolean = false ) Client to use other REST services.","title":"&lt;init&gt;"},{"location":"port_http_client/com.hexagonkt.http.client/-client/content-type/","text":"port_http_client / com.hexagonkt.http.client / Client / contentType contentType \u00b6 val contentType: String ?","title":"Content type"},{"location":"port_http_client/com.hexagonkt.http.client/-client/content-type/#contenttype","text":"val contentType: String ?","title":"contentType"},{"location":"port_http_client/com.hexagonkt.http.client/-client/cookies/","text":"port_http_client / com.hexagonkt.http.client / Client / cookies cookies \u00b6 val cookies: MutableMap < String , Cookie >","title":"Cookies"},{"location":"port_http_client/com.hexagonkt.http.client/-client/cookies/#cookies","text":"val cookies: MutableMap < String , Cookie >","title":"cookies"},{"location":"port_http_client/com.hexagonkt.http.client/-client/delete/","text":"port_http_client / com.hexagonkt.http.client / Client / delete delete \u00b6 fun delete ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response","title":"Delete"},{"location":"port_http_client/com.hexagonkt.http.client/-client/delete/#delete","text":"fun delete ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response","title":"delete"},{"location":"port_http_client/com.hexagonkt.http.client/-client/endpoint/","text":"port_http_client / com.hexagonkt.http.client / Client / endpoint endpoint \u00b6 val endpoint: String","title":"Endpoint"},{"location":"port_http_client/com.hexagonkt.http.client/-client/endpoint/#endpoint","text":"val endpoint: String","title":"endpoint"},{"location":"port_http_client/com.hexagonkt.http.client/-client/get/","text":"port_http_client / com.hexagonkt.http.client / Client / get get \u00b6 fun get ( url : String , callHeaders : Map < String , List < String >> = emptyMap (), callback : Response .() -> Unit = {} ): Response","title":"Get"},{"location":"port_http_client/com.hexagonkt.http.client/-client/get/#get","text":"fun get ( url : String , callHeaders : Map < String , List < String >> = emptyMap (), callback : Response .() -> Unit = {} ): Response","title":"get"},{"location":"port_http_client/com.hexagonkt.http.client/-client/head/","text":"port_http_client / com.hexagonkt.http.client / Client / head head \u00b6 fun head ( url : String , callHeaders : Map < String , List < String >> = emptyMap (), callback : Response .() -> Unit = {} ): Response","title":"Head"},{"location":"port_http_client/com.hexagonkt.http.client/-client/head/#head","text":"fun head ( url : String , callHeaders : Map < String , List < String >> = emptyMap (), callback : Response .() -> Unit = {} ): Response","title":"head"},{"location":"port_http_client/com.hexagonkt.http.client/-client/headers/","text":"port_http_client / com.hexagonkt.http.client / Client / headers headers \u00b6 val headers: Map < String , List < String >>","title":"Headers"},{"location":"port_http_client/com.hexagonkt.http.client/-client/headers/#headers","text":"val headers: Map < String , List < String >>","title":"headers"},{"location":"port_http_client/com.hexagonkt.http.client/-client/options/","text":"port_http_client / com.hexagonkt.http.client / Client / options options \u00b6 fun options ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callHeaders : Map < String , List < String >> = emptyMap (), callback : Response .() -> Unit = {} ): Response","title":"Options"},{"location":"port_http_client/com.hexagonkt.http.client/-client/options/#options","text":"fun options ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callHeaders : Map < String , List < String >> = emptyMap (), callback : Response .() -> Unit = {} ): Response","title":"options"},{"location":"port_http_client/com.hexagonkt.http.client/-client/patch/","text":"port_http_client / com.hexagonkt.http.client / Client / patch patch \u00b6 fun patch ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response","title":"Patch"},{"location":"port_http_client/com.hexagonkt.http.client/-client/patch/#patch","text":"fun patch ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response","title":"patch"},{"location":"port_http_client/com.hexagonkt.http.client/-client/post/","text":"port_http_client / com.hexagonkt.http.client / Client / post post \u00b6 fun post ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response","title":"Post"},{"location":"port_http_client/com.hexagonkt.http.client/-client/post/#post","text":"fun post ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response","title":"post"},{"location":"port_http_client/com.hexagonkt.http.client/-client/put/","text":"port_http_client / com.hexagonkt.http.client / Client / put put \u00b6 fun put ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response","title":"Put"},{"location":"port_http_client/com.hexagonkt.http.client/-client/put/#put","text":"fun put ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response","title":"put"},{"location":"port_http_client/com.hexagonkt.http.client/-client/send/","text":"port_http_client / com.hexagonkt.http.client / Client / send send \u00b6 fun send ( method : Method , url : String = \"\" , body : Any ? = null , contentType : String ? = this . contentType , callHeaders : Map < String , List < String >> = LinkedHashMap (), parts : List < Part > = emptyList ()): Response Synchronous execution.","title":"Send"},{"location":"port_http_client/com.hexagonkt.http.client/-client/send/#send","text":"fun send ( method : Method , url : String = \"\" , body : Any ? = null , contentType : String ? = this . contentType , callHeaders : Map < String , List < String >> = LinkedHashMap (), parts : List < Part > = emptyList ()): Response Synchronous execution.","title":"send"},{"location":"port_http_client/com.hexagonkt.http.client/-client/trace/","text":"port_http_client / com.hexagonkt.http.client / Client / trace trace \u00b6 fun trace ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response","title":"Trace"},{"location":"port_http_client/com.hexagonkt.http.client/-client/trace/#trace","text":"fun trace ( url : String , body : Any ? = null , contentType : String ? = this . contentType , callback : Response .() -> Unit = {} ): Response","title":"trace"},{"location":"port_http_client/com.hexagonkt.http.client/-client/use-cookies/","text":"port_http_client / com.hexagonkt.http.client / Client / useCookies useCookies \u00b6 val useCookies: Boolean","title":"Use cookies"},{"location":"port_http_client/com.hexagonkt.http.client/-client/use-cookies/#usecookies","text":"val useCookies: Boolean","title":"useCookies"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/","text":"port_http_client / com.hexagonkt.http.client / ClientTest ClientTest \u00b6 class ClientTest Constructors \u00b6 Name Summary <init> ClientTest () Functions \u00b6 Name Summary Files are sent in base64 fun Files are sent in base64 (): Unit HTTP methods with objects work ok fun HTTP methods with objects work ok (): Unit JSON requests works as expected fun JSON requests works as expected (): Unit Parameters are set properly fun Parameters are set properly (): Unit resetHandler fun resetHandler (): Unit shutdown fun shutdown (): Unit startup fun startup (): Unit Strings are sent properly fun Strings are sent properly (): Unit","title":"Home"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/#clienttest","text":"class ClientTest","title":"ClientTest"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/#constructors","text":"Name Summary <init> ClientTest ()","title":"Constructors"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/#functions","text":"Name Summary Files are sent in base64 fun Files are sent in base64 (): Unit HTTP methods with objects work ok fun HTTP methods with objects work ok (): Unit JSON requests works as expected fun JSON requests works as expected (): Unit Parameters are set properly fun Parameters are set properly (): Unit resetHandler fun resetHandler (): Unit shutdown fun shutdown (): Unit startup fun startup (): Unit Strings are sent properly fun Strings are sent properly (): Unit","title":"Functions"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/-files are sent in base64/","text":"port_http_client / com.hexagonkt.http.client / ClientTest / Files are sent in base64 Files are sent in base64 \u00b6 fun Files are sent in base64 (): Unit","title":" files are sent in base64"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/-files are sent in base64/#files-are-sent-in-base64","text":"fun Files are sent in base64 (): Unit","title":"Files are sent in base64"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/-h-t-t-p methods with objects work ok/","text":"port_http_client / com.hexagonkt.http.client / ClientTest / HTTP methods with objects work ok HTTP methods with objects work ok \u00b6 fun HTTP methods with objects work ok (): Unit","title":" h t t p methods with objects work ok"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/-h-t-t-p methods with objects work ok/#http-methods-with-objects-work-ok","text":"fun HTTP methods with objects work ok (): Unit","title":"HTTP methods with objects work ok"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/-init-/","text":"port_http_client / com.hexagonkt.http.client / ClientTest / <init> <init> \u00b6 ClientTest ()","title":" init "},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/-init-/#init","text":"ClientTest ()","title":"&lt;init&gt;"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/-j-s-o-n requests works as expected/","text":"port_http_client / com.hexagonkt.http.client / ClientTest / JSON requests works as expected JSON requests works as expected \u00b6 fun JSON requests works as expected (): Unit","title":" j s o n requests works as expected"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/-j-s-o-n requests works as expected/#json-requests-works-as-expected","text":"fun JSON requests works as expected (): Unit","title":"JSON requests works as expected"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/-parameters are set properly/","text":"port_http_client / com.hexagonkt.http.client / ClientTest / Parameters are set properly Parameters are set properly \u00b6 fun Parameters are set properly (): Unit","title":" parameters are set properly"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/-parameters are set properly/#parameters-are-set-properly","text":"fun Parameters are set properly (): Unit","title":"Parameters are set properly"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/-strings are sent properly/","text":"port_http_client / com.hexagonkt.http.client / ClientTest / Strings are sent properly Strings are sent properly \u00b6 fun Strings are sent properly (): Unit","title":" strings are sent properly"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/-strings are sent properly/#strings-are-sent-properly","text":"fun Strings are sent properly (): Unit","title":"Strings are sent properly"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/reset-handler/","text":"port_http_client / com.hexagonkt.http.client / ClientTest / resetHandler resetHandler \u00b6 fun resetHandler (): Unit","title":"Reset handler"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/reset-handler/#resethandler","text":"fun resetHandler (): Unit","title":"resetHandler"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/shutdown/","text":"port_http_client / com.hexagonkt.http.client / ClientTest / shutdown shutdown \u00b6 fun shutdown (): Unit","title":"Shutdown"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/shutdown/#shutdown","text":"fun shutdown (): Unit","title":"shutdown"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/startup/","text":"port_http_client / com.hexagonkt.http.client / ClientTest / startup startup \u00b6 fun startup (): Unit","title":"Startup"},{"location":"port_http_client/com.hexagonkt.http.client/-client-test/startup/#startup","text":"fun startup (): Unit","title":"startup"},{"location":"port_http_server/","text":"port_http_server This port's purpose is to develop HTTP servers (REST services or Web applications). It defines a DSL to declare HTTP request handlers. Adapters implementing this port are responsible of transforming the DSL into a runtime. And allows you to switch implementations without changing the service. The hexagon_web module provides utilities on top of this port for Web application development (like templates helpers). Server \u00b6 A server is a process listening to HTTP requests on a TCP port. You can run multiple ones on different ports at the same time (this can be useful to test many microservices at the same time). The server can be configured with different properties. If you do not provide a value for them, they are searched inside the application settings and lastly, a default value is picked. This is the parameters list: serviceName: name of this service, it is only informative and it is displayed on the logs. If not set < undefined > is used. bindAddress: address to which this process is bound. If none is provided, 127 . 0 . 0 . 1 is taken. bindPort: the port that the process listens to. By default it is 2010 contextPath: initial path used for the rest of the routes, by default it is empty. You can inject an adapter for the Server port using the InjectionManager object: InjectionManager . bindObject < ServerPort > ( JettyServletAdapter ()) To create a server, you need to provide a router (check the next section for more information), and after creating a server you can run it or stop it with start and stop methods. /* * All settings are optional, you can supply any combination * Parameters not set will fall back to the defaults */ val settings = ServerSettings ( serverName = \"name\" , bindAddress = InetAddress . getByName ( \"0.0.0\" ), bindPort = 2020 , contextPath = \"/context\" ) val router = Router { get ( \"/hello\" ) { ok ( \"Hello World!\" ) } } val customServer = Server ( adapter , router , settings ) customServer . start () val customClient = Client ( \"http://localhost:${customServer.runtimePort}\" ) assert ( customServer . started ()) assert ( customClient . get ( \"/context/hello\" ). responseBody == \"Hello World!\" ) customServer . stop () /* * You can skip the adapter is you previously bound one * You may also skip the settings an the defaults will be used */ InjectionManager . bindObject ( adapter ) val defaultServer = Server ( router = router ) defaultServer . start () val defaultClient = Client ( \"http://localhost:${defaultServer.runtimePort}\" ) assert ( defaultServer . started ()) assert ( defaultClient . get ( \"/hello\" ). responseBody == \"Hello World!\" ) defaultServer . stop () Servlet Web server \u00b6 There is an special server adapter for running inside Servlet Containers. To use it you should import the Servlet HTTP Server Adapter into your project. Check the http_server_servlet module for more information. Routes \u00b6 The main building block of a Hexagon HTTP service is a set of routes. A route is made up of three simple pieces: A verb (get, post, put, delete, head, trace, connect, options). It can also be any . A path (/hello, /users/{name}). Paths must start with '/' and trailing slash is ignored. A callback code block. The callback has a void return type. You should use Call . send () to set the response which will be returned to the user. Routes are matched in the order they are defined. The first route that matches the request is invoked and the following ones are ignored. Check the next snippet for usage examples: get ( \"/hello\" ) { ok ( \"Get greeting\" )} put ( \"/hello\" ) { ok ( \"Put greeting\" )} post ( \"/hello\" ) { ok ( \"Post greeting\" )} any ( \"/hello\" ) { ok ( \"Fallback if HTTP verb was not used before\" )} get { ok ( \"Get at '/' if no route matched before\" ) } HTTP clients will be able to reuse the routes to create REST services clients. Route groups \u00b6 Routes can be nested by calling the path () method, which takes a String prefix and gives you a scope to declare routes and filters (or more nested paths). Ie: path ( \"/nested\" ) { get ( \"/hello\" ) { ok ( \"Greeting\" )} path ( \"/secondLevel\" ) { get ( \"/hello\" ) { ok ( \"Second level greeting\" )} } get { ok ( \"Get at '/nested'\" ) } } Routers \u00b6 If you have a lot of routes, it can be helpful to group them into routers. You can create routers to mount a group of routes in different paths (allowing you to reuse them). Check this snippet: fun personRouter ( kind : String ) = Router { get { ok ( \"Get $kind\" ) } put { ok ( \"Put $kind\" ) } post { ok ( \"Post $kind\" ) } } val server = Server ( adapter ) { path ( \"/clients\" , personRouter ( \"client\" )) path ( \"/customers\" , personRouter ( \"customer\" )) } Callbacks \u00b6 Callbacks are request's handling blocks that are bound to routes or filters. They make the request, response and session objects available to the handling code. Call \u00b6 The Call object provides you with everything you need to handle a http-request. It contains the underlying request and response, and a bunch of utility methods to return results, read parameters or pass attributes among filters/routes. The methods are available directly from the callback ( Call is the callback receiver). You can check the API documentation for the full list of methods. This sample code illustrates the usage: get ( \"/call\" ) { attributes // the attributes list attributes [ \"foo\" ] // value of foo attribute attributes [ \"A\" ] = \"V\" // sets value of attribute A to V ok ( \"Response body\" ) // returns a 200 status send ( 400 , \"Invalid request\" ) // returns any status } Request \u00b6 Request functionality is provided by the request field: get ( \"/request\" ) { request . method // the HTTP method (GET, ..etc) request . scheme // http or https request . secure // true if scheme is https request . host // the host, e.g. \"example.com\" request . ip // client IP address request . port // the server port request . path // the request path, e.g. /result.jsp request . body // request body sent by the client request . url // the url. e.g. \"http://example.com/foo\" request . contentLength // length of request body request . contentType // content type of request.body request . accept // Client accepted content types request . headers // the HTTP header list request . headers [ \"BAR\" ] // value of BAR header request . userAgent // user agent (browser requests) request . origin // origin (browser requests) request . body ( Type :: class ) // Object passed in the body as a typed object request . body < Type >() // Syntactic sugar for the previous statement request . bodyObjects ( Type :: class ) // Object(s) passed in the body as a typed list request . bodyObjects < Type >() // Syntactic sugar for the previous statement request . body ( Map :: class ) // Object passed in the body as a field map request . body < Map <*, *>>() // Syntactic sugar for the previous statement request . bodyObjects ( Map :: class ) // Object(s) passed in the body as a list of maps request . bodyObjects < Map <*, *>>() // Syntactic sugar for the previous statement } Response \u00b6 Response information is provided by the response field: get ( \"/response\" ) { response . body // get response content response . body = \"Hello\" // sets content to Hello response . headers [ \"FOO\" ] = listOf ( \"bar\" ) // sets header FOO with value bar response . status // get the response status response . status = 401 // set status code to 401 response . contentType // get the content type response . contentType = \"text/xml\" // set content type to text/xml } Path Parameters \u00b6 Route patterns can include named parameters, accessible via the pathParameters map on the request object: get ( \"/pathParam/{foo}\" ) { request . pathParameters [ \"foo\" ] // value of foo path parameter request . pathParameters // map with all parameters } Query Parameters \u00b6 It is possible to access the whole query string or only an specific query parameter using the parameters map on the request object: get ( \"/queryParam\" ) { request . queryString request . queryParameters // the query param list request . queryParameters [ \"FOO\" ] ?. first () // value of FOO query param request . queryParameters [ \"FOO\" ] // all values of FOO query param } Redirects \u00b6 You can redirect requests (returning 30x codes) by using Call utility methods: get ( \"/redirect\" ) { redirect ( \"/call\" ) // browser redirect to /call } Cookies \u00b6 The request and response cookie functions provide a convenient way for sharing information between handlers, requests, or even servers. You can read client sent cookies from the request's cookies read only map. To change cookies or add new ones you have to use response . addCookie () and response . removeCookie () methods. Check the following sample code for details: get ( \"/cookie\" ) { request . cookies // get map of all request cookies request . cookies [ \"foo\" ] // access request cookie by name val cookie = HttpCookie ( \"new_foo\" , \"bar\" ) response . addCookie ( cookie ) // set cookie with a value cookie . maxAge = 3600 response . addCookie ( cookie ) // set cookie with a max-age cookie . secure = true response . addCookie ( cookie ) // secure cookie response . removeCookie ( \"foo\" ) // remove cookie } Sessions \u00b6 Every request has access to the session created on the server side, the session object provides the following methods: get ( \"/session\" ) { session // create and return session session . attributes [ \"user\" ] // Get session attribute 'user' session . set ( \"user\" , \"foo\" ) // Set session attribute 'user' session . removeAttribute ( \"user\" ) // Remove session attribute 'user' session . attributes // Get all session attributes session . id // Get session id session . isNew () // Check if session is new } Halting \u00b6 To immediately stop a request within a filter or route use halt () . halt () is not intended to be used inside exception-mappers. Check the following snippet for an example: get ( \"/halt\" ) { halt () // halt with status 500 and stop route processing /* * These are just examples the following code will never be reached */ halt ( 401 ) // halt with status halt ( \"Body Message\" ) // halt with message (status 500) halt ( 401 , \"Go away!\" ) // halt with status and message } Filters \u00b6 You might know filters as interceptors, or middleware from other libraries. Filters are blocks of code executed before or after one or more routes. They can read the request and read/modify the response. All filters that match a route are executed in the order they are declared. Filters optionally take a pattern, causing them to be executed only if the request path matches that pattern. Before and after filters are always executed (if the route is matched). But any of them may stop the execution chain if halted. If halt () is called in one filter, filter processing is stopped for that kind of filter ( before or after ). In the case of before filters, this also prevent the route from being executed (but after filters are executed anyway). The following code details filters usage: before { response . headers [ \"b_all\" ] = listOf ( \"true\" ) } before ( \"/filters/*\" ) { response . headers [ \"b_filters\" ] = listOf ( \"true\" ) } get ( \"/filters/route\" ) { ok ( \"filters route\" ) } after ( \"/filters/*\" ) { response . headers [ \"a_filters\" ] = listOf ( \"true\" ) } get ( \"/filters\" ) { ok ( \"filters\" ) } path ( \"/nested\" ) { before { response . headers [ \"b_nested\" ] = listOf ( \"true\" ) } before ( \"/\" ) { response . headers [ \"b_nested_2\" ] = listOf ( \"true\" ) } get ( \"/filters\" ) { ok ( \"nested filters\" ) } get ( \"/halted\" ) { halt ( 499 , \"halted\" ) } get { ok ( \"nested also\" ) } after { response . headers [ \"a_nested\" ] = listOf ( \"true\" ) } } after { response . headers [ \"a_all\" ] = listOf ( \"true\" ) } Error Handling \u00b6 You can provide handlers for runtime errors. Errors are unhandled thrown exceptions in the callbacks, or handlers halted with an error code. Error handlers for a given code or exception are unique, and the first one defined is the one that will be used. HTTP Errors Handlers \u00b6 Allows to handle routes halted with a given code. These handlers are only applied if the route is halted, if the error code is returned with send it won't be handled as an error. Example: // Register handler for routes halted with 512 code error ( 512 ) { send ( 500 , \"Ouch\" )} // If status code (512) is returned with `send` error won't be triggered get ( \"/errors\" ) { halt ( 512 ) } Exception Mapping \u00b6 You can handle exceptions of a given type for all routes and filters. The handler allows you to refer to the thrown exception. Look at the following code for a detailed example: // Register handler for routes which callbacks throw exceptions error ( CodedException :: class ) { send ( 599 , it . message ?: \"empty\" ) } error ( IllegalStateException :: class ) { send ( 505 , it . message ?: \"empty\" ) } get ( \"/exceptions\" ) { error ( \"Message\" ) } get ( \"/codedExceptions\" ) { halt ( 509 , \"code\" ) } Static Files \u00b6 You can use a folder in the classpath for serving static files with the get () methods. Note that the public directory name is not included in the URL. Asset mapping is handled like any other route, so if an asset mapping is matched, no other route will be checked (assets or other routes). And also, if a previous route is matched, the asset mapping will never be checked. Being get ( resource ) a shortcut of get ( \"/*\" , resource ) it should be placed as the last route. Check the next example for details: get ( \"/web/file.txt\" ) { ok ( \"It matches this route and won't search for the file\" ) } // Expose resources on the '/public' resource folder over the '/web' HTTP path get ( \"/web/*\" , Resource ( \"public\" )) // Maps resources on 'assets' on the server root (assets/f.css -> /f.css) // '/public/css/style.css' resource would be: 'http://{host}:{port}/css/style.css' get ( Resource ( \"assets\" )) MIME types \u00b6 The MIME types of static files are computed from the file extension using the SerializationManager.contentTypeOf method. CORS \u00b6 CORS behaviour can be different depending on the path. You can attach different CorsSettings to different routers. Check CorsSettings class for more details. val server : Server by lazy { Server ( adapter ) { corsPath ( \"/default\" , CorsSettings ()) corsPath ( \"/example/org\" , CorsSettings ( \"example.org\" )) corsPath ( \"/no/credentials\" , CorsSettings ( supportCredentials = false )) corsPath ( \"/only/post\" , CorsSettings ( allowedMethods = setOf ( POST ))) corsPath ( \"/cache\" , CorsSettings ( preFlightMaxAge = 10 )) corsPath ( \"/exposed/headers\" , CorsSettings ( exposedHeaders = setOf ( \"head\" ))) corsPath ( \"/allowed/headers\" , CorsSettings ( allowedHeaders = setOf ( \"head\" ))) } } private fun Router . corsPath ( path : String , settings : CorsSettings ) { path ( path ) { // CORS settings can change for different routes cors ( settings ) get ( \"/path\" ) { ok ( request . method ) } post ( \"/path\" ) { ok ( request . method ) } put ( \"/path\" ) { ok ( request . method ) } delete ( \"/path\" ) { ok ( request . method ) } get { ok ( request . method ) } post { ok ( request . method ) } put { ok ( request . method ) } delete { ok ( request . method ) } } } Testing \u00b6 Integration tests \u00b6 To test HTTP servers from outside using a real Adapter, you can create a server setting 0 as port. This will pick a random free port that you can check later: val router = Router { get ( \"/hello\" ) { ok ( \"Hi!\" ) } } val serverSettings = ServerSettings ( \"name\" , InetAddress . getLoopbackAddress (), 0 ) val server = Server ( adapter , router , serverSettings ) server . start () val client = Client ( \"http://localhost:${server.runtimePort}\" ) assert ( client . get ( \"/hello\" ). responseBody == \"Hi!\" ) server . stop () To do this kind of tests without creating a custom server (using the real production code). Check the tests of the starter projects . Mocking calls \u00b6 To unit test callbacks you can create test calls with hardcoded requests, responses and sessions. To use it in your project you'll have to include a dependency (with test scope): build.gradle testImplementation ( \"com.hexagonkt:port_http_server:$hexagonVersion:test\" ) pom.xml <dependency> <groupId> com.hexagonkt </groupId> <artifactId> port_http_server </artifactId> <version> $hexagonVersion </version> <scope> test </scope> </dependency> Check testCall , TestRequest , TestResponse and TestSession for more details. For a quick sample, check the snipped below: private fun Call . testedCallback () { if ( request . body == \"weird\" ) send ( 999 , \"Weird error\" ) } @Test fun `Test call behaves as expected` () { val testCall = testCall ( TestRequest ( body = \"weird\" )) testCall . testedCallback () assert ( testCall . response . status == 999 ) assert ( testCall . response . body == \"Weird error\" ) } Packages \u00b6 Name Summary com.hexagonkt.http.server This package defines the classes used in the HTTP DSL. com.hexagonkt.http.server.examples com.hexagonkt.http.server.test Index \u00b6 All Types","title":"HTTP Server"},{"location":"port_http_server/#server","text":"A server is a process listening to HTTP requests on a TCP port. You can run multiple ones on different ports at the same time (this can be useful to test many microservices at the same time). The server can be configured with different properties. If you do not provide a value for them, they are searched inside the application settings and lastly, a default value is picked. This is the parameters list: serviceName: name of this service, it is only informative and it is displayed on the logs. If not set < undefined > is used. bindAddress: address to which this process is bound. If none is provided, 127 . 0 . 0 . 1 is taken. bindPort: the port that the process listens to. By default it is 2010 contextPath: initial path used for the rest of the routes, by default it is empty. You can inject an adapter for the Server port using the InjectionManager object: InjectionManager . bindObject < ServerPort > ( JettyServletAdapter ()) To create a server, you need to provide a router (check the next section for more information), and after creating a server you can run it or stop it with start and stop methods. /* * All settings are optional, you can supply any combination * Parameters not set will fall back to the defaults */ val settings = ServerSettings ( serverName = \"name\" , bindAddress = InetAddress . getByName ( \"0.0.0\" ), bindPort = 2020 , contextPath = \"/context\" ) val router = Router { get ( \"/hello\" ) { ok ( \"Hello World!\" ) } } val customServer = Server ( adapter , router , settings ) customServer . start () val customClient = Client ( \"http://localhost:${customServer.runtimePort}\" ) assert ( customServer . started ()) assert ( customClient . get ( \"/context/hello\" ). responseBody == \"Hello World!\" ) customServer . stop () /* * You can skip the adapter is you previously bound one * You may also skip the settings an the defaults will be used */ InjectionManager . bindObject ( adapter ) val defaultServer = Server ( router = router ) defaultServer . start () val defaultClient = Client ( \"http://localhost:${defaultServer.runtimePort}\" ) assert ( defaultServer . started ()) assert ( defaultClient . get ( \"/hello\" ). responseBody == \"Hello World!\" ) defaultServer . stop ()","title":"Server"},{"location":"port_http_server/#servlet-web-server","text":"There is an special server adapter for running inside Servlet Containers. To use it you should import the Servlet HTTP Server Adapter into your project. Check the http_server_servlet module for more information.","title":"Servlet Web server"},{"location":"port_http_server/#routes","text":"The main building block of a Hexagon HTTP service is a set of routes. A route is made up of three simple pieces: A verb (get, post, put, delete, head, trace, connect, options). It can also be any . A path (/hello, /users/{name}). Paths must start with '/' and trailing slash is ignored. A callback code block. The callback has a void return type. You should use Call . send () to set the response which will be returned to the user. Routes are matched in the order they are defined. The first route that matches the request is invoked and the following ones are ignored. Check the next snippet for usage examples: get ( \"/hello\" ) { ok ( \"Get greeting\" )} put ( \"/hello\" ) { ok ( \"Put greeting\" )} post ( \"/hello\" ) { ok ( \"Post greeting\" )} any ( \"/hello\" ) { ok ( \"Fallback if HTTP verb was not used before\" )} get { ok ( \"Get at '/' if no route matched before\" ) } HTTP clients will be able to reuse the routes to create REST services clients.","title":"Routes"},{"location":"port_http_server/#route-groups","text":"Routes can be nested by calling the path () method, which takes a String prefix and gives you a scope to declare routes and filters (or more nested paths). Ie: path ( \"/nested\" ) { get ( \"/hello\" ) { ok ( \"Greeting\" )} path ( \"/secondLevel\" ) { get ( \"/hello\" ) { ok ( \"Second level greeting\" )} } get { ok ( \"Get at '/nested'\" ) } }","title":"Route groups"},{"location":"port_http_server/#routers","text":"If you have a lot of routes, it can be helpful to group them into routers. You can create routers to mount a group of routes in different paths (allowing you to reuse them). Check this snippet: fun personRouter ( kind : String ) = Router { get { ok ( \"Get $kind\" ) } put { ok ( \"Put $kind\" ) } post { ok ( \"Post $kind\" ) } } val server = Server ( adapter ) { path ( \"/clients\" , personRouter ( \"client\" )) path ( \"/customers\" , personRouter ( \"customer\" )) }","title":"Routers"},{"location":"port_http_server/#callbacks","text":"Callbacks are request's handling blocks that are bound to routes or filters. They make the request, response and session objects available to the handling code.","title":"Callbacks"},{"location":"port_http_server/#call","text":"The Call object provides you with everything you need to handle a http-request. It contains the underlying request and response, and a bunch of utility methods to return results, read parameters or pass attributes among filters/routes. The methods are available directly from the callback ( Call is the callback receiver). You can check the API documentation for the full list of methods. This sample code illustrates the usage: get ( \"/call\" ) { attributes // the attributes list attributes [ \"foo\" ] // value of foo attribute attributes [ \"A\" ] = \"V\" // sets value of attribute A to V ok ( \"Response body\" ) // returns a 200 status send ( 400 , \"Invalid request\" ) // returns any status }","title":"Call"},{"location":"port_http_server/#request","text":"Request functionality is provided by the request field: get ( \"/request\" ) { request . method // the HTTP method (GET, ..etc) request . scheme // http or https request . secure // true if scheme is https request . host // the host, e.g. \"example.com\" request . ip // client IP address request . port // the server port request . path // the request path, e.g. /result.jsp request . body // request body sent by the client request . url // the url. e.g. \"http://example.com/foo\" request . contentLength // length of request body request . contentType // content type of request.body request . accept // Client accepted content types request . headers // the HTTP header list request . headers [ \"BAR\" ] // value of BAR header request . userAgent // user agent (browser requests) request . origin // origin (browser requests) request . body ( Type :: class ) // Object passed in the body as a typed object request . body < Type >() // Syntactic sugar for the previous statement request . bodyObjects ( Type :: class ) // Object(s) passed in the body as a typed list request . bodyObjects < Type >() // Syntactic sugar for the previous statement request . body ( Map :: class ) // Object passed in the body as a field map request . body < Map <*, *>>() // Syntactic sugar for the previous statement request . bodyObjects ( Map :: class ) // Object(s) passed in the body as a list of maps request . bodyObjects < Map <*, *>>() // Syntactic sugar for the previous statement }","title":"Request"},{"location":"port_http_server/#response","text":"Response information is provided by the response field: get ( \"/response\" ) { response . body // get response content response . body = \"Hello\" // sets content to Hello response . headers [ \"FOO\" ] = listOf ( \"bar\" ) // sets header FOO with value bar response . status // get the response status response . status = 401 // set status code to 401 response . contentType // get the content type response . contentType = \"text/xml\" // set content type to text/xml }","title":"Response"},{"location":"port_http_server/#path-parameters","text":"Route patterns can include named parameters, accessible via the pathParameters map on the request object: get ( \"/pathParam/{foo}\" ) { request . pathParameters [ \"foo\" ] // value of foo path parameter request . pathParameters // map with all parameters }","title":"Path Parameters"},{"location":"port_http_server/#query-parameters","text":"It is possible to access the whole query string or only an specific query parameter using the parameters map on the request object: get ( \"/queryParam\" ) { request . queryString request . queryParameters // the query param list request . queryParameters [ \"FOO\" ] ?. first () // value of FOO query param request . queryParameters [ \"FOO\" ] // all values of FOO query param }","title":"Query Parameters"},{"location":"port_http_server/#redirects","text":"You can redirect requests (returning 30x codes) by using Call utility methods: get ( \"/redirect\" ) { redirect ( \"/call\" ) // browser redirect to /call }","title":"Redirects"},{"location":"port_http_server/#cookies","text":"The request and response cookie functions provide a convenient way for sharing information between handlers, requests, or even servers. You can read client sent cookies from the request's cookies read only map. To change cookies or add new ones you have to use response . addCookie () and response . removeCookie () methods. Check the following sample code for details: get ( \"/cookie\" ) { request . cookies // get map of all request cookies request . cookies [ \"foo\" ] // access request cookie by name val cookie = HttpCookie ( \"new_foo\" , \"bar\" ) response . addCookie ( cookie ) // set cookie with a value cookie . maxAge = 3600 response . addCookie ( cookie ) // set cookie with a max-age cookie . secure = true response . addCookie ( cookie ) // secure cookie response . removeCookie ( \"foo\" ) // remove cookie }","title":"Cookies"},{"location":"port_http_server/#sessions","text":"Every request has access to the session created on the server side, the session object provides the following methods: get ( \"/session\" ) { session // create and return session session . attributes [ \"user\" ] // Get session attribute 'user' session . set ( \"user\" , \"foo\" ) // Set session attribute 'user' session . removeAttribute ( \"user\" ) // Remove session attribute 'user' session . attributes // Get all session attributes session . id // Get session id session . isNew () // Check if session is new }","title":"Sessions"},{"location":"port_http_server/#halting","text":"To immediately stop a request within a filter or route use halt () . halt () is not intended to be used inside exception-mappers. Check the following snippet for an example: get ( \"/halt\" ) { halt () // halt with status 500 and stop route processing /* * These are just examples the following code will never be reached */ halt ( 401 ) // halt with status halt ( \"Body Message\" ) // halt with message (status 500) halt ( 401 , \"Go away!\" ) // halt with status and message }","title":"Halting"},{"location":"port_http_server/#filters","text":"You might know filters as interceptors, or middleware from other libraries. Filters are blocks of code executed before or after one or more routes. They can read the request and read/modify the response. All filters that match a route are executed in the order they are declared. Filters optionally take a pattern, causing them to be executed only if the request path matches that pattern. Before and after filters are always executed (if the route is matched). But any of them may stop the execution chain if halted. If halt () is called in one filter, filter processing is stopped for that kind of filter ( before or after ). In the case of before filters, this also prevent the route from being executed (but after filters are executed anyway). The following code details filters usage: before { response . headers [ \"b_all\" ] = listOf ( \"true\" ) } before ( \"/filters/*\" ) { response . headers [ \"b_filters\" ] = listOf ( \"true\" ) } get ( \"/filters/route\" ) { ok ( \"filters route\" ) } after ( \"/filters/*\" ) { response . headers [ \"a_filters\" ] = listOf ( \"true\" ) } get ( \"/filters\" ) { ok ( \"filters\" ) } path ( \"/nested\" ) { before { response . headers [ \"b_nested\" ] = listOf ( \"true\" ) } before ( \"/\" ) { response . headers [ \"b_nested_2\" ] = listOf ( \"true\" ) } get ( \"/filters\" ) { ok ( \"nested filters\" ) } get ( \"/halted\" ) { halt ( 499 , \"halted\" ) } get { ok ( \"nested also\" ) } after { response . headers [ \"a_nested\" ] = listOf ( \"true\" ) } } after { response . headers [ \"a_all\" ] = listOf ( \"true\" ) }","title":"Filters"},{"location":"port_http_server/#error-handling","text":"You can provide handlers for runtime errors. Errors are unhandled thrown exceptions in the callbacks, or handlers halted with an error code. Error handlers for a given code or exception are unique, and the first one defined is the one that will be used.","title":"Error Handling"},{"location":"port_http_server/#http-errors-handlers","text":"Allows to handle routes halted with a given code. These handlers are only applied if the route is halted, if the error code is returned with send it won't be handled as an error. Example: // Register handler for routes halted with 512 code error ( 512 ) { send ( 500 , \"Ouch\" )} // If status code (512) is returned with `send` error won't be triggered get ( \"/errors\" ) { halt ( 512 ) }","title":"HTTP Errors Handlers"},{"location":"port_http_server/#exception-mapping","text":"You can handle exceptions of a given type for all routes and filters. The handler allows you to refer to the thrown exception. Look at the following code for a detailed example: // Register handler for routes which callbacks throw exceptions error ( CodedException :: class ) { send ( 599 , it . message ?: \"empty\" ) } error ( IllegalStateException :: class ) { send ( 505 , it . message ?: \"empty\" ) } get ( \"/exceptions\" ) { error ( \"Message\" ) } get ( \"/codedExceptions\" ) { halt ( 509 , \"code\" ) }","title":"Exception Mapping"},{"location":"port_http_server/#static-files","text":"You can use a folder in the classpath for serving static files with the get () methods. Note that the public directory name is not included in the URL. Asset mapping is handled like any other route, so if an asset mapping is matched, no other route will be checked (assets or other routes). And also, if a previous route is matched, the asset mapping will never be checked. Being get ( resource ) a shortcut of get ( \"/*\" , resource ) it should be placed as the last route. Check the next example for details: get ( \"/web/file.txt\" ) { ok ( \"It matches this route and won't search for the file\" ) } // Expose resources on the '/public' resource folder over the '/web' HTTP path get ( \"/web/*\" , Resource ( \"public\" )) // Maps resources on 'assets' on the server root (assets/f.css -> /f.css) // '/public/css/style.css' resource would be: 'http://{host}:{port}/css/style.css' get ( Resource ( \"assets\" ))","title":"Static Files"},{"location":"port_http_server/#mime-types","text":"The MIME types of static files are computed from the file extension using the SerializationManager.contentTypeOf method.","title":"MIME types"},{"location":"port_http_server/#cors","text":"CORS behaviour can be different depending on the path. You can attach different CorsSettings to different routers. Check CorsSettings class for more details. val server : Server by lazy { Server ( adapter ) { corsPath ( \"/default\" , CorsSettings ()) corsPath ( \"/example/org\" , CorsSettings ( \"example.org\" )) corsPath ( \"/no/credentials\" , CorsSettings ( supportCredentials = false )) corsPath ( \"/only/post\" , CorsSettings ( allowedMethods = setOf ( POST ))) corsPath ( \"/cache\" , CorsSettings ( preFlightMaxAge = 10 )) corsPath ( \"/exposed/headers\" , CorsSettings ( exposedHeaders = setOf ( \"head\" ))) corsPath ( \"/allowed/headers\" , CorsSettings ( allowedHeaders = setOf ( \"head\" ))) } } private fun Router . corsPath ( path : String , settings : CorsSettings ) { path ( path ) { // CORS settings can change for different routes cors ( settings ) get ( \"/path\" ) { ok ( request . method ) } post ( \"/path\" ) { ok ( request . method ) } put ( \"/path\" ) { ok ( request . method ) } delete ( \"/path\" ) { ok ( request . method ) } get { ok ( request . method ) } post { ok ( request . method ) } put { ok ( request . method ) } delete { ok ( request . method ) } } }","title":"CORS"},{"location":"port_http_server/#testing","text":"","title":"Testing"},{"location":"port_http_server/#integration-tests","text":"To test HTTP servers from outside using a real Adapter, you can create a server setting 0 as port. This will pick a random free port that you can check later: val router = Router { get ( \"/hello\" ) { ok ( \"Hi!\" ) } } val serverSettings = ServerSettings ( \"name\" , InetAddress . getLoopbackAddress (), 0 ) val server = Server ( adapter , router , serverSettings ) server . start () val client = Client ( \"http://localhost:${server.runtimePort}\" ) assert ( client . get ( \"/hello\" ). responseBody == \"Hi!\" ) server . stop () To do this kind of tests without creating a custom server (using the real production code). Check the tests of the starter projects .","title":"Integration tests"},{"location":"port_http_server/#mocking-calls","text":"To unit test callbacks you can create test calls with hardcoded requests, responses and sessions. To use it in your project you'll have to include a dependency (with test scope): build.gradle testImplementation ( \"com.hexagonkt:port_http_server:$hexagonVersion:test\" ) pom.xml <dependency> <groupId> com.hexagonkt </groupId> <artifactId> port_http_server </artifactId> <version> $hexagonVersion </version> <scope> test </scope> </dependency> Check testCall , TestRequest , TestResponse and TestSession for more details. For a quick sample, check the snipped below: private fun Call . testedCallback () { if ( request . body == \"weird\" ) send ( 999 , \"Weird error\" ) } @Test fun `Test call behaves as expected` () { val testCall = testCall ( TestRequest ( body = \"weird\" )) testCall . testedCallback () assert ( testCall . response . status == 999 ) assert ( testCall . response . body == \"Weird error\" ) }","title":"Mocking calls"},{"location":"port_http_server/#packages","text":"Name Summary com.hexagonkt.http.server This package defines the classes used in the HTTP DSL. com.hexagonkt.http.server.examples com.hexagonkt.http.server.test","title":"Packages"},{"location":"port_http_server/#index","text":"All Types","title":"Index"},{"location":"port_http_server/alltypes/","text":"This port's purpose is to develop HTTP servers (REST services or Web applications). It defines a DSL to declare HTTP request handlers. All Types \u00b6 Name Summary com.hexagonkt.http.server.examples.BooksTest \u00b6 | com.hexagonkt.http.server.Call \u00b6 HTTP request context. It holds client supplied data and methods to change the response. | com.hexagonkt.http.server.examples.CookiesTest \u00b6 | com.hexagonkt.http.server.CorsSettings \u00b6 | com.hexagonkt.http.server.examples.CorsTest \u00b6 | com.hexagonkt.http.server.ErrorCodeCallback \u00b6 Alias for errors' callbacks. Functions executed to handle a HTTP error code. | com.hexagonkt.http.server.examples.ErrorsTest \u00b6 | com.hexagonkt.http.server.ExceptionCallback \u00b6 Alias for exceptions' callbacks. Functions executed when an exception is thrown. | com.hexagonkt.http.server.examples.FilesTest \u00b6 | com.hexagonkt.http.server.FilterOrder \u00b6 Type of filter. Indicates when the filter is executed. | com.hexagonkt.http.server.examples.FiltersTest \u00b6 | com.hexagonkt.http.server.examples.GenericTest \u00b6 | com.hexagonkt.http.server.Part \u00b6 | com.hexagonkt.http.server.PartTest \u00b6 | com.hexagonkt.http.server.PortHttpServerSamplesTest \u00b6 | com.hexagonkt.http.server.Request \u00b6 Lists would be initialized loading all elements when they are used (set it as lazy in implementations) this will have a performance penalty in favor of ease of use. The alternative would be using a 'Map/List wrapper that delegates calls to abstract methods in the interface (I won't do this just now). | com.hexagonkt.http.server.RequestHandler \u00b6 | com.hexagonkt.http.server.Response \u00b6 Check 'Request' comment. And also note that lists should be updated by engines after callback is processed, this data is like a buffer that needs to be dumped to the real response. | com.hexagonkt.http.server.RouteCallback \u00b6 Alias for routes' and filters' callbacks. Functions executed when a route is matched. | com.hexagonkt.http.server.Router \u00b6 Creates and initializes a Router based on a code block. | com.hexagonkt.http.server.RouterTest \u00b6 | com.hexagonkt.http.server.Server \u00b6 A server that listen to HTTP connections on a port and address and route requests using a router. | com.hexagonkt.http.server.ServerPort \u00b6 Represents a server instance of one kind. | com.hexagonkt.http.server.ServerSettings \u00b6 | com.hexagonkt.http.server.ServerSettingsTest \u00b6 | com.hexagonkt.http.server.ServerTest \u00b6 | com.hexagonkt.http.server.Session \u00b6 Provides session information. | com.hexagonkt.http.server.examples.SessionTest \u00b6 | com.hexagonkt.http.server.test.TestRequest \u00b6 | com.hexagonkt.http.server.test.TestResponse \u00b6 | com.hexagonkt.http.server.test.TestSession \u00b6 | com.hexagonkt.http.server.VoidAdapter \u00b6","title":"Home"},{"location":"port_http_server/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverexamplesbookstest","text":"|","title":"com.hexagonkt.http.server.examples.BooksTest"},{"location":"port_http_server/alltypes/#comhexagonkthttpservercall","text":"HTTP request context. It holds client supplied data and methods to change the response. |","title":"com.hexagonkt.http.server.Call"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverexamplescookiestest","text":"|","title":"com.hexagonkt.http.server.examples.CookiesTest"},{"location":"port_http_server/alltypes/#comhexagonkthttpservercorssettings","text":"|","title":"com.hexagonkt.http.server.CorsSettings"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverexamplescorstest","text":"|","title":"com.hexagonkt.http.server.examples.CorsTest"},{"location":"port_http_server/alltypes/#comhexagonkthttpservererrorcodecallback","text":"Alias for errors' callbacks. Functions executed to handle a HTTP error code. |","title":"com.hexagonkt.http.server.ErrorCodeCallback"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverexampleserrorstest","text":"|","title":"com.hexagonkt.http.server.examples.ErrorsTest"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverexceptioncallback","text":"Alias for exceptions' callbacks. Functions executed when an exception is thrown. |","title":"com.hexagonkt.http.server.ExceptionCallback"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverexamplesfilestest","text":"|","title":"com.hexagonkt.http.server.examples.FilesTest"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverfilterorder","text":"Type of filter. Indicates when the filter is executed. |","title":"com.hexagonkt.http.server.FilterOrder"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverexamplesfilterstest","text":"|","title":"com.hexagonkt.http.server.examples.FiltersTest"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverexamplesgenerictest","text":"|","title":"com.hexagonkt.http.server.examples.GenericTest"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverpart","text":"|","title":"com.hexagonkt.http.server.Part"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverparttest","text":"|","title":"com.hexagonkt.http.server.PartTest"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverporthttpserversamplestest","text":"|","title":"com.hexagonkt.http.server.PortHttpServerSamplesTest"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverrequest","text":"Lists would be initialized loading all elements when they are used (set it as lazy in implementations) this will have a performance penalty in favor of ease of use. The alternative would be using a 'Map/List wrapper that delegates calls to abstract methods in the interface (I won't do this just now). |","title":"com.hexagonkt.http.server.Request"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverrequesthandler","text":"|","title":"com.hexagonkt.http.server.RequestHandler"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverresponse","text":"Check 'Request' comment. And also note that lists should be updated by engines after callback is processed, this data is like a buffer that needs to be dumped to the real response. |","title":"com.hexagonkt.http.server.Response"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverroutecallback","text":"Alias for routes' and filters' callbacks. Functions executed when a route is matched. |","title":"com.hexagonkt.http.server.RouteCallback"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverrouter","text":"Creates and initializes a Router based on a code block. |","title":"com.hexagonkt.http.server.Router"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverroutertest","text":"|","title":"com.hexagonkt.http.server.RouterTest"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverserver","text":"A server that listen to HTTP connections on a port and address and route requests using a router. |","title":"com.hexagonkt.http.server.Server"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverserverport","text":"Represents a server instance of one kind. |","title":"com.hexagonkt.http.server.ServerPort"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverserversettings","text":"|","title":"com.hexagonkt.http.server.ServerSettings"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverserversettingstest","text":"|","title":"com.hexagonkt.http.server.ServerSettingsTest"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverservertest","text":"|","title":"com.hexagonkt.http.server.ServerTest"},{"location":"port_http_server/alltypes/#comhexagonkthttpserversession","text":"Provides session information. |","title":"com.hexagonkt.http.server.Session"},{"location":"port_http_server/alltypes/#comhexagonkthttpserverexamplessessiontest","text":"|","title":"com.hexagonkt.http.server.examples.SessionTest"},{"location":"port_http_server/alltypes/#comhexagonkthttpservertesttestrequest","text":"|","title":"com.hexagonkt.http.server.test.TestRequest"},{"location":"port_http_server/alltypes/#comhexagonkthttpservertesttestresponse","text":"|","title":"com.hexagonkt.http.server.test.TestResponse"},{"location":"port_http_server/alltypes/#comhexagonkthttpservertesttestsession","text":"|","title":"com.hexagonkt.http.server.test.TestSession"},{"location":"port_http_server/alltypes/#comhexagonkthttpservervoidadapter","text":"","title":"com.hexagonkt.http.server.VoidAdapter"},{"location":"port_http_server/com.hexagonkt.http.server/","text":"port_http_server / com.hexagonkt.http.server Package com.hexagonkt.http.server \u00b6 This package defines the classes used in the HTTP DSL. Types \u00b6 Name Summary Call HTTP request context. It holds client supplied data and methods to change the response. class Call CorsSettings data class CorsSettings ErrorCodeCallback Alias for errors' callbacks. Functions executed to handle a HTTP error code. typealias ErrorCodeCallback = Call .( CodedException ) -> Unit ExceptionCallback Alias for exceptions' callbacks. Functions executed when an exception is thrown. typealias ExceptionCallback = Call .( Exception ) -> Unit FilterOrder Type of filter. Indicates when the filter is executed. enum class FilterOrder Part data class Part PartTest class PartTest PortHttpServerSamplesTest abstract class PortHttpServerSamplesTest Request Lists would be initialized loading all elements when they are used (set it as lazy in implementations) this will have a performance penalty in favor of ease of use. The alternative would be using a 'Map/List wrapper that delegates calls to abstract methods in the interface (I won't do this just now). abstract class Request RequestHandler sealed class RequestHandler Response Check 'Request' comment. And also note that lists should be updated by engines after callback is processed, this data is like a buffer that needs to be dumped to the real response. abstract class Response RouteCallback Alias for routes' and filters' callbacks. Functions executed when a route is matched. typealias RouteCallback = Call .() -> Unit Router Creates and initializes a Router based on a code block. class Router RouterTest class RouterTest Server A server that listen to HTTP connections on a port and address and route requests using a router. data class Server ServerPort Represents a server instance of one kind. interface ServerPort ServerSettings data class ServerSettings ServerSettingsTest class ServerSettingsTest ServerTest class ServerTest Session Provides session information. abstract class Session VoidAdapter object VoidAdapter : ServerPort","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/#package-comhexagonkthttpserver","text":"This package defines the classes used in the HTTP DSL.","title":"Package com.hexagonkt.http.server"},{"location":"port_http_server/com.hexagonkt.http.server/#types","text":"Name Summary Call HTTP request context. It holds client supplied data and methods to change the response. class Call CorsSettings data class CorsSettings ErrorCodeCallback Alias for errors' callbacks. Functions executed to handle a HTTP error code. typealias ErrorCodeCallback = Call .( CodedException ) -> Unit ExceptionCallback Alias for exceptions' callbacks. Functions executed when an exception is thrown. typealias ExceptionCallback = Call .( Exception ) -> Unit FilterOrder Type of filter. Indicates when the filter is executed. enum class FilterOrder Part data class Part PartTest class PartTest PortHttpServerSamplesTest abstract class PortHttpServerSamplesTest Request Lists would be initialized loading all elements when they are used (set it as lazy in implementations) this will have a performance penalty in favor of ease of use. The alternative would be using a 'Map/List wrapper that delegates calls to abstract methods in the interface (I won't do this just now). abstract class Request RequestHandler sealed class RequestHandler Response Check 'Request' comment. And also note that lists should be updated by engines after callback is processed, this data is like a buffer that needs to be dumped to the real response. abstract class Response RouteCallback Alias for routes' and filters' callbacks. Functions executed when a route is matched. typealias RouteCallback = Call .() -> Unit Router Creates and initializes a Router based on a code block. class Router RouterTest class RouterTest Server A server that listen to HTTP connections on a port and address and route requests using a router. data class Server ServerPort Represents a server instance of one kind. interface ServerPort ServerSettings data class ServerSettings ServerSettingsTest class ServerSettingsTest ServerTest class ServerTest Session Provides session information. abstract class Session VoidAdapter object VoidAdapter : ServerPort","title":"Types"},{"location":"port_http_server/com.hexagonkt.http.server/-error-code-callback/","text":"port_http_server / com.hexagonkt.http.server / ErrorCodeCallback ErrorCodeCallback \u00b6 typealias ErrorCodeCallback = Call .( CodedException ) -> Unit Alias for errors' callbacks. Functions executed to handle a HTTP error code.","title":" error code callback"},{"location":"port_http_server/com.hexagonkt.http.server/-error-code-callback/#errorcodecallback","text":"typealias ErrorCodeCallback = Call .( CodedException ) -> Unit Alias for errors' callbacks. Functions executed to handle a HTTP error code.","title":"ErrorCodeCallback"},{"location":"port_http_server/com.hexagonkt.http.server/-exception-callback/","text":"port_http_server / com.hexagonkt.http.server / ExceptionCallback ExceptionCallback \u00b6 typealias ExceptionCallback = Call .( Exception ) -> Unit Alias for exceptions' callbacks. Functions executed when an exception is thrown.","title":" exception callback"},{"location":"port_http_server/com.hexagonkt.http.server/-exception-callback/#exceptioncallback","text":"typealias ExceptionCallback = Call .( Exception ) -> Unit Alias for exceptions' callbacks. Functions executed when an exception is thrown.","title":"ExceptionCallback"},{"location":"port_http_server/com.hexagonkt.http.server/-route-callback/","text":"port_http_server / com.hexagonkt.http.server / RouteCallback RouteCallback \u00b6 typealias RouteCallback = Call .() -> Unit Alias for routes' and filters' callbacks. Functions executed when a route is matched.","title":" route callback"},{"location":"port_http_server/com.hexagonkt.http.server/-route-callback/#routecallback","text":"typealias RouteCallback = Call .() -> Unit Alias for routes' and filters' callbacks. Functions executed when a route is matched.","title":"RouteCallback"},{"location":"port_http_server/com.hexagonkt.http.server/-call/","text":"port_http_server / com.hexagonkt.http.server / Call Call \u00b6 class Call HTTP request context. It holds client supplied data and methods to change the response. TODO Move Request, Response and Session abstract methods here and pass the call to them Constructors \u00b6 Name Summary <init> HTTP request context. It holds client supplied data and methods to change the response. Call ( request : Request , response : Response , session : Session ) Properties \u00b6 Name Summary attributes Call attributes (for the current request). Same as HttpServletRequest.setAttribute(). val attributes: MutableMap < String , Any > formParameters val formParameters: Map < String , List < String >> parameters val parameters: Map < String , List < String >> pathParameters val pathParameters: RequiredKeysMap < String , String > queryParameters val queryParameters: Map < String , List < String >> request val request: Request requestFormat val requestFormat: SerializationFormat requestType val requestType: String response val response: Response responseFormat val responseFormat: SerializationFormat responseType val responseType: String session val session: Session Functions \u00b6 Name Summary halt fun halt ( content : Any ): Nothing fun halt ( code : Int = 500 , content : Any = \"\" ): Nothing ok fun ok ( content : Any = \"\" , contentType : String ? = null ): Unit fun ok ( content : Any , serializationFormat : SerializationFormat = responseFormat , charset : Charset ? = null ): Unit redirect fun redirect ( url : String ): Unit send fun send ( code : Int , content : Any = \"\" , contentType : String ? = null ): Unit fun send ( code : Int , content : Any , serializationFormat : SerializationFormat , charset : Charset ? ): Unit fun send ( code : Int , content : Any , contentType : ContentType ): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-call/#call","text":"class Call HTTP request context. It holds client supplied data and methods to change the response. TODO Move Request, Response and Session abstract methods here and pass the call to them","title":"Call"},{"location":"port_http_server/com.hexagonkt.http.server/-call/#constructors","text":"Name Summary <init> HTTP request context. It holds client supplied data and methods to change the response. Call ( request : Request , response : Response , session : Session )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-call/#properties","text":"Name Summary attributes Call attributes (for the current request). Same as HttpServletRequest.setAttribute(). val attributes: MutableMap < String , Any > formParameters val formParameters: Map < String , List < String >> parameters val parameters: Map < String , List < String >> pathParameters val pathParameters: RequiredKeysMap < String , String > queryParameters val queryParameters: Map < String , List < String >> request val request: Request requestFormat val requestFormat: SerializationFormat requestType val requestType: String response val response: Response responseFormat val responseFormat: SerializationFormat responseType val responseType: String session val session: Session","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-call/#functions","text":"Name Summary halt fun halt ( content : Any ): Nothing fun halt ( code : Int = 500 , content : Any = \"\" ): Nothing ok fun ok ( content : Any = \"\" , contentType : String ? = null ): Unit fun ok ( content : Any , serializationFormat : SerializationFormat = responseFormat , charset : Charset ? = null ): Unit redirect fun redirect ( url : String ): Unit send fun send ( code : Int , content : Any = \"\" , contentType : String ? = null ): Unit fun send ( code : Int , content : Any , serializationFormat : SerializationFormat , charset : Charset ? ): Unit fun send ( code : Int , content : Any , contentType : ContentType ): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server/-call/-init-/","text":"port_http_server / com.hexagonkt.http.server / Call / <init> <init> \u00b6 Call ( request : Request , response : Response , session : Session ) HTTP request context. It holds client supplied data and methods to change the response. TODO Move Request, Response and Session abstract methods here and pass the call to them","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-call/-init-/#init","text":"Call ( request : Request , response : Response , session : Session ) HTTP request context. It holds client supplied data and methods to change the response. TODO Move Request, Response and Session abstract methods here and pass the call to them","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-call/attributes/","text":"port_http_server / com.hexagonkt.http.server / Call / attributes attributes \u00b6 val attributes: MutableMap < String , Any > Call attributes (for the current request). Same as HttpServletRequest.setAttribute(). Getter Call attributes (for the current request). Same as HttpServletRequest.setAttribute().","title":"Attributes"},{"location":"port_http_server/com.hexagonkt.http.server/-call/attributes/#attributes","text":"val attributes: MutableMap < String , Any > Call attributes (for the current request). Same as HttpServletRequest.setAttribute(). Getter Call attributes (for the current request). Same as HttpServletRequest.setAttribute().","title":"attributes"},{"location":"port_http_server/com.hexagonkt.http.server/-call/form-parameters/","text":"port_http_server / com.hexagonkt.http.server / Call / formParameters formParameters \u00b6 val formParameters: Map < String , List < String >>","title":"Form parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-call/form-parameters/#formparameters","text":"val formParameters: Map < String , List < String >>","title":"formParameters"},{"location":"port_http_server/com.hexagonkt.http.server/-call/halt/","text":"port_http_server / com.hexagonkt.http.server / Call / halt halt \u00b6 fun halt ( content : Any ): Nothing fun halt ( code : Int = 500 , content : Any = \"\" ): Nothing","title":"Halt"},{"location":"port_http_server/com.hexagonkt.http.server/-call/halt/#halt","text":"fun halt ( content : Any ): Nothing fun halt ( code : Int = 500 , content : Any = \"\" ): Nothing","title":"halt"},{"location":"port_http_server/com.hexagonkt.http.server/-call/ok/","text":"port_http_server / com.hexagonkt.http.server / Call / ok ok \u00b6 fun ok ( content : Any = \"\" , contentType : String ? = null ): Unit fun ok ( content : Any , serializationFormat : SerializationFormat = responseFormat , charset : Charset ? = null ): Unit","title":"Ok"},{"location":"port_http_server/com.hexagonkt.http.server/-call/ok/#ok","text":"fun ok ( content : Any = \"\" , contentType : String ? = null ): Unit fun ok ( content : Any , serializationFormat : SerializationFormat = responseFormat , charset : Charset ? = null ): Unit","title":"ok"},{"location":"port_http_server/com.hexagonkt.http.server/-call/parameters/","text":"port_http_server / com.hexagonkt.http.server / Call / parameters parameters \u00b6 val parameters: Map < String , List < String >>","title":"Parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-call/parameters/#parameters","text":"val parameters: Map < String , List < String >>","title":"parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-call/path-parameters/","text":"port_http_server / com.hexagonkt.http.server / Call / pathParameters pathParameters \u00b6 val pathParameters: RequiredKeysMap < String , String >","title":"Path parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-call/path-parameters/#pathparameters","text":"val pathParameters: RequiredKeysMap < String , String >","title":"pathParameters"},{"location":"port_http_server/com.hexagonkt.http.server/-call/query-parameters/","text":"port_http_server / com.hexagonkt.http.server / Call / queryParameters queryParameters \u00b6 val queryParameters: Map < String , List < String >>","title":"Query parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-call/query-parameters/#queryparameters","text":"val queryParameters: Map < String , List < String >>","title":"queryParameters"},{"location":"port_http_server/com.hexagonkt.http.server/-call/redirect/","text":"port_http_server / com.hexagonkt.http.server / Call / redirect redirect \u00b6 fun redirect ( url : String ): Unit","title":"Redirect"},{"location":"port_http_server/com.hexagonkt.http.server/-call/redirect/#redirect","text":"fun redirect ( url : String ): Unit","title":"redirect"},{"location":"port_http_server/com.hexagonkt.http.server/-call/request-format/","text":"port_http_server / com.hexagonkt.http.server / Call / requestFormat requestFormat \u00b6 val requestFormat: SerializationFormat","title":"Request format"},{"location":"port_http_server/com.hexagonkt.http.server/-call/request-format/#requestformat","text":"val requestFormat: SerializationFormat","title":"requestFormat"},{"location":"port_http_server/com.hexagonkt.http.server/-call/request-type/","text":"port_http_server / com.hexagonkt.http.server / Call / requestType requestType \u00b6 val requestType: String","title":"Request type"},{"location":"port_http_server/com.hexagonkt.http.server/-call/request-type/#requesttype","text":"val requestType: String","title":"requestType"},{"location":"port_http_server/com.hexagonkt.http.server/-call/request/","text":"port_http_server / com.hexagonkt.http.server / Call / request request \u00b6 val request: Request","title":"Request"},{"location":"port_http_server/com.hexagonkt.http.server/-call/request/#request","text":"val request: Request","title":"request"},{"location":"port_http_server/com.hexagonkt.http.server/-call/response-format/","text":"port_http_server / com.hexagonkt.http.server / Call / responseFormat responseFormat \u00b6 val responseFormat: SerializationFormat","title":"Response format"},{"location":"port_http_server/com.hexagonkt.http.server/-call/response-format/#responseformat","text":"val responseFormat: SerializationFormat","title":"responseFormat"},{"location":"port_http_server/com.hexagonkt.http.server/-call/response-type/","text":"port_http_server / com.hexagonkt.http.server / Call / responseType responseType \u00b6 val responseType: String","title":"Response type"},{"location":"port_http_server/com.hexagonkt.http.server/-call/response-type/#responsetype","text":"val responseType: String","title":"responseType"},{"location":"port_http_server/com.hexagonkt.http.server/-call/response/","text":"port_http_server / com.hexagonkt.http.server / Call / response response \u00b6 val response: Response","title":"Response"},{"location":"port_http_server/com.hexagonkt.http.server/-call/response/#response","text":"val response: Response","title":"response"},{"location":"port_http_server/com.hexagonkt.http.server/-call/send/","text":"port_http_server / com.hexagonkt.http.server / Call / send send \u00b6 fun send ( code : Int , content : Any = \"\" , contentType : String ? = null ): Unit fun send ( code : Int , content : Any , serializationFormat : SerializationFormat , charset : Charset ? ): Unit fun send ( code : Int , content : Any , contentType : ContentType ): Unit","title":"Send"},{"location":"port_http_server/com.hexagonkt.http.server/-call/send/#send","text":"fun send ( code : Int , content : Any = \"\" , contentType : String ? = null ): Unit fun send ( code : Int , content : Any , serializationFormat : SerializationFormat , charset : Charset ? ): Unit fun send ( code : Int , content : Any , contentType : ContentType ): Unit","title":"send"},{"location":"port_http_server/com.hexagonkt.http.server/-call/session/","text":"port_http_server / com.hexagonkt.http.server / Call / session session \u00b6 val session: Session","title":"Session"},{"location":"port_http_server/com.hexagonkt.http.server/-call/session/#session","text":"val session: Session","title":"session"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/","text":"port_http_server / com.hexagonkt.http.server / CorsSettings CorsSettings \u00b6 data class CorsSettings Constructors \u00b6 Name Summary <init> CorsSettings ( allowedOrigin : String = \"*\" , allowedMethods : Set < Method > = ALL , allowedHeaders : Set < String > = emptySet (), exposedHeaders : Set < String > = emptySet (), supportCredentials : Boolean = true , preFlightStatus : Int = 204 , preFlightMaxAge : Long = 0 ) CorsSettings ( allowedOrigin : Regex , allowedMethods : Set < Method > = ALL , allowedHeaders : Set < String > = emptySet (), exposedHeaders : Set < String > = emptySet (), supportCredentials : Boolean = true , preFlightStatus : Int = 204 , preFlightMaxAge : Long = 0 ) Properties \u00b6 Name Summary allowedHeaders val allowedHeaders: Set < String > allowedMethods val allowedMethods: Set < Method > allowedOrigin val allowedOrigin: Regex exposedHeaders val exposedHeaders: Set < String > preFlightMaxAge val preFlightMaxAge: Long preFlightStatus val preFlightStatus: Int supportCredentials val supportCredentials: Boolean Functions \u00b6 Name Summary accessControlAllowOrigin fun accessControlAllowOrigin ( origin : String ): String allowOrigin fun allowOrigin ( origin : String ): Boolean","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/#corssettings","text":"data class CorsSettings","title":"CorsSettings"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/#constructors","text":"Name Summary <init> CorsSettings ( allowedOrigin : String = \"*\" , allowedMethods : Set < Method > = ALL , allowedHeaders : Set < String > = emptySet (), exposedHeaders : Set < String > = emptySet (), supportCredentials : Boolean = true , preFlightStatus : Int = 204 , preFlightMaxAge : Long = 0 ) CorsSettings ( allowedOrigin : Regex , allowedMethods : Set < Method > = ALL , allowedHeaders : Set < String > = emptySet (), exposedHeaders : Set < String > = emptySet (), supportCredentials : Boolean = true , preFlightStatus : Int = 204 , preFlightMaxAge : Long = 0 )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/#properties","text":"Name Summary allowedHeaders val allowedHeaders: Set < String > allowedMethods val allowedMethods: Set < Method > allowedOrigin val allowedOrigin: Regex exposedHeaders val exposedHeaders: Set < String > preFlightMaxAge val preFlightMaxAge: Long preFlightStatus val preFlightStatus: Int supportCredentials val supportCredentials: Boolean","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/#functions","text":"Name Summary accessControlAllowOrigin fun accessControlAllowOrigin ( origin : String ): String allowOrigin fun allowOrigin ( origin : String ): Boolean","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/-init-/","text":"port_http_server / com.hexagonkt.http.server / CorsSettings / <init> <init> \u00b6 CorsSettings ( allowedOrigin : String = \"*\" , allowedMethods : Set < Method > = ALL , allowedHeaders : Set < String > = emptySet (), exposedHeaders : Set < String > = emptySet (), supportCredentials : Boolean = true , preFlightStatus : Int = 204 , preFlightMaxAge : Long = 0 ) CorsSettings ( allowedOrigin : Regex , allowedMethods : Set < Method > = ALL , allowedHeaders : Set < String > = emptySet (), exposedHeaders : Set < String > = emptySet (), supportCredentials : Boolean = true , preFlightStatus : Int = 204 , preFlightMaxAge : Long = 0 )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/-init-/#init","text":"CorsSettings ( allowedOrigin : String = \"*\" , allowedMethods : Set < Method > = ALL , allowedHeaders : Set < String > = emptySet (), exposedHeaders : Set < String > = emptySet (), supportCredentials : Boolean = true , preFlightStatus : Int = 204 , preFlightMaxAge : Long = 0 ) CorsSettings ( allowedOrigin : Regex , allowedMethods : Set < Method > = ALL , allowedHeaders : Set < String > = emptySet (), exposedHeaders : Set < String > = emptySet (), supportCredentials : Boolean = true , preFlightStatus : Int = 204 , preFlightMaxAge : Long = 0 )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/access-control-allow-origin/","text":"port_http_server / com.hexagonkt.http.server / CorsSettings / accessControlAllowOrigin accessControlAllowOrigin \u00b6 fun accessControlAllowOrigin ( origin : String ): String","title":"Access control allow origin"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/access-control-allow-origin/#accesscontrolalloworigin","text":"fun accessControlAllowOrigin ( origin : String ): String","title":"accessControlAllowOrigin"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/allow-origin/","text":"port_http_server / com.hexagonkt.http.server / CorsSettings / allowOrigin allowOrigin \u00b6 fun allowOrigin ( origin : String ): Boolean","title":"Allow origin"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/allow-origin/#alloworigin","text":"fun allowOrigin ( origin : String ): Boolean","title":"allowOrigin"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/allowed-headers/","text":"port_http_server / com.hexagonkt.http.server / CorsSettings / allowedHeaders allowedHeaders \u00b6 val allowedHeaders: Set < String >","title":"Allowed headers"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/allowed-headers/#allowedheaders","text":"val allowedHeaders: Set < String >","title":"allowedHeaders"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/allowed-methods/","text":"port_http_server / com.hexagonkt.http.server / CorsSettings / allowedMethods allowedMethods \u00b6 val allowedMethods: Set < Method >","title":"Allowed methods"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/allowed-methods/#allowedmethods","text":"val allowedMethods: Set < Method >","title":"allowedMethods"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/allowed-origin/","text":"port_http_server / com.hexagonkt.http.server / CorsSettings / allowedOrigin allowedOrigin \u00b6 val allowedOrigin: Regex","title":"Allowed origin"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/allowed-origin/#allowedorigin","text":"val allowedOrigin: Regex","title":"allowedOrigin"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/exposed-headers/","text":"port_http_server / com.hexagonkt.http.server / CorsSettings / exposedHeaders exposedHeaders \u00b6 val exposedHeaders: Set < String >","title":"Exposed headers"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/exposed-headers/#exposedheaders","text":"val exposedHeaders: Set < String >","title":"exposedHeaders"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/pre-flight-max-age/","text":"port_http_server / com.hexagonkt.http.server / CorsSettings / preFlightMaxAge preFlightMaxAge \u00b6 val preFlightMaxAge: Long","title":"Pre flight max age"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/pre-flight-max-age/#preflightmaxage","text":"val preFlightMaxAge: Long","title":"preFlightMaxAge"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/pre-flight-status/","text":"port_http_server / com.hexagonkt.http.server / CorsSettings / preFlightStatus preFlightStatus \u00b6 val preFlightStatus: Int","title":"Pre flight status"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/pre-flight-status/#preflightstatus","text":"val preFlightStatus: Int","title":"preFlightStatus"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/support-credentials/","text":"port_http_server / com.hexagonkt.http.server / CorsSettings / supportCredentials supportCredentials \u00b6 val supportCredentials: Boolean","title":"Support credentials"},{"location":"port_http_server/com.hexagonkt.http.server/-cors-settings/support-credentials/#supportcredentials","text":"val supportCredentials: Boolean","title":"supportCredentials"},{"location":"port_http_server/com.hexagonkt.http.server/-filter-order/","text":"port_http_server / com.hexagonkt.http.server / FilterOrder FilterOrder \u00b6 enum class FilterOrder Type of filter. Indicates when the filter is executed. Enum Values \u00b6 Name Summary AFTER Filter executed after the route is processed. BEFORE Filter executed before the route is processed.","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-filter-order/#filterorder","text":"enum class FilterOrder Type of filter. Indicates when the filter is executed.","title":"FilterOrder"},{"location":"port_http_server/com.hexagonkt.http.server/-filter-order/#enum-values","text":"Name Summary AFTER Filter executed after the route is processed. BEFORE Filter executed before the route is processed.","title":"Enum Values"},{"location":"port_http_server/com.hexagonkt.http.server/-filter-order/-a-f-t-e-r/","text":"port_http_server / com.hexagonkt.http.server / FilterOrder / AFTER AFTER \u00b6 AFTER Filter executed after the route is processed.","title":" a f t e r"},{"location":"port_http_server/com.hexagonkt.http.server/-filter-order/-a-f-t-e-r/#after","text":"AFTER Filter executed after the route is processed.","title":"AFTER"},{"location":"port_http_server/com.hexagonkt.http.server/-filter-order/-b-e-f-o-r-e/","text":"port_http_server / com.hexagonkt.http.server / FilterOrder / BEFORE BEFORE \u00b6 BEFORE Filter executed before the route is processed.","title":" b e f o r e"},{"location":"port_http_server/com.hexagonkt.http.server/-filter-order/-b-e-f-o-r-e/#before","text":"BEFORE Filter executed before the route is processed.","title":"BEFORE"},{"location":"port_http_server/com.hexagonkt.http.server/-part/","text":"port_http_server / com.hexagonkt.http.server / Part Part \u00b6 data class Part Constructors \u00b6 Name Summary <init> Part ( contentType : String ? , headers : Map < String , List < String >> , inputStream : InputStream , name : String , size : Long , submittedFileName : String ? ) Properties \u00b6 Name Summary contentType val contentType: String ? headers val headers: Map < String , List < String >> inputStream val inputStream: InputStream name val name: String size val size: Long submittedFileName val submittedFileName: String ?","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-part/#part","text":"data class Part","title":"Part"},{"location":"port_http_server/com.hexagonkt.http.server/-part/#constructors","text":"Name Summary <init> Part ( contentType : String ? , headers : Map < String , List < String >> , inputStream : InputStream , name : String , size : Long , submittedFileName : String ? )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-part/#properties","text":"Name Summary contentType val contentType: String ? headers val headers: Map < String , List < String >> inputStream val inputStream: InputStream name val name: String size val size: Long submittedFileName val submittedFileName: String ?","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-part/-init-/","text":"port_http_server / com.hexagonkt.http.server / Part / <init> <init> \u00b6 Part ( contentType : String ? , headers : Map < String , List < String >> , inputStream : InputStream , name : String , size : Long , submittedFileName : String ? )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-part/-init-/#init","text":"Part ( contentType : String ? , headers : Map < String , List < String >> , inputStream : InputStream , name : String , size : Long , submittedFileName : String ? )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-part/content-type/","text":"port_http_server / com.hexagonkt.http.server / Part / contentType contentType \u00b6 val contentType: String ?","title":"Content type"},{"location":"port_http_server/com.hexagonkt.http.server/-part/content-type/#contenttype","text":"val contentType: String ?","title":"contentType"},{"location":"port_http_server/com.hexagonkt.http.server/-part/headers/","text":"port_http_server / com.hexagonkt.http.server / Part / headers headers \u00b6 val headers: Map < String , List < String >>","title":"Headers"},{"location":"port_http_server/com.hexagonkt.http.server/-part/headers/#headers","text":"val headers: Map < String , List < String >>","title":"headers"},{"location":"port_http_server/com.hexagonkt.http.server/-part/input-stream/","text":"port_http_server / com.hexagonkt.http.server / Part / inputStream inputStream \u00b6 val inputStream: InputStream","title":"Input stream"},{"location":"port_http_server/com.hexagonkt.http.server/-part/input-stream/#inputstream","text":"val inputStream: InputStream","title":"inputStream"},{"location":"port_http_server/com.hexagonkt.http.server/-part/name/","text":"port_http_server / com.hexagonkt.http.server / Part / name name \u00b6 val name: String","title":"Name"},{"location":"port_http_server/com.hexagonkt.http.server/-part/name/#name","text":"val name: String","title":"name"},{"location":"port_http_server/com.hexagonkt.http.server/-part/size/","text":"port_http_server / com.hexagonkt.http.server / Part / size size \u00b6 val size: Long","title":"Size"},{"location":"port_http_server/com.hexagonkt.http.server/-part/size/#size","text":"val size: Long","title":"size"},{"location":"port_http_server/com.hexagonkt.http.server/-part/submitted-file-name/","text":"port_http_server / com.hexagonkt.http.server / Part / submittedFileName submittedFileName \u00b6 val submittedFileName: String ?","title":"Submitted file name"},{"location":"port_http_server/com.hexagonkt.http.server/-part/submitted-file-name/#submittedfilename","text":"val submittedFileName: String ?","title":"submittedFileName"},{"location":"port_http_server/com.hexagonkt.http.server/-part-test/","text":"port_http_server / com.hexagonkt.http.server / PartTest PartTest \u00b6 class PartTest Constructors \u00b6 Name Summary <init> PartTest () Functions \u00b6 Name Summary Full part contains expected values fun Full part contains expected values (): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-part-test/#parttest","text":"class PartTest","title":"PartTest"},{"location":"port_http_server/com.hexagonkt.http.server/-part-test/#constructors","text":"Name Summary <init> PartTest ()","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-part-test/#functions","text":"Name Summary Full part contains expected values fun Full part contains expected values (): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server/-part-test/-full part contains expected values/","text":"port_http_server / com.hexagonkt.http.server / PartTest / Full part contains expected values Full part contains expected values \u00b6 fun Full part contains expected values (): Unit","title":" full part contains expected values"},{"location":"port_http_server/com.hexagonkt.http.server/-part-test/-full part contains expected values/#full-part-contains-expected-values","text":"fun Full part contains expected values (): Unit","title":"Full part contains expected values"},{"location":"port_http_server/com.hexagonkt.http.server/-part-test/-init-/","text":"port_http_server / com.hexagonkt.http.server / PartTest / <init> <init> \u00b6 PartTest ()","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-part-test/-init-/#init","text":"PartTest ()","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/","text":"port_http_server / com.hexagonkt.http.server / PortHttpServerSamplesTest PortHttpServerSamplesTest \u00b6 abstract class PortHttpServerSamplesTest Constructors \u00b6 Name Summary <init> PortHttpServerSamplesTest ( adapter : ServerPort ) Properties \u00b6 Name Summary adapter val adapter: ServerPort Functions \u00b6 Name Summary callbacks fun callbacks (): Unit errors fun errors (): Unit files fun files (): Unit filters fun filters (): Unit routeGroups fun routeGroups (): Unit routers fun routers (): Unit routesCreation fun routesCreation (): Unit serverCreation fun serverCreation (): Unit test fun test (): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/#porthttpserversamplestest","text":"abstract class PortHttpServerSamplesTest","title":"PortHttpServerSamplesTest"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/#constructors","text":"Name Summary <init> PortHttpServerSamplesTest ( adapter : ServerPort )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/#properties","text":"Name Summary adapter val adapter: ServerPort","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/#functions","text":"Name Summary callbacks fun callbacks (): Unit errors fun errors (): Unit files fun files (): Unit filters fun filters (): Unit routeGroups fun routeGroups (): Unit routers fun routers (): Unit routesCreation fun routesCreation (): Unit serverCreation fun serverCreation (): Unit test fun test (): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/-init-/","text":"port_http_server / com.hexagonkt.http.server / PortHttpServerSamplesTest / <init> <init> \u00b6 PortHttpServerSamplesTest ( adapter : ServerPort )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/-init-/#init","text":"PortHttpServerSamplesTest ( adapter : ServerPort )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/adapter/","text":"port_http_server / com.hexagonkt.http.server / PortHttpServerSamplesTest / adapter adapter \u00b6 val adapter: ServerPort","title":"Adapter"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/adapter/#adapter","text":"val adapter: ServerPort","title":"adapter"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/callbacks/","text":"port_http_server / com.hexagonkt.http.server / PortHttpServerSamplesTest / callbacks callbacks \u00b6 fun callbacks (): Unit","title":"Callbacks"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/callbacks/#callbacks","text":"fun callbacks (): Unit","title":"callbacks"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/errors/","text":"port_http_server / com.hexagonkt.http.server / PortHttpServerSamplesTest / errors errors \u00b6 fun errors (): Unit","title":"Errors"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/errors/#errors","text":"fun errors (): Unit","title":"errors"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/files/","text":"port_http_server / com.hexagonkt.http.server / PortHttpServerSamplesTest / files files \u00b6 fun files (): Unit","title":"Files"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/files/#files","text":"fun files (): Unit","title":"files"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/filters/","text":"port_http_server / com.hexagonkt.http.server / PortHttpServerSamplesTest / filters filters \u00b6 fun filters (): Unit","title":"Filters"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/filters/#filters","text":"fun filters (): Unit","title":"filters"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/route-groups/","text":"port_http_server / com.hexagonkt.http.server / PortHttpServerSamplesTest / routeGroups routeGroups \u00b6 fun routeGroups (): Unit","title":"Route groups"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/route-groups/#routegroups","text":"fun routeGroups (): Unit","title":"routeGroups"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/routers/","text":"port_http_server / com.hexagonkt.http.server / PortHttpServerSamplesTest / routers routers \u00b6 fun routers (): Unit","title":"Routers"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/routers/#routers","text":"fun routers (): Unit","title":"routers"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/routes-creation/","text":"port_http_server / com.hexagonkt.http.server / PortHttpServerSamplesTest / routesCreation routesCreation \u00b6 fun routesCreation (): Unit","title":"Routes creation"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/routes-creation/#routescreation","text":"fun routesCreation (): Unit","title":"routesCreation"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/server-creation/","text":"port_http_server / com.hexagonkt.http.server / PortHttpServerSamplesTest / serverCreation serverCreation \u00b6 fun serverCreation (): Unit","title":"Server creation"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/server-creation/#servercreation","text":"fun serverCreation (): Unit","title":"serverCreation"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/test/","text":"port_http_server / com.hexagonkt.http.server / PortHttpServerSamplesTest / test test \u00b6 fun test (): Unit","title":"Test"},{"location":"port_http_server/com.hexagonkt.http.server/-port-http-server-samples-test/test/#test","text":"fun test (): Unit","title":"test"},{"location":"port_http_server/com.hexagonkt.http.server/-request/","text":"port_http_server / com.hexagonkt.http.server / Request Request \u00b6 abstract class Request Lists would be initialized loading all elements when they are used (set it as lazy in implementations) this will have a performance penalty in favor of ease of use. The alternative would be using a 'Map/List wrapper that delegates calls to abstract methods in the interface (I won't do this just now). HTTP request context. It holds client supplied data and methods to change the response. Constructors \u00b6 Name Summary <init> Lists would be initialized loading all elements when they are used (set it as lazy in implementations) this will have a performance penalty in favor of ease of use. The alternative would be using a 'Map/List wrapper that delegates calls to abstract methods in the interface (I won't do this just now). Request () Properties \u00b6 Name Summary accept val accept: List < String > body val body: String contentLength val contentLength: Long contentType val contentType: String ? cookies val cookies: Map < String , HttpCookie > formParameters val formParameters: Map < String , List < String >> headers val headers: Map < String , List < String >> host val host: String ip val ip: String method val method: Method origin val origin: String ? parameters val parameters: Map < String , List < String >> parts val parts: Map < String , Part > path val path: String pathParameters val pathParameters: RequiredKeysMap < String , String > port val port: Int preferredType val preferredType: String ? queryParameters val queryParameters: Map < String , List < String >> queryString val queryString: String referer val referer: String ? scheme val scheme: String secure val secure: Boolean url val url: String userAgent val userAgent: String ? Functions \u00b6 Name Summary body fun < T : Any > body ( type : KClass < T > ): T fun < T : Any > body (): T bodyObjects fun < T : Any > bodyObjects ( type : KClass < T > ): List < T > fun < T : Any > bodyObjects (): List < T > contentLength abstract fun contentLength (): Long contentType abstract fun contentType (): String ? cookies abstract fun cookies (): Map < String , HttpCookie > formParameters abstract fun formParameters (): Map < String , List < String >> headers abstract fun headers (): Map < String , List < String >> host abstract fun host (): String ip abstract fun ip (): String loadBody abstract fun loadBody (): String method abstract fun method (): Method parameters abstract fun parameters (): Map < String , List < String >> parts abstract fun parts (): Map < String , Part > path abstract fun path (): String pathParameters abstract fun pathParameters (): Map < String , String > port abstract fun port (): Int queryParameters abstract fun queryParameters (): Map < String , List < String >> queryString abstract fun queryString (): String scheme abstract fun scheme (): String url abstract fun url (): String","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-request/#request","text":"abstract class Request Lists would be initialized loading all elements when they are used (set it as lazy in implementations) this will have a performance penalty in favor of ease of use. The alternative would be using a 'Map/List wrapper that delegates calls to abstract methods in the interface (I won't do this just now). HTTP request context. It holds client supplied data and methods to change the response.","title":"Request"},{"location":"port_http_server/com.hexagonkt.http.server/-request/#constructors","text":"Name Summary <init> Lists would be initialized loading all elements when they are used (set it as lazy in implementations) this will have a performance penalty in favor of ease of use. The alternative would be using a 'Map/List wrapper that delegates calls to abstract methods in the interface (I won't do this just now). Request ()","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-request/#properties","text":"Name Summary accept val accept: List < String > body val body: String contentLength val contentLength: Long contentType val contentType: String ? cookies val cookies: Map < String , HttpCookie > formParameters val formParameters: Map < String , List < String >> headers val headers: Map < String , List < String >> host val host: String ip val ip: String method val method: Method origin val origin: String ? parameters val parameters: Map < String , List < String >> parts val parts: Map < String , Part > path val path: String pathParameters val pathParameters: RequiredKeysMap < String , String > port val port: Int preferredType val preferredType: String ? queryParameters val queryParameters: Map < String , List < String >> queryString val queryString: String referer val referer: String ? scheme val scheme: String secure val secure: Boolean url val url: String userAgent val userAgent: String ?","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-request/#functions","text":"Name Summary body fun < T : Any > body ( type : KClass < T > ): T fun < T : Any > body (): T bodyObjects fun < T : Any > bodyObjects ( type : KClass < T > ): List < T > fun < T : Any > bodyObjects (): List < T > contentLength abstract fun contentLength (): Long contentType abstract fun contentType (): String ? cookies abstract fun cookies (): Map < String , HttpCookie > formParameters abstract fun formParameters (): Map < String , List < String >> headers abstract fun headers (): Map < String , List < String >> host abstract fun host (): String ip abstract fun ip (): String loadBody abstract fun loadBody (): String method abstract fun method (): Method parameters abstract fun parameters (): Map < String , List < String >> parts abstract fun parts (): Map < String , Part > path abstract fun path (): String pathParameters abstract fun pathParameters (): Map < String , String > port abstract fun port (): Int queryParameters abstract fun queryParameters (): Map < String , List < String >> queryString abstract fun queryString (): String scheme abstract fun scheme (): String url abstract fun url (): String","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server/-request/-init-/","text":"port_http_server / com.hexagonkt.http.server / Request / <init> <init> \u00b6 Request () Lists would be initialized loading all elements when they are used (set it as lazy in implementations) this will have a performance penalty in favor of ease of use. The alternative would be using a 'Map/List wrapper that delegates calls to abstract methods in the interface (I won't do this just now). HTTP request context. It holds client supplied data and methods to change the response.","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-request/-init-/#init","text":"Request () Lists would be initialized loading all elements when they are used (set it as lazy in implementations) this will have a performance penalty in favor of ease of use. The alternative would be using a 'Map/List wrapper that delegates calls to abstract methods in the interface (I won't do this just now). HTTP request context. It holds client supplied data and methods to change the response.","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-request/accept/","text":"port_http_server / com.hexagonkt.http.server / Request / accept accept \u00b6 val accept: List < String >","title":"Accept"},{"location":"port_http_server/com.hexagonkt.http.server/-request/accept/#accept","text":"val accept: List < String >","title":"accept"},{"location":"port_http_server/com.hexagonkt.http.server/-request/body-objects/","text":"port_http_server / com.hexagonkt.http.server / Request / bodyObjects bodyObjects \u00b6 fun < T : Any > bodyObjects ( type : KClass < T > ): List < T > fun < reified T : Any > bodyObjects (): List < T >","title":"Body objects"},{"location":"port_http_server/com.hexagonkt.http.server/-request/body-objects/#bodyobjects","text":"fun < T : Any > bodyObjects ( type : KClass < T > ): List < T > fun < reified T : Any > bodyObjects (): List < T >","title":"bodyObjects"},{"location":"port_http_server/com.hexagonkt.http.server/-request/body/","text":"port_http_server / com.hexagonkt.http.server / Request / body body \u00b6 val body: String fun < T : Any > body ( type : KClass < T > ): T fun < reified T : Any > body (): T","title":"Body"},{"location":"port_http_server/com.hexagonkt.http.server/-request/body/#body","text":"val body: String fun < T : Any > body ( type : KClass < T > ): T fun < reified T : Any > body (): T","title":"body"},{"location":"port_http_server/com.hexagonkt.http.server/-request/content-length/","text":"port_http_server / com.hexagonkt.http.server / Request / contentLength contentLength \u00b6 val contentLength: Long protected abstract fun contentLength (): Long","title":"Content length"},{"location":"port_http_server/com.hexagonkt.http.server/-request/content-length/#contentlength","text":"val contentLength: Long protected abstract fun contentLength (): Long","title":"contentLength"},{"location":"port_http_server/com.hexagonkt.http.server/-request/content-type/","text":"port_http_server / com.hexagonkt.http.server / Request / contentType contentType \u00b6 val contentType: String ? protected abstract fun contentType (): String ?","title":"Content type"},{"location":"port_http_server/com.hexagonkt.http.server/-request/content-type/#contenttype","text":"val contentType: String ? protected abstract fun contentType (): String ?","title":"contentType"},{"location":"port_http_server/com.hexagonkt.http.server/-request/cookies/","text":"port_http_server / com.hexagonkt.http.server / Request / cookies cookies \u00b6 val cookies: Map < String , HttpCookie > protected abstract fun cookies (): Map < String , HttpCookie >","title":"Cookies"},{"location":"port_http_server/com.hexagonkt.http.server/-request/cookies/#cookies","text":"val cookies: Map < String , HttpCookie > protected abstract fun cookies (): Map < String , HttpCookie >","title":"cookies"},{"location":"port_http_server/com.hexagonkt.http.server/-request/form-parameters/","text":"port_http_server / com.hexagonkt.http.server / Request / formParameters formParameters \u00b6 val formParameters: Map < String , List < String >> protected abstract fun formParameters (): Map < String , List < String >>","title":"Form parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-request/form-parameters/#formparameters","text":"val formParameters: Map < String , List < String >> protected abstract fun formParameters (): Map < String , List < String >>","title":"formParameters"},{"location":"port_http_server/com.hexagonkt.http.server/-request/headers/","text":"port_http_server / com.hexagonkt.http.server / Request / headers headers \u00b6 val headers: Map < String , List < String >> protected abstract fun headers (): Map < String , List < String >>","title":"Headers"},{"location":"port_http_server/com.hexagonkt.http.server/-request/headers/#headers","text":"val headers: Map < String , List < String >> protected abstract fun headers (): Map < String , List < String >>","title":"headers"},{"location":"port_http_server/com.hexagonkt.http.server/-request/host/","text":"port_http_server / com.hexagonkt.http.server / Request / host host \u00b6 val host: String protected abstract fun host (): String","title":"Host"},{"location":"port_http_server/com.hexagonkt.http.server/-request/host/#host","text":"val host: String protected abstract fun host (): String","title":"host"},{"location":"port_http_server/com.hexagonkt.http.server/-request/ip/","text":"port_http_server / com.hexagonkt.http.server / Request / ip ip \u00b6 val ip: String protected abstract fun ip (): String","title":"Ip"},{"location":"port_http_server/com.hexagonkt.http.server/-request/ip/#ip","text":"val ip: String protected abstract fun ip (): String","title":"ip"},{"location":"port_http_server/com.hexagonkt.http.server/-request/load-body/","text":"port_http_server / com.hexagonkt.http.server / Request / loadBody loadBody \u00b6 protected abstract fun loadBody (): String","title":"Load body"},{"location":"port_http_server/com.hexagonkt.http.server/-request/load-body/#loadbody","text":"protected abstract fun loadBody (): String","title":"loadBody"},{"location":"port_http_server/com.hexagonkt.http.server/-request/method/","text":"port_http_server / com.hexagonkt.http.server / Request / method method \u00b6 val method: Method protected abstract fun method (): Method","title":"Method"},{"location":"port_http_server/com.hexagonkt.http.server/-request/method/#method","text":"val method: Method protected abstract fun method (): Method","title":"method"},{"location":"port_http_server/com.hexagonkt.http.server/-request/origin/","text":"port_http_server / com.hexagonkt.http.server / Request / origin origin \u00b6 val origin: String ?","title":"Origin"},{"location":"port_http_server/com.hexagonkt.http.server/-request/origin/#origin","text":"val origin: String ?","title":"origin"},{"location":"port_http_server/com.hexagonkt.http.server/-request/parameters/","text":"port_http_server / com.hexagonkt.http.server / Request / parameters parameters \u00b6 val parameters: Map < String , List < String >> protected abstract fun parameters (): Map < String , List < String >>","title":"Parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-request/parameters/#parameters","text":"val parameters: Map < String , List < String >> protected abstract fun parameters (): Map < String , List < String >>","title":"parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-request/parts/","text":"port_http_server / com.hexagonkt.http.server / Request / parts parts \u00b6 val parts: Map < String , Part > protected abstract fun parts (): Map < String , Part >","title":"Parts"},{"location":"port_http_server/com.hexagonkt.http.server/-request/parts/#parts","text":"val parts: Map < String , Part > protected abstract fun parts (): Map < String , Part >","title":"parts"},{"location":"port_http_server/com.hexagonkt.http.server/-request/path-parameters/","text":"port_http_server / com.hexagonkt.http.server / Request / pathParameters pathParameters \u00b6 val pathParameters: RequiredKeysMap < String , String > protected abstract fun pathParameters (): Map < String , String >","title":"Path parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-request/path-parameters/#pathparameters","text":"val pathParameters: RequiredKeysMap < String , String > protected abstract fun pathParameters (): Map < String , String >","title":"pathParameters"},{"location":"port_http_server/com.hexagonkt.http.server/-request/path/","text":"port_http_server / com.hexagonkt.http.server / Request / path path \u00b6 val path: String protected abstract fun path (): String","title":"Path"},{"location":"port_http_server/com.hexagonkt.http.server/-request/path/#path","text":"val path: String protected abstract fun path (): String","title":"path"},{"location":"port_http_server/com.hexagonkt.http.server/-request/port/","text":"port_http_server / com.hexagonkt.http.server / Request / port port \u00b6 val port: Int protected abstract fun port (): Int","title":"Port"},{"location":"port_http_server/com.hexagonkt.http.server/-request/port/#port","text":"val port: Int protected abstract fun port (): Int","title":"port"},{"location":"port_http_server/com.hexagonkt.http.server/-request/preferred-type/","text":"port_http_server / com.hexagonkt.http.server / Request / preferredType preferredType \u00b6 val preferredType: String ?","title":"Preferred type"},{"location":"port_http_server/com.hexagonkt.http.server/-request/preferred-type/#preferredtype","text":"val preferredType: String ?","title":"preferredType"},{"location":"port_http_server/com.hexagonkt.http.server/-request/query-parameters/","text":"port_http_server / com.hexagonkt.http.server / Request / queryParameters queryParameters \u00b6 val queryParameters: Map < String , List < String >> protected abstract fun queryParameters (): Map < String , List < String >>","title":"Query parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-request/query-parameters/#queryparameters","text":"val queryParameters: Map < String , List < String >> protected abstract fun queryParameters (): Map < String , List < String >>","title":"queryParameters"},{"location":"port_http_server/com.hexagonkt.http.server/-request/query-string/","text":"port_http_server / com.hexagonkt.http.server / Request / queryString queryString \u00b6 val queryString: String protected abstract fun queryString (): String","title":"Query string"},{"location":"port_http_server/com.hexagonkt.http.server/-request/query-string/#querystring","text":"val queryString: String protected abstract fun queryString (): String","title":"queryString"},{"location":"port_http_server/com.hexagonkt.http.server/-request/referer/","text":"port_http_server / com.hexagonkt.http.server / Request / referer referer \u00b6 val referer: String ?","title":"Referer"},{"location":"port_http_server/com.hexagonkt.http.server/-request/referer/#referer","text":"val referer: String ?","title":"referer"},{"location":"port_http_server/com.hexagonkt.http.server/-request/scheme/","text":"port_http_server / com.hexagonkt.http.server / Request / scheme scheme \u00b6 val scheme: String protected abstract fun scheme (): String","title":"Scheme"},{"location":"port_http_server/com.hexagonkt.http.server/-request/scheme/#scheme","text":"val scheme: String protected abstract fun scheme (): String","title":"scheme"},{"location":"port_http_server/com.hexagonkt.http.server/-request/secure/","text":"port_http_server / com.hexagonkt.http.server / Request / secure secure \u00b6 val secure: Boolean","title":"Secure"},{"location":"port_http_server/com.hexagonkt.http.server/-request/secure/#secure","text":"val secure: Boolean","title":"secure"},{"location":"port_http_server/com.hexagonkt.http.server/-request/url/","text":"port_http_server / com.hexagonkt.http.server / Request / url url \u00b6 val url: String protected abstract fun url (): String","title":"Url"},{"location":"port_http_server/com.hexagonkt.http.server/-request/url/#url","text":"val url: String protected abstract fun url (): String","title":"url"},{"location":"port_http_server/com.hexagonkt.http.server/-request/user-agent/","text":"port_http_server / com.hexagonkt.http.server / Request / userAgent userAgent \u00b6 val userAgent: String ?","title":"User agent"},{"location":"port_http_server/com.hexagonkt.http.server/-request/user-agent/#useragent","text":"val userAgent: String ?","title":"userAgent"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler RequestHandler \u00b6 sealed class RequestHandler Types \u00b6 Name Summary CodeHandler data class CodeHandler : RequestHandler ExceptionHandler data class ExceptionHandler : RequestHandler FileHandler data class FileHandler : RequestHandler FilterHandler data class FilterHandler : RequestHandler PathHandler data class PathHandler : RequestHandler ResourceHandler data class ResourceHandler : RequestHandler RouteHandler data class RouteHandler : RequestHandler Properties \u00b6 Name Summary route abstract val route: Route","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/#requesthandler","text":"sealed class RequestHandler","title":"RequestHandler"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/#types","text":"Name Summary CodeHandler data class CodeHandler : RequestHandler ExceptionHandler data class ExceptionHandler : RequestHandler FileHandler data class FileHandler : RequestHandler FilterHandler data class FilterHandler : RequestHandler PathHandler data class PathHandler : RequestHandler ResourceHandler data class ResourceHandler : RequestHandler RouteHandler data class RouteHandler : RequestHandler","title":"Types"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/#properties","text":"Name Summary route abstract val route: Route","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/route/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / route route \u00b6 abstract val route: Route","title":"Route"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/route/#route","text":"abstract val route: Route","title":"route"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-code-handler/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / CodeHandler CodeHandler \u00b6 data class CodeHandler : RequestHandler Constructors \u00b6 Name Summary <init> CodeHandler ( route : Route , code : Int , callback : ErrorCodeCallback ) Properties \u00b6 Name Summary callback val callback: ErrorCodeCallback code val code: Int route val route: Route","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-code-handler/#codehandler","text":"data class CodeHandler : RequestHandler","title":"CodeHandler"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-code-handler/#constructors","text":"Name Summary <init> CodeHandler ( route : Route , code : Int , callback : ErrorCodeCallback )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-code-handler/#properties","text":"Name Summary callback val callback: ErrorCodeCallback code val code: Int route val route: Route","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-code-handler/-init-/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / CodeHandler / <init> <init> \u00b6 CodeHandler ( route : Route , code : Int , callback : ErrorCodeCallback )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-code-handler/-init-/#init","text":"CodeHandler ( route : Route , code : Int , callback : ErrorCodeCallback )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-code-handler/callback/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / CodeHandler / callback callback \u00b6 val callback: ErrorCodeCallback","title":"Callback"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-code-handler/callback/#callback","text":"val callback: ErrorCodeCallback","title":"callback"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-code-handler/code/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / CodeHandler / code code \u00b6 val code: Int","title":"Code"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-code-handler/code/#code","text":"val code: Int","title":"code"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-code-handler/route/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / CodeHandler / route route \u00b6 val route: Route","title":"Route"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-code-handler/route/#route","text":"val route: Route","title":"route"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / ExceptionHandler ExceptionHandler \u00b6 data class ExceptionHandler : RequestHandler Constructors \u00b6 Name Summary <init> ExceptionHandler ( route : Route , exception : Class < Exception > , callback : ExceptionCallback ) Properties \u00b6 Name Summary callback val callback: ExceptionCallback exception val exception: Class < Exception > route val route: Route","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/#exceptionhandler","text":"data class ExceptionHandler : RequestHandler","title":"ExceptionHandler"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/#constructors","text":"Name Summary <init> ExceptionHandler ( route : Route , exception : Class < Exception > , callback : ExceptionCallback )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/#properties","text":"Name Summary callback val callback: ExceptionCallback exception val exception: Class < Exception > route val route: Route","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/-init-/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / ExceptionHandler / <init> <init> \u00b6 ExceptionHandler ( route : Route , exception : Class < Exception > , callback : ExceptionCallback )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/-init-/#init","text":"ExceptionHandler ( route : Route , exception : Class < Exception > , callback : ExceptionCallback )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/callback/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / ExceptionHandler / callback callback \u00b6 val callback: ExceptionCallback","title":"Callback"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/callback/#callback","text":"val callback: ExceptionCallback","title":"callback"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/exception/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / ExceptionHandler / exception exception \u00b6 val exception: Class < Exception >","title":"Exception"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/exception/#exception","text":"val exception: Class < Exception >","title":"exception"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/route/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / ExceptionHandler / route route \u00b6 val route: Route","title":"Route"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-exception-handler/route/#route","text":"val route: Route","title":"route"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-file-handler/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / FileHandler FileHandler \u00b6 data class FileHandler : RequestHandler Constructors \u00b6 Name Summary <init> FileHandler ( route : Route , file : File ) Properties \u00b6 Name Summary file val file: File route val route: Route","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-file-handler/#filehandler","text":"data class FileHandler : RequestHandler","title":"FileHandler"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-file-handler/#constructors","text":"Name Summary <init> FileHandler ( route : Route , file : File )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-file-handler/#properties","text":"Name Summary file val file: File route val route: Route","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-file-handler/-init-/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / FileHandler / <init> <init> \u00b6 FileHandler ( route : Route , file : File )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-file-handler/-init-/#init","text":"FileHandler ( route : Route , file : File )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-file-handler/file/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / FileHandler / file file \u00b6 val file: File","title":"File"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-file-handler/file/#file","text":"val file: File","title":"file"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-file-handler/route/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / FileHandler / route route \u00b6 val route: Route","title":"Route"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-file-handler/route/#route","text":"val route: Route","title":"route"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / FilterHandler FilterHandler \u00b6 data class FilterHandler : RequestHandler Constructors \u00b6 Name Summary <init> FilterHandler ( route : Route , order : FilterOrder , callback : RouteCallback ) Properties \u00b6 Name Summary callback val callback: RouteCallback order val order: FilterOrder route val route: Route","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/#filterhandler","text":"data class FilterHandler : RequestHandler","title":"FilterHandler"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/#constructors","text":"Name Summary <init> FilterHandler ( route : Route , order : FilterOrder , callback : RouteCallback )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/#properties","text":"Name Summary callback val callback: RouteCallback order val order: FilterOrder route val route: Route","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/-init-/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / FilterHandler / <init> <init> \u00b6 FilterHandler ( route : Route , order : FilterOrder , callback : RouteCallback )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/-init-/#init","text":"FilterHandler ( route : Route , order : FilterOrder , callback : RouteCallback )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/callback/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / FilterHandler / callback callback \u00b6 val callback: RouteCallback","title":"Callback"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/callback/#callback","text":"val callback: RouteCallback","title":"callback"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/order/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / FilterHandler / order order \u00b6 val order: FilterOrder","title":"Order"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/order/#order","text":"val order: FilterOrder","title":"order"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/route/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / FilterHandler / route route \u00b6 val route: Route","title":"Route"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-filter-handler/route/#route","text":"val route: Route","title":"route"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-path-handler/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / PathHandler PathHandler \u00b6 data class PathHandler : RequestHandler Constructors \u00b6 Name Summary <init> PathHandler ( route : Route , router : Router ) Properties \u00b6 Name Summary route val route: Route router val router: Router","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-path-handler/#pathhandler","text":"data class PathHandler : RequestHandler","title":"PathHandler"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-path-handler/#constructors","text":"Name Summary <init> PathHandler ( route : Route , router : Router )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-path-handler/#properties","text":"Name Summary route val route: Route router val router: Router","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-path-handler/-init-/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / PathHandler / <init> <init> \u00b6 PathHandler ( route : Route , router : Router )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-path-handler/-init-/#init","text":"PathHandler ( route : Route , router : Router )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-path-handler/route/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / PathHandler / route route \u00b6 val route: Route","title":"Route"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-path-handler/route/#route","text":"val route: Route","title":"route"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-path-handler/router/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / PathHandler / router router \u00b6 val router: Router","title":"Router"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-path-handler/router/#router","text":"val router: Router","title":"router"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-resource-handler/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / ResourceHandler ResourceHandler \u00b6 data class ResourceHandler : RequestHandler Constructors \u00b6 Name Summary <init> ResourceHandler ( route : Route , resource : Resource ) Properties \u00b6 Name Summary resource val resource: Resource route val route: Route","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-resource-handler/#resourcehandler","text":"data class ResourceHandler : RequestHandler","title":"ResourceHandler"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-resource-handler/#constructors","text":"Name Summary <init> ResourceHandler ( route : Route , resource : Resource )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-resource-handler/#properties","text":"Name Summary resource val resource: Resource route val route: Route","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-resource-handler/-init-/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / ResourceHandler / <init> <init> \u00b6 ResourceHandler ( route : Route , resource : Resource )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-resource-handler/-init-/#init","text":"ResourceHandler ( route : Route , resource : Resource )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-resource-handler/resource/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / ResourceHandler / resource resource \u00b6 val resource: Resource","title":"Resource"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-resource-handler/resource/#resource","text":"val resource: Resource","title":"resource"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-resource-handler/route/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / ResourceHandler / route route \u00b6 val route: Route","title":"Route"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-resource-handler/route/#route","text":"val route: Route","title":"route"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-route-handler/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / RouteHandler RouteHandler \u00b6 data class RouteHandler : RequestHandler Constructors \u00b6 Name Summary <init> RouteHandler ( route : Route , callback : RouteCallback ) Properties \u00b6 Name Summary callback val callback: RouteCallback route val route: Route","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-route-handler/#routehandler","text":"data class RouteHandler : RequestHandler","title":"RouteHandler"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-route-handler/#constructors","text":"Name Summary <init> RouteHandler ( route : Route , callback : RouteCallback )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-route-handler/#properties","text":"Name Summary callback val callback: RouteCallback route val route: Route","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-route-handler/-init-/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / RouteHandler / <init> <init> \u00b6 RouteHandler ( route : Route , callback : RouteCallback )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-route-handler/-init-/#init","text":"RouteHandler ( route : Route , callback : RouteCallback )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-route-handler/callback/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / RouteHandler / callback callback \u00b6 val callback: RouteCallback","title":"Callback"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-route-handler/callback/#callback","text":"val callback: RouteCallback","title":"callback"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-route-handler/route/","text":"port_http_server / com.hexagonkt.http.server / RequestHandler / RouteHandler / route route \u00b6 val route: Route","title":"Route"},{"location":"port_http_server/com.hexagonkt.http.server/-request-handler/-route-handler/route/#route","text":"val route: Route","title":"route"},{"location":"port_http_server/com.hexagonkt.http.server/-response/","text":"port_http_server / com.hexagonkt.http.server / Response Response \u00b6 abstract class Response Check 'Request' comment. And also note that lists should be updated by engines after callback is processed, this data is like a buffer that needs to be dumped to the real response. HTTP response context. Constructors \u00b6 Name Summary <init> Check 'Request' comment. And also note that lists should be updated by engines after callback is processed, this data is like a buffer that needs to be dumped to the real response. Response () Properties \u00b6 Name Summary body var body : Any contentType var contentType : String ? headers val headers: MutableMap < String , List < Any >> outputStream val outputStream: OutputStream status var status : Int Functions \u00b6 Name Summary addCookie abstract fun addCookie ( cookie : HttpCookie ): Unit body abstract fun body (): Any abstract fun body ( value : Any ): Unit contentType abstract fun contentType (): String ? abstract fun contentType ( value : String ? ): Unit outputStream abstract fun outputStream (): OutputStream redirect abstract fun redirect ( url : String ): Unit removeCookie abstract fun removeCookie ( name : String ): Unit setHeader fun setHeader ( name : String , value : Any ? ): Unit status abstract fun status (): Int abstract fun status ( value : Int ): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-response/#response","text":"abstract class Response Check 'Request' comment. And also note that lists should be updated by engines after callback is processed, this data is like a buffer that needs to be dumped to the real response. HTTP response context.","title":"Response"},{"location":"port_http_server/com.hexagonkt.http.server/-response/#constructors","text":"Name Summary <init> Check 'Request' comment. And also note that lists should be updated by engines after callback is processed, this data is like a buffer that needs to be dumped to the real response. Response ()","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-response/#properties","text":"Name Summary body var body : Any contentType var contentType : String ? headers val headers: MutableMap < String , List < Any >> outputStream val outputStream: OutputStream status var status : Int","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-response/#functions","text":"Name Summary addCookie abstract fun addCookie ( cookie : HttpCookie ): Unit body abstract fun body (): Any abstract fun body ( value : Any ): Unit contentType abstract fun contentType (): String ? abstract fun contentType ( value : String ? ): Unit outputStream abstract fun outputStream (): OutputStream redirect abstract fun redirect ( url : String ): Unit removeCookie abstract fun removeCookie ( name : String ): Unit setHeader fun setHeader ( name : String , value : Any ? ): Unit status abstract fun status (): Int abstract fun status ( value : Int ): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server/-response/-init-/","text":"port_http_server / com.hexagonkt.http.server / Response / <init> <init> \u00b6 Response () Check 'Request' comment. And also note that lists should be updated by engines after callback is processed, this data is like a buffer that needs to be dumped to the real response. HTTP response context.","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-response/-init-/#init","text":"Response () Check 'Request' comment. And also note that lists should be updated by engines after callback is processed, this data is like a buffer that needs to be dumped to the real response. HTTP response context.","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-response/add-cookie/","text":"port_http_server / com.hexagonkt.http.server / Response / addCookie addCookie \u00b6 abstract fun addCookie ( cookie : HttpCookie ): Unit","title":"Add cookie"},{"location":"port_http_server/com.hexagonkt.http.server/-response/add-cookie/#addcookie","text":"abstract fun addCookie ( cookie : HttpCookie ): Unit","title":"addCookie"},{"location":"port_http_server/com.hexagonkt.http.server/-response/body/","text":"port_http_server / com.hexagonkt.http.server / Response / body body \u00b6 var body : Any protected abstract fun body (): Any protected abstract fun body ( value : Any ): Unit","title":"Body"},{"location":"port_http_server/com.hexagonkt.http.server/-response/body/#body","text":"var body : Any protected abstract fun body (): Any protected abstract fun body ( value : Any ): Unit","title":"body"},{"location":"port_http_server/com.hexagonkt.http.server/-response/content-type/","text":"port_http_server / com.hexagonkt.http.server / Response / contentType contentType \u00b6 var contentType : String ? protected abstract fun contentType (): String ? protected abstract fun contentType ( value : String ? ): Unit","title":"Content type"},{"location":"port_http_server/com.hexagonkt.http.server/-response/content-type/#contenttype","text":"var contentType : String ? protected abstract fun contentType (): String ? protected abstract fun contentType ( value : String ? ): Unit","title":"contentType"},{"location":"port_http_server/com.hexagonkt.http.server/-response/headers/","text":"port_http_server / com.hexagonkt.http.server / Response / headers headers \u00b6 val headers: MutableMap < String , List < Any >>","title":"Headers"},{"location":"port_http_server/com.hexagonkt.http.server/-response/headers/#headers","text":"val headers: MutableMap < String , List < Any >>","title":"headers"},{"location":"port_http_server/com.hexagonkt.http.server/-response/output-stream/","text":"port_http_server / com.hexagonkt.http.server / Response / outputStream outputStream \u00b6 val outputStream: OutputStream protected abstract fun outputStream (): OutputStream","title":"Output stream"},{"location":"port_http_server/com.hexagonkt.http.server/-response/output-stream/#outputstream","text":"val outputStream: OutputStream protected abstract fun outputStream (): OutputStream","title":"outputStream"},{"location":"port_http_server/com.hexagonkt.http.server/-response/redirect/","text":"port_http_server / com.hexagonkt.http.server / Response / redirect redirect \u00b6 abstract fun redirect ( url : String ): Unit","title":"Redirect"},{"location":"port_http_server/com.hexagonkt.http.server/-response/redirect/#redirect","text":"abstract fun redirect ( url : String ): Unit","title":"redirect"},{"location":"port_http_server/com.hexagonkt.http.server/-response/remove-cookie/","text":"port_http_server / com.hexagonkt.http.server / Response / removeCookie removeCookie \u00b6 abstract fun removeCookie ( name : String ): Unit","title":"Remove cookie"},{"location":"port_http_server/com.hexagonkt.http.server/-response/remove-cookie/#removecookie","text":"abstract fun removeCookie ( name : String ): Unit","title":"removeCookie"},{"location":"port_http_server/com.hexagonkt.http.server/-response/set-header/","text":"port_http_server / com.hexagonkt.http.server / Response / setHeader setHeader \u00b6 fun setHeader ( name : String , value : Any ? ): Unit","title":"Set header"},{"location":"port_http_server/com.hexagonkt.http.server/-response/set-header/#setheader","text":"fun setHeader ( name : String , value : Any ? ): Unit","title":"setHeader"},{"location":"port_http_server/com.hexagonkt.http.server/-response/status/","text":"port_http_server / com.hexagonkt.http.server / Response / status status \u00b6 var status : Int protected abstract fun status (): Int protected abstract fun status ( value : Int ): Unit","title":"Status"},{"location":"port_http_server/com.hexagonkt.http.server/-response/status/#status","text":"var status : Int protected abstract fun status (): Int protected abstract fun status ( value : Int ): Unit","title":"status"},{"location":"port_http_server/com.hexagonkt.http.server/-router/","text":"port_http_server / com.hexagonkt.http.server / Router Router \u00b6 class Router Creates and initializes a Router based on a code block. Parameters \u00b6 block - Router's setup block. Return A new router initialized by the passed block. Constructors \u00b6 Name Summary <init> Creates and initializes a Router based on a code block. Router ( block : Router .() -> Unit = {} ) Properties \u00b6 Name Summary requestHandlers var requestHandlers : List < RequestHandler > Functions \u00b6 Name Summary after fun after ( path : String = \"*\" , block : RouteCallback ): Unit any fun any ( path : String = \"/\" , block : RouteCallback ): Unit before fun before ( path : String = \"*\" , block : RouteCallback ): Unit cors fun cors ( settings : CorsSettings ): Unit delete fun delete ( path : String = \"/\" , block : RouteCallback ): Unit error fun error ( code : Int , block : ErrorCodeCallback ): Unit fun error ( exception : KClass < Exception > , block : ExceptionCallback ): Unit fun error ( exception : Class < Exception > , block : ExceptionCallback ): Unit flatRequestHandlers fun flatRequestHandlers ( h : List < RequestHandler > = requestHandlers ): List < RequestHandler > get fun get ( path : String = \"/\" , block : RouteCallback ): Unit fun get ( resource : Resource ): Unit fun get ( path : String , resource : Resource ): Unit fun get ( file : File ): Unit fun get ( path : String , file : File ): Unit head fun head ( path : String = \"/\" , block : RouteCallback ): Unit options fun options ( path : String = \"/\" , block : RouteCallback ): Unit patch fun patch ( path : String = \"/\" , block : RouteCallback ): Unit path fun path ( path : Path , router : Router ): Unit fun path ( handler : Router ): Unit fun path ( block : Router .() -> Unit ): Unit fun path ( path : String , router : Router ): Unit fun path ( path : String , block : Router .() -> Unit ): Unit post fun post ( path : String = \"/\" , block : RouteCallback ): Unit put fun put ( path : String = \"/\" , block : RouteCallback ): Unit trace fun trace ( path : String = \"/\" , block : RouteCallback ): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-router/#router","text":"class Router Creates and initializes a Router based on a code block.","title":"Router"},{"location":"port_http_server/com.hexagonkt.http.server/-router/#parameters","text":"block - Router's setup block. Return A new router initialized by the passed block.","title":"Parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-router/#constructors","text":"Name Summary <init> Creates and initializes a Router based on a code block. Router ( block : Router .() -> Unit = {} )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-router/#properties","text":"Name Summary requestHandlers var requestHandlers : List < RequestHandler >","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-router/#functions","text":"Name Summary after fun after ( path : String = \"*\" , block : RouteCallback ): Unit any fun any ( path : String = \"/\" , block : RouteCallback ): Unit before fun before ( path : String = \"*\" , block : RouteCallback ): Unit cors fun cors ( settings : CorsSettings ): Unit delete fun delete ( path : String = \"/\" , block : RouteCallback ): Unit error fun error ( code : Int , block : ErrorCodeCallback ): Unit fun error ( exception : KClass < Exception > , block : ExceptionCallback ): Unit fun error ( exception : Class < Exception > , block : ExceptionCallback ): Unit flatRequestHandlers fun flatRequestHandlers ( h : List < RequestHandler > = requestHandlers ): List < RequestHandler > get fun get ( path : String = \"/\" , block : RouteCallback ): Unit fun get ( resource : Resource ): Unit fun get ( path : String , resource : Resource ): Unit fun get ( file : File ): Unit fun get ( path : String , file : File ): Unit head fun head ( path : String = \"/\" , block : RouteCallback ): Unit options fun options ( path : String = \"/\" , block : RouteCallback ): Unit patch fun patch ( path : String = \"/\" , block : RouteCallback ): Unit path fun path ( path : Path , router : Router ): Unit fun path ( handler : Router ): Unit fun path ( block : Router .() -> Unit ): Unit fun path ( path : String , router : Router ): Unit fun path ( path : String , block : Router .() -> Unit ): Unit post fun post ( path : String = \"/\" , block : RouteCallback ): Unit put fun put ( path : String = \"/\" , block : RouteCallback ): Unit trace fun trace ( path : String = \"/\" , block : RouteCallback ): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server/-router/-init-/","text":"port_http_server / com.hexagonkt.http.server / Router / <init> <init> \u00b6 Router ( block : Router .() -> Unit = {} ) Creates and initializes a Router based on a code block. Parameters \u00b6 block - Router's setup block. Return A new router initialized by the passed block.","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-router/-init-/#init","text":"Router ( block : Router .() -> Unit = {} ) Creates and initializes a Router based on a code block.","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-router/-init-/#parameters","text":"block - Router's setup block. Return A new router initialized by the passed block.","title":"Parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-router/after/","text":"port_http_server / com.hexagonkt.http.server / Router / after after \u00b6 fun after ( path : String = \"*\" , block : RouteCallback ): Unit","title":"After"},{"location":"port_http_server/com.hexagonkt.http.server/-router/after/#after","text":"fun after ( path : String = \"*\" , block : RouteCallback ): Unit","title":"after"},{"location":"port_http_server/com.hexagonkt.http.server/-router/any/","text":"port_http_server / com.hexagonkt.http.server / Router / any any \u00b6 fun any ( path : String = \"/\" , block : RouteCallback ): Unit","title":"Any"},{"location":"port_http_server/com.hexagonkt.http.server/-router/any/#any","text":"fun any ( path : String = \"/\" , block : RouteCallback ): Unit","title":"any"},{"location":"port_http_server/com.hexagonkt.http.server/-router/before/","text":"port_http_server / com.hexagonkt.http.server / Router / before before \u00b6 fun before ( path : String = \"*\" , block : RouteCallback ): Unit","title":"Before"},{"location":"port_http_server/com.hexagonkt.http.server/-router/before/#before","text":"fun before ( path : String = \"*\" , block : RouteCallback ): Unit","title":"before"},{"location":"port_http_server/com.hexagonkt.http.server/-router/cors/","text":"port_http_server / com.hexagonkt.http.server / Router / cors cors \u00b6 fun cors ( settings : CorsSettings ): Unit","title":"Cors"},{"location":"port_http_server/com.hexagonkt.http.server/-router/cors/#cors","text":"fun cors ( settings : CorsSettings ): Unit","title":"cors"},{"location":"port_http_server/com.hexagonkt.http.server/-router/delete/","text":"port_http_server / com.hexagonkt.http.server / Router / delete delete \u00b6 fun delete ( path : String = \"/\" , block : RouteCallback ): Unit","title":"Delete"},{"location":"port_http_server/com.hexagonkt.http.server/-router/delete/#delete","text":"fun delete ( path : String = \"/\" , block : RouteCallback ): Unit","title":"delete"},{"location":"port_http_server/com.hexagonkt.http.server/-router/error/","text":"port_http_server / com.hexagonkt.http.server / Router / error error \u00b6 fun error ( code : Int , block : ErrorCodeCallback ): Unit fun error ( exception : KClass < Exception > , block : ExceptionCallback ): Unit fun error ( exception : Class < Exception > , block : ExceptionCallback ): Unit","title":"Error"},{"location":"port_http_server/com.hexagonkt.http.server/-router/error/#error","text":"fun error ( code : Int , block : ErrorCodeCallback ): Unit fun error ( exception : KClass < Exception > , block : ExceptionCallback ): Unit fun error ( exception : Class < Exception > , block : ExceptionCallback ): Unit","title":"error"},{"location":"port_http_server/com.hexagonkt.http.server/-router/flat-request-handlers/","text":"port_http_server / com.hexagonkt.http.server / Router / flatRequestHandlers flatRequestHandlers \u00b6 fun flatRequestHandlers ( h : List < RequestHandler > = requestHandlers ): List < RequestHandler >","title":"Flat request handlers"},{"location":"port_http_server/com.hexagonkt.http.server/-router/flat-request-handlers/#flatrequesthandlers","text":"fun flatRequestHandlers ( h : List < RequestHandler > = requestHandlers ): List < RequestHandler >","title":"flatRequestHandlers"},{"location":"port_http_server/com.hexagonkt.http.server/-router/get/","text":"port_http_server / com.hexagonkt.http.server / Router / get get \u00b6 fun get ( path : String = \"/\" , block : RouteCallback ): Unit fun get ( resource : Resource ): Unit fun get ( path : String , resource : Resource ): Unit fun get ( file : File ): Unit fun get ( path : String , file : File ): Unit","title":"Get"},{"location":"port_http_server/com.hexagonkt.http.server/-router/get/#get","text":"fun get ( path : String = \"/\" , block : RouteCallback ): Unit fun get ( resource : Resource ): Unit fun get ( path : String , resource : Resource ): Unit fun get ( file : File ): Unit fun get ( path : String , file : File ): Unit","title":"get"},{"location":"port_http_server/com.hexagonkt.http.server/-router/head/","text":"port_http_server / com.hexagonkt.http.server / Router / head head \u00b6 fun head ( path : String = \"/\" , block : RouteCallback ): Unit","title":"Head"},{"location":"port_http_server/com.hexagonkt.http.server/-router/head/#head","text":"fun head ( path : String = \"/\" , block : RouteCallback ): Unit","title":"head"},{"location":"port_http_server/com.hexagonkt.http.server/-router/options/","text":"port_http_server / com.hexagonkt.http.server / Router / options options \u00b6 fun options ( path : String = \"/\" , block : RouteCallback ): Unit","title":"Options"},{"location":"port_http_server/com.hexagonkt.http.server/-router/options/#options","text":"fun options ( path : String = \"/\" , block : RouteCallback ): Unit","title":"options"},{"location":"port_http_server/com.hexagonkt.http.server/-router/patch/","text":"port_http_server / com.hexagonkt.http.server / Router / patch patch \u00b6 fun patch ( path : String = \"/\" , block : RouteCallback ): Unit","title":"Patch"},{"location":"port_http_server/com.hexagonkt.http.server/-router/patch/#patch","text":"fun patch ( path : String = \"/\" , block : RouteCallback ): Unit","title":"patch"},{"location":"port_http_server/com.hexagonkt.http.server/-router/path/","text":"port_http_server / com.hexagonkt.http.server / Router / path path \u00b6 fun path ( path : Path , router : Router ): Unit fun path ( handler : Router ): Unit fun path ( block : Router .() -> Unit ): Unit fun path ( path : String , router : Router ): Unit fun path ( path : String , block : Router .() -> Unit ): Unit","title":"Path"},{"location":"port_http_server/com.hexagonkt.http.server/-router/path/#path","text":"fun path ( path : Path , router : Router ): Unit fun path ( handler : Router ): Unit fun path ( block : Router .() -> Unit ): Unit fun path ( path : String , router : Router ): Unit fun path ( path : String , block : Router .() -> Unit ): Unit","title":"path"},{"location":"port_http_server/com.hexagonkt.http.server/-router/post/","text":"port_http_server / com.hexagonkt.http.server / Router / post post \u00b6 fun post ( path : String = \"/\" , block : RouteCallback ): Unit","title":"Post"},{"location":"port_http_server/com.hexagonkt.http.server/-router/post/#post","text":"fun post ( path : String = \"/\" , block : RouteCallback ): Unit","title":"post"},{"location":"port_http_server/com.hexagonkt.http.server/-router/put/","text":"port_http_server / com.hexagonkt.http.server / Router / put put \u00b6 fun put ( path : String = \"/\" , block : RouteCallback ): Unit","title":"Put"},{"location":"port_http_server/com.hexagonkt.http.server/-router/put/#put","text":"fun put ( path : String = \"/\" , block : RouteCallback ): Unit","title":"put"},{"location":"port_http_server/com.hexagonkt.http.server/-router/request-handlers/","text":"port_http_server / com.hexagonkt.http.server / Router / requestHandlers requestHandlers \u00b6 var requestHandlers : List < RequestHandler >","title":"Request handlers"},{"location":"port_http_server/com.hexagonkt.http.server/-router/request-handlers/#requesthandlers","text":"var requestHandlers : List < RequestHandler >","title":"requestHandlers"},{"location":"port_http_server/com.hexagonkt.http.server/-router/trace/","text":"port_http_server / com.hexagonkt.http.server / Router / trace trace \u00b6 fun trace ( path : String = \"/\" , block : RouteCallback ): Unit","title":"Trace"},{"location":"port_http_server/com.hexagonkt.http.server/-router/trace/#trace","text":"fun trace ( path : String = \"/\" , block : RouteCallback ): Unit","title":"trace"},{"location":"port_http_server/com.hexagonkt.http.server/-router-test/","text":"port_http_server / com.hexagonkt.http.server / RouterTest RouterTest \u00b6 class RouterTest Constructors \u00b6 Name Summary <init> RouterTest () Functions \u00b6 Name Summary Nested routes are flattened properly inside by Router fun Nested routes are flattened properly inside by Router (): Unit Routes are stored in server's router fun Routes are stored in server ' s router (): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-router-test/#routertest","text":"class RouterTest","title":"RouterTest"},{"location":"port_http_server/com.hexagonkt.http.server/-router-test/#constructors","text":"Name Summary <init> RouterTest ()","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-router-test/#functions","text":"Name Summary Nested routes are flattened properly inside by Router fun Nested routes are flattened properly inside by Router (): Unit Routes are stored in server's router fun Routes are stored in server ' s router (): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server/-router-test/-init-/","text":"port_http_server / com.hexagonkt.http.server / RouterTest / <init> <init> \u00b6 RouterTest ()","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-router-test/-init-/#init","text":"RouterTest ()","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-router-test/-nested routes are flattened properly inside by -router/","text":"port_http_server / com.hexagonkt.http.server / RouterTest / Nested routes are flattened properly inside by Router Nested routes are flattened properly inside by Router \u00b6 fun Nested routes are flattened properly inside by Router (): Unit","title":" nested routes are flattened properly inside by  router"},{"location":"port_http_server/com.hexagonkt.http.server/-router-test/-nested routes are flattened properly inside by -router/#nested-routes-are-flattened-properly-inside-by-router","text":"fun Nested routes are flattened properly inside by Router (): Unit","title":"Nested routes are flattened properly inside by Router"},{"location":"port_http_server/com.hexagonkt.http.server/-router-test/-routes are stored in server's router/","text":"port_http_server / com.hexagonkt.http.server / RouterTest / Routes are stored in server's router Routes are stored in server's router \u00b6 fun Routes are stored in server ' s router (): Unit","title":" routes are stored in server's router"},{"location":"port_http_server/com.hexagonkt.http.server/-router-test/-routes are stored in server's router/#routes-are-stored-in-servers-router","text":"fun Routes are stored in server ' s router (): Unit","title":"Routes are stored in server's router"},{"location":"port_http_server/com.hexagonkt.http.server/-server/","text":"port_http_server / com.hexagonkt.http.server / Server Server \u00b6 data class Server A server that listen to HTTP connections on a port and address and route requests using a router. TODO Write documentation. Constructors \u00b6 Name Summary <init> Creates a server with a router. It is a combination of Server and Router . Server ( adapter : ServerPort = inject (), settings : Map < String , *> = SettingsManager . settings , block : Router .() -> Unit ) `` Server ( adapter : ServerPort , router : Router , settings : Map < String , *> ) A server that listen to HTTP connections on a port and address and route requests using a router. Server ( adapter : ServerPort = inject (), router : Router , settings : ServerSettings = ServerSettings ()) Properties \u00b6 Name Summary contextRouter val contextRouter: Router portName val portName: String runtimePort val runtimePort: Int settings val settings: ServerSettings Functions \u00b6 Name Summary start fun start (): Unit started fun started (): Boolean stop fun stop (): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-server/#server","text":"data class Server A server that listen to HTTP connections on a port and address and route requests using a router. TODO Write documentation.","title":"Server"},{"location":"port_http_server/com.hexagonkt.http.server/-server/#constructors","text":"Name Summary <init> Creates a server with a router. It is a combination of Server and Router . Server ( adapter : ServerPort = inject (), settings : Map < String , *> = SettingsManager . settings , block : Router .() -> Unit ) `` Server ( adapter : ServerPort , router : Router , settings : Map < String , *> ) A server that listen to HTTP connections on a port and address and route requests using a router. Server ( adapter : ServerPort = inject (), router : Router , settings : ServerSettings = ServerSettings ())","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-server/#properties","text":"Name Summary contextRouter val contextRouter: Router portName val portName: String runtimePort val runtimePort: Int settings val settings: ServerSettings","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-server/#functions","text":"Name Summary start fun start (): Unit started fun started (): Boolean stop fun stop (): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server/-server/-init-/","text":"port_http_server / com.hexagonkt.http.server / Server / <init> <init> \u00b6 Server ( adapter : ServerPort = inject (), settings : Map < String , *> = SettingsManager . settings , block : Router .() -> Unit ) Creates a server with a router. It is a combination of Server and Router . Parameters \u00b6 adapter - The server engine. settings - Server settings. Port and address will be searched in this map. block - Router's setup block. Return A new server with the built router. Server ( adapter : ServerPort , router : Router , settings : Map < String , *> ) `` Server ( adapter : ServerPort = inject (), router : Router , settings : ServerSettings = ServerSettings ()) A server that listen to HTTP connections on a port and address and route requests using a router. TODO Write documentation.","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-server/-init-/#init","text":"Server ( adapter : ServerPort = inject (), settings : Map < String , *> = SettingsManager . settings , block : Router .() -> Unit ) Creates a server with a router. It is a combination of Server and Router .","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-server/-init-/#parameters","text":"adapter - The server engine. settings - Server settings. Port and address will be searched in this map. block - Router's setup block. Return A new server with the built router. Server ( adapter : ServerPort , router : Router , settings : Map < String , *> ) `` Server ( adapter : ServerPort = inject (), router : Router , settings : ServerSettings = ServerSettings ()) A server that listen to HTTP connections on a port and address and route requests using a router. TODO Write documentation.","title":"Parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-server/context-router/","text":"port_http_server / com.hexagonkt.http.server / Server / contextRouter contextRouter \u00b6 val contextRouter: Router","title":"Context router"},{"location":"port_http_server/com.hexagonkt.http.server/-server/context-router/#contextrouter","text":"val contextRouter: Router","title":"contextRouter"},{"location":"port_http_server/com.hexagonkt.http.server/-server/port-name/","text":"port_http_server / com.hexagonkt.http.server / Server / portName portName \u00b6 val portName: String","title":"Port name"},{"location":"port_http_server/com.hexagonkt.http.server/-server/port-name/#portname","text":"val portName: String","title":"portName"},{"location":"port_http_server/com.hexagonkt.http.server/-server/runtime-port/","text":"port_http_server / com.hexagonkt.http.server / Server / runtimePort runtimePort \u00b6 val runtimePort: Int","title":"Runtime port"},{"location":"port_http_server/com.hexagonkt.http.server/-server/runtime-port/#runtimeport","text":"val runtimePort: Int","title":"runtimePort"},{"location":"port_http_server/com.hexagonkt.http.server/-server/settings/","text":"port_http_server / com.hexagonkt.http.server / Server / settings settings \u00b6 val settings: ServerSettings","title":"Settings"},{"location":"port_http_server/com.hexagonkt.http.server/-server/settings/#settings","text":"val settings: ServerSettings","title":"settings"},{"location":"port_http_server/com.hexagonkt.http.server/-server/start/","text":"port_http_server / com.hexagonkt.http.server / Server / start start \u00b6 fun start (): Unit","title":"Start"},{"location":"port_http_server/com.hexagonkt.http.server/-server/start/#start","text":"fun start (): Unit","title":"start"},{"location":"port_http_server/com.hexagonkt.http.server/-server/started/","text":"port_http_server / com.hexagonkt.http.server / Server / started started \u00b6 fun started (): Boolean","title":"Started"},{"location":"port_http_server/com.hexagonkt.http.server/-server/started/#started","text":"fun started (): Boolean","title":"started"},{"location":"port_http_server/com.hexagonkt.http.server/-server/stop/","text":"port_http_server / com.hexagonkt.http.server / Server / stop stop \u00b6 fun stop (): Unit","title":"Stop"},{"location":"port_http_server/com.hexagonkt.http.server/-server/stop/#stop","text":"fun stop (): Unit","title":"stop"},{"location":"port_http_server/com.hexagonkt.http.server/-server-port/","text":"port_http_server / com.hexagonkt.http.server / ServerPort ServerPort \u00b6 interface ServerPort Represents a server instance of one kind. Functions \u00b6 Name Summary runtimePort Gets the runtime port if started, throw an exception otherwise. abstract fun runtimePort (): Int shutdown Stops the instance of the engine. abstract fun shutdown (): Unit started . abstract fun started (): Boolean startup Builds a server of a certain engine from a server definition and runs it. abstract fun startup ( server : Server ): Unit Inheritors \u00b6 Name Summary VoidAdapter object VoidAdapter : ServerPort","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-server-port/#serverport","text":"interface ServerPort Represents a server instance of one kind.","title":"ServerPort"},{"location":"port_http_server/com.hexagonkt.http.server/-server-port/#functions","text":"Name Summary runtimePort Gets the runtime port if started, throw an exception otherwise. abstract fun runtimePort (): Int shutdown Stops the instance of the engine. abstract fun shutdown (): Unit started . abstract fun started (): Boolean startup Builds a server of a certain engine from a server definition and runs it. abstract fun startup ( server : Server ): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server/-server-port/#inheritors","text":"Name Summary VoidAdapter object VoidAdapter : ServerPort","title":"Inheritors"},{"location":"port_http_server/com.hexagonkt.http.server/-server-port/runtime-port/","text":"port_http_server / com.hexagonkt.http.server / ServerPort / runtimePort runtimePort \u00b6 abstract fun runtimePort (): Int Gets the runtime port if started, throw an exception otherwise.","title":"Runtime port"},{"location":"port_http_server/com.hexagonkt.http.server/-server-port/runtime-port/#runtimeport","text":"abstract fun runtimePort (): Int Gets the runtime port if started, throw an exception otherwise.","title":"runtimePort"},{"location":"port_http_server/com.hexagonkt.http.server/-server-port/shutdown/","text":"port_http_server / com.hexagonkt.http.server / ServerPort / shutdown shutdown \u00b6 abstract fun shutdown (): Unit Stops the instance of the engine.","title":"Shutdown"},{"location":"port_http_server/com.hexagonkt.http.server/-server-port/shutdown/#shutdown","text":"abstract fun shutdown (): Unit Stops the instance of the engine.","title":"shutdown"},{"location":"port_http_server/com.hexagonkt.http.server/-server-port/started/","text":"port_http_server / com.hexagonkt.http.server / ServerPort / started started \u00b6 abstract fun started (): Boolean .","title":"Started"},{"location":"port_http_server/com.hexagonkt.http.server/-server-port/started/#started","text":"abstract fun started (): Boolean .","title":"started"},{"location":"port_http_server/com.hexagonkt.http.server/-server-port/startup/","text":"port_http_server / com.hexagonkt.http.server / ServerPort / startup startup \u00b6 abstract fun startup ( server : Server ): Unit Builds a server of a certain engine from a server definition and runs it.","title":"Startup"},{"location":"port_http_server/com.hexagonkt.http.server/-server-port/startup/#startup","text":"abstract fun startup ( server : Server ): Unit Builds a server of a certain engine from a server definition and runs it.","title":"startup"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings/","text":"port_http_server / com.hexagonkt.http.server / ServerSettings ServerSettings \u00b6 data class ServerSettings Constructors \u00b6 Name Summary <init> ServerSettings ( serverName : String = \"<undefined>\" , bindAddress : InetAddress = InetAddress . getLoopbackAddress (), bindPort : Int = 2010 , contextPath : String = \"\" ) Properties \u00b6 Name Summary bindAddress val bindAddress: InetAddress bindPort val bindPort: Int contextPath val contextPath: String serverName val serverName: String","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings/#serversettings","text":"data class ServerSettings","title":"ServerSettings"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings/#constructors","text":"Name Summary <init> ServerSettings ( serverName : String = \"<undefined>\" , bindAddress : InetAddress = InetAddress . getLoopbackAddress (), bindPort : Int = 2010 , contextPath : String = \"\" )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings/#properties","text":"Name Summary bindAddress val bindAddress: InetAddress bindPort val bindPort: Int contextPath val contextPath: String serverName val serverName: String","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings/-init-/","text":"port_http_server / com.hexagonkt.http.server / ServerSettings / <init> <init> \u00b6 ServerSettings ( serverName : String = \"<undefined>\" , bindAddress : InetAddress = InetAddress . getLoopbackAddress (), bindPort : Int = 2010 , contextPath : String = \"\" )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings/-init-/#init","text":"ServerSettings ( serverName : String = \"<undefined>\" , bindAddress : InetAddress = InetAddress . getLoopbackAddress (), bindPort : Int = 2010 , contextPath : String = \"\" )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings/bind-address/","text":"port_http_server / com.hexagonkt.http.server / ServerSettings / bindAddress bindAddress \u00b6 val bindAddress: InetAddress","title":"Bind address"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings/bind-address/#bindaddress","text":"val bindAddress: InetAddress","title":"bindAddress"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings/bind-port/","text":"port_http_server / com.hexagonkt.http.server / ServerSettings / bindPort bindPort \u00b6 val bindPort: Int","title":"Bind port"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings/bind-port/#bindport","text":"val bindPort: Int","title":"bindPort"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings/context-path/","text":"port_http_server / com.hexagonkt.http.server / ServerSettings / contextPath contextPath \u00b6 val contextPath: String","title":"Context path"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings/context-path/#contextpath","text":"val contextPath: String","title":"contextPath"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings/server-name/","text":"port_http_server / com.hexagonkt.http.server / ServerSettings / serverName serverName \u00b6 val serverName: String","title":"Server name"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings/server-name/#servername","text":"val serverName: String","title":"serverName"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings-test/","text":"port_http_server / com.hexagonkt.http.server / ServerSettingsTest ServerSettingsTest \u00b6 class ServerSettingsTest Constructors \u00b6 Name Summary <init> ServerSettingsTest () Functions \u00b6 Name Summary Server settings loads the proper defaults fun Server settings loads the proper defaults (): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings-test/#serversettingstest","text":"class ServerSettingsTest","title":"ServerSettingsTest"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings-test/#constructors","text":"Name Summary <init> ServerSettingsTest ()","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings-test/#functions","text":"Name Summary Server settings loads the proper defaults fun Server settings loads the proper defaults (): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings-test/-init-/","text":"port_http_server / com.hexagonkt.http.server / ServerSettingsTest / <init> <init> \u00b6 ServerSettingsTest ()","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings-test/-init-/#init","text":"ServerSettingsTest ()","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings-test/-server settings loads the proper defaults/","text":"port_http_server / com.hexagonkt.http.server / ServerSettingsTest / Server settings loads the proper defaults Server settings loads the proper defaults \u00b6 fun Server settings loads the proper defaults (): Unit","title":" server settings loads the proper defaults"},{"location":"port_http_server/com.hexagonkt.http.server/-server-settings-test/-server settings loads the proper defaults/#server-settings-loads-the-proper-defaults","text":"fun Server settings loads the proper defaults (): Unit","title":"Server settings loads the proper defaults"},{"location":"port_http_server/com.hexagonkt.http.server/-server-test/","text":"port_http_server / com.hexagonkt.http.server / ServerTest ServerTest \u00b6 class ServerTest Constructors \u00b6 Name Summary <init> ServerTest () Functions \u00b6 Name Summary Default parameters fun Default parameters (): Unit Injected parameters fun Injected parameters (): Unit Parameters map fun Parameters map (): Unit Runtime port fun Runtime port (): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-server-test/#servertest","text":"class ServerTest","title":"ServerTest"},{"location":"port_http_server/com.hexagonkt.http.server/-server-test/#constructors","text":"Name Summary <init> ServerTest ()","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-server-test/#functions","text":"Name Summary Default parameters fun Default parameters (): Unit Injected parameters fun Injected parameters (): Unit Parameters map fun Parameters map (): Unit Runtime port fun Runtime port (): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server/-server-test/-default parameters/","text":"port_http_server / com.hexagonkt.http.server / ServerTest / Default parameters Default parameters \u00b6 fun Default parameters (): Unit","title":" default parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-server-test/-default parameters/#default-parameters","text":"fun Default parameters (): Unit","title":"Default parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-server-test/-init-/","text":"port_http_server / com.hexagonkt.http.server / ServerTest / <init> <init> \u00b6 ServerTest ()","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-server-test/-init-/#init","text":"ServerTest ()","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-server-test/-injected parameters/","text":"port_http_server / com.hexagonkt.http.server / ServerTest / Injected parameters Injected parameters \u00b6 fun Injected parameters (): Unit","title":" injected parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-server-test/-injected parameters/#injected-parameters","text":"fun Injected parameters (): Unit","title":"Injected parameters"},{"location":"port_http_server/com.hexagonkt.http.server/-server-test/-parameters map/","text":"port_http_server / com.hexagonkt.http.server / ServerTest / Parameters map Parameters map \u00b6 fun Parameters map (): Unit","title":" parameters map"},{"location":"port_http_server/com.hexagonkt.http.server/-server-test/-parameters map/#parameters-map","text":"fun Parameters map (): Unit","title":"Parameters map"},{"location":"port_http_server/com.hexagonkt.http.server/-server-test/-runtime port/","text":"port_http_server / com.hexagonkt.http.server / ServerTest / Runtime port Runtime port \u00b6 fun Runtime port (): Unit","title":" runtime port"},{"location":"port_http_server/com.hexagonkt.http.server/-server-test/-runtime port/#runtime-port","text":"fun Runtime port (): Unit","title":"Runtime port"},{"location":"port_http_server/com.hexagonkt.http.server/-session/","text":"port_http_server / com.hexagonkt.http.server / Session Session \u00b6 abstract class Session Provides session information. Constructors \u00b6 Name Summary <init> Provides session information. Session () Properties \u00b6 Name Summary attributes val attributes: Map < String , Any ?> creationTime val creationTime: Long ? id A string containing the unique identifier assigned to this session (Cookie). val id: String ? lastAccessedTime val lastAccessedTime: Long ? maxInactiveInterval var maxInactiveInterval : Int ? Functions \u00b6 Name Summary attributes abstract fun attributes (): Map < String , Any ?> creationTime abstract fun creationTime (): Long ? get fun get ( name : String ): Any ? getAttribute abstract fun getAttribute ( name : String ): Any ? id A string containing the unique identifier assigned to this session (Cookie). abstract fun id (): String ? invalidate abstract fun invalidate (): Unit isNew abstract fun isNew (): Boolean lastAccessedTime abstract fun lastAccessedTime (): Long ? maxInactiveInterval abstract fun maxInactiveInterval (): Int ? abstract fun maxInactiveInterval ( value : Int ? ): Unit remove fun remove ( name : String ): Unit removeAttribute abstract fun removeAttribute ( name : String ): Unit set fun set ( name : String , value : Any ): Unit setAttribute abstract fun setAttribute ( name : String , value : Any ): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-session/#session","text":"abstract class Session Provides session information.","title":"Session"},{"location":"port_http_server/com.hexagonkt.http.server/-session/#constructors","text":"Name Summary <init> Provides session information. Session ()","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server/-session/#properties","text":"Name Summary attributes val attributes: Map < String , Any ?> creationTime val creationTime: Long ? id A string containing the unique identifier assigned to this session (Cookie). val id: String ? lastAccessedTime val lastAccessedTime: Long ? maxInactiveInterval var maxInactiveInterval : Int ?","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server/-session/#functions","text":"Name Summary attributes abstract fun attributes (): Map < String , Any ?> creationTime abstract fun creationTime (): Long ? get fun get ( name : String ): Any ? getAttribute abstract fun getAttribute ( name : String ): Any ? id A string containing the unique identifier assigned to this session (Cookie). abstract fun id (): String ? invalidate abstract fun invalidate (): Unit isNew abstract fun isNew (): Boolean lastAccessedTime abstract fun lastAccessedTime (): Long ? maxInactiveInterval abstract fun maxInactiveInterval (): Int ? abstract fun maxInactiveInterval ( value : Int ? ): Unit remove fun remove ( name : String ): Unit removeAttribute abstract fun removeAttribute ( name : String ): Unit set fun set ( name : String , value : Any ): Unit setAttribute abstract fun setAttribute ( name : String , value : Any ): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server/-session/-init-/","text":"port_http_server / com.hexagonkt.http.server / Session / <init> <init> \u00b6 Session () Provides session information.","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server/-session/-init-/#init","text":"Session () Provides session information.","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server/-session/attributes/","text":"port_http_server / com.hexagonkt.http.server / Session / attributes attributes \u00b6 val attributes: Map < String , Any ?> protected abstract fun attributes (): Map < String , Any ?>","title":"Attributes"},{"location":"port_http_server/com.hexagonkt.http.server/-session/attributes/#attributes","text":"val attributes: Map < String , Any ?> protected abstract fun attributes (): Map < String , Any ?>","title":"attributes"},{"location":"port_http_server/com.hexagonkt.http.server/-session/creation-time/","text":"port_http_server / com.hexagonkt.http.server / Session / creationTime creationTime \u00b6 val creationTime: Long ? protected abstract fun creationTime (): Long ?","title":"Creation time"},{"location":"port_http_server/com.hexagonkt.http.server/-session/creation-time/#creationtime","text":"val creationTime: Long ? protected abstract fun creationTime (): Long ?","title":"creationTime"},{"location":"port_http_server/com.hexagonkt.http.server/-session/get-attribute/","text":"port_http_server / com.hexagonkt.http.server / Session / getAttribute getAttribute \u00b6 abstract fun getAttribute ( name : String ): Any ?","title":"Get attribute"},{"location":"port_http_server/com.hexagonkt.http.server/-session/get-attribute/#getattribute","text":"abstract fun getAttribute ( name : String ): Any ?","title":"getAttribute"},{"location":"port_http_server/com.hexagonkt.http.server/-session/get/","text":"port_http_server / com.hexagonkt.http.server / Session / get get \u00b6 fun get ( name : String ): Any ?","title":"Get"},{"location":"port_http_server/com.hexagonkt.http.server/-session/get/#get","text":"fun get ( name : String ): Any ?","title":"get"},{"location":"port_http_server/com.hexagonkt.http.server/-session/id/","text":"port_http_server / com.hexagonkt.http.server / Session / id id \u00b6 val id: String ? A string containing the unique identifier assigned to this session (Cookie). Getter A string containing the unique identifier assigned to this session (Cookie). protected abstract fun id (): String ? A string containing the unique identifier assigned to this session (Cookie).","title":"Id"},{"location":"port_http_server/com.hexagonkt.http.server/-session/id/#id","text":"val id: String ? A string containing the unique identifier assigned to this session (Cookie). Getter A string containing the unique identifier assigned to this session (Cookie). protected abstract fun id (): String ? A string containing the unique identifier assigned to this session (Cookie).","title":"id"},{"location":"port_http_server/com.hexagonkt.http.server/-session/invalidate/","text":"port_http_server / com.hexagonkt.http.server / Session / invalidate invalidate \u00b6 abstract fun invalidate (): Unit","title":"Invalidate"},{"location":"port_http_server/com.hexagonkt.http.server/-session/invalidate/#invalidate","text":"abstract fun invalidate (): Unit","title":"invalidate"},{"location":"port_http_server/com.hexagonkt.http.server/-session/is-new/","text":"port_http_server / com.hexagonkt.http.server / Session / isNew isNew \u00b6 abstract fun isNew (): Boolean","title":"Is new"},{"location":"port_http_server/com.hexagonkt.http.server/-session/is-new/#isnew","text":"abstract fun isNew (): Boolean","title":"isNew"},{"location":"port_http_server/com.hexagonkt.http.server/-session/last-accessed-time/","text":"port_http_server / com.hexagonkt.http.server / Session / lastAccessedTime lastAccessedTime \u00b6 val lastAccessedTime: Long ? protected abstract fun lastAccessedTime (): Long ?","title":"Last accessed time"},{"location":"port_http_server/com.hexagonkt.http.server/-session/last-accessed-time/#lastaccessedtime","text":"val lastAccessedTime: Long ? protected abstract fun lastAccessedTime (): Long ?","title":"lastAccessedTime"},{"location":"port_http_server/com.hexagonkt.http.server/-session/max-inactive-interval/","text":"port_http_server / com.hexagonkt.http.server / Session / maxInactiveInterval maxInactiveInterval \u00b6 var maxInactiveInterval : Int ? protected abstract fun maxInactiveInterval (): Int ? protected abstract fun maxInactiveInterval ( value : Int ? ): Unit","title":"Max inactive interval"},{"location":"port_http_server/com.hexagonkt.http.server/-session/max-inactive-interval/#maxinactiveinterval","text":"var maxInactiveInterval : Int ? protected abstract fun maxInactiveInterval (): Int ? protected abstract fun maxInactiveInterval ( value : Int ? ): Unit","title":"maxInactiveInterval"},{"location":"port_http_server/com.hexagonkt.http.server/-session/remove-attribute/","text":"port_http_server / com.hexagonkt.http.server / Session / removeAttribute removeAttribute \u00b6 abstract fun removeAttribute ( name : String ): Unit","title":"Remove attribute"},{"location":"port_http_server/com.hexagonkt.http.server/-session/remove-attribute/#removeattribute","text":"abstract fun removeAttribute ( name : String ): Unit","title":"removeAttribute"},{"location":"port_http_server/com.hexagonkt.http.server/-session/remove/","text":"port_http_server / com.hexagonkt.http.server / Session / remove remove \u00b6 fun remove ( name : String ): Unit","title":"Remove"},{"location":"port_http_server/com.hexagonkt.http.server/-session/remove/#remove","text":"fun remove ( name : String ): Unit","title":"remove"},{"location":"port_http_server/com.hexagonkt.http.server/-session/set-attribute/","text":"port_http_server / com.hexagonkt.http.server / Session / setAttribute setAttribute \u00b6 abstract fun setAttribute ( name : String , value : Any ): Unit","title":"Set attribute"},{"location":"port_http_server/com.hexagonkt.http.server/-session/set-attribute/#setattribute","text":"abstract fun setAttribute ( name : String , value : Any ): Unit","title":"setAttribute"},{"location":"port_http_server/com.hexagonkt.http.server/-session/set/","text":"port_http_server / com.hexagonkt.http.server / Session / set set \u00b6 fun set ( name : String , value : Any ): Unit","title":"Set"},{"location":"port_http_server/com.hexagonkt.http.server/-session/set/#set","text":"fun set ( name : String , value : Any ): Unit","title":"set"},{"location":"port_http_server/com.hexagonkt.http.server/-void-adapter/","text":"port_http_server / com.hexagonkt.http.server / VoidAdapter VoidAdapter \u00b6 object VoidAdapter : ServerPort Functions \u00b6 Name Summary runtimePort Gets the runtime port if started, throw an exception otherwise. fun runtimePort (): Int shutdown Stops the instance of the engine. fun shutdown (): Unit started . fun started (): Boolean startup Builds a server of a certain engine from a server definition and runs it. fun startup ( server : Server ): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server/-void-adapter/#voidadapter","text":"object VoidAdapter : ServerPort","title":"VoidAdapter"},{"location":"port_http_server/com.hexagonkt.http.server/-void-adapter/#functions","text":"Name Summary runtimePort Gets the runtime port if started, throw an exception otherwise. fun runtimePort (): Int shutdown Stops the instance of the engine. fun shutdown (): Unit started . fun started (): Boolean startup Builds a server of a certain engine from a server definition and runs it. fun startup ( server : Server ): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server/-void-adapter/runtime-port/","text":"port_http_server / com.hexagonkt.http.server / VoidAdapter / runtimePort runtimePort \u00b6 fun runtimePort (): Int Gets the runtime port if started, throw an exception otherwise.","title":"Runtime port"},{"location":"port_http_server/com.hexagonkt.http.server/-void-adapter/runtime-port/#runtimeport","text":"fun runtimePort (): Int Gets the runtime port if started, throw an exception otherwise.","title":"runtimePort"},{"location":"port_http_server/com.hexagonkt.http.server/-void-adapter/shutdown/","text":"port_http_server / com.hexagonkt.http.server / VoidAdapter / shutdown shutdown \u00b6 fun shutdown (): Unit Stops the instance of the engine.","title":"Shutdown"},{"location":"port_http_server/com.hexagonkt.http.server/-void-adapter/shutdown/#shutdown","text":"fun shutdown (): Unit Stops the instance of the engine.","title":"shutdown"},{"location":"port_http_server/com.hexagonkt.http.server/-void-adapter/started/","text":"port_http_server / com.hexagonkt.http.server / VoidAdapter / started started \u00b6 fun started (): Boolean .","title":"Started"},{"location":"port_http_server/com.hexagonkt.http.server/-void-adapter/started/#started","text":"fun started (): Boolean .","title":"started"},{"location":"port_http_server/com.hexagonkt.http.server/-void-adapter/startup/","text":"port_http_server / com.hexagonkt.http.server / VoidAdapter / startup startup \u00b6 fun startup ( server : Server ): Unit Builds a server of a certain engine from a server definition and runs it.","title":"Startup"},{"location":"port_http_server/com.hexagonkt.http.server/-void-adapter/startup/#startup","text":"fun startup ( server : Server ): Unit Builds a server of a certain engine from a server definition and runs it.","title":"startup"},{"location":"port_http_server/com.hexagonkt.http.server.examples/","text":"port_http_server / com.hexagonkt.http.server.examples Package com.hexagonkt.http.server.examples \u00b6 Types \u00b6 Name Summary BooksTest abstract class BooksTest CookiesTest abstract class CookiesTest CorsTest abstract class CorsTest ErrorsTest abstract class ErrorsTest FilesTest abstract class FilesTest FiltersTest abstract class FiltersTest GenericTest abstract class GenericTest SessionTest abstract class SessionTest","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server.examples/#package-comhexagonkthttpserverexamples","text":"","title":"Package com.hexagonkt.http.server.examples"},{"location":"port_http_server/com.hexagonkt.http.server.examples/#types","text":"Name Summary BooksTest abstract class BooksTest CookiesTest abstract class CookiesTest CorsTest abstract class CorsTest ErrorsTest abstract class ErrorsTest FilesTest abstract class FilesTest FiltersTest abstract class FiltersTest GenericTest abstract class GenericTest SessionTest abstract class SessionTest","title":"Types"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/","text":"port_http_server / com.hexagonkt.http.server.examples / BooksTest BooksTest \u00b6 abstract class BooksTest Types \u00b6 Name Summary Book data class Book Constructors \u00b6 Name Summary <init> BooksTest ( adapter : ServerPort ) Properties \u00b6 Name Summary server val server: Server Functions \u00b6 Name Summary Book not found returns a 404 fun Book not found returns a 404 (): Unit Create book returns 201 and new book ID fun Create book returns 201 and new book ID (): Unit Delete book returns the deleted record ID fun Delete book returns the deleted record ID (): Unit Get book returns all book's fields fun Get book returns all book ' s fields (): Unit initialize fun initialize (): Unit Invalid method returns 405 fun Invalid method returns 405 (): Unit List books contains all books IDs fun List books contains all books IDs (): Unit shutdown fun shutdown (): Unit Update book overrides existing book data fun Update book overrides existing book data (): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/#bookstest","text":"abstract class BooksTest","title":"BooksTest"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/#types","text":"Name Summary Book data class Book","title":"Types"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/#constructors","text":"Name Summary <init> BooksTest ( adapter : ServerPort )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/#properties","text":"Name Summary server val server: Server","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/#functions","text":"Name Summary Book not found returns a 404 fun Book not found returns a 404 (): Unit Create book returns 201 and new book ID fun Create book returns 201 and new book ID (): Unit Delete book returns the deleted record ID fun Delete book returns the deleted record ID (): Unit Get book returns all book's fields fun Get book returns all book ' s fields (): Unit initialize fun initialize (): Unit Invalid method returns 405 fun Invalid method returns 405 (): Unit List books contains all books IDs fun List books contains all books IDs (): Unit shutdown fun shutdown (): Unit Update book overrides existing book data fun Update book overrides existing book data (): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-book not found returns a 404/","text":"port_http_server / com.hexagonkt.http.server.examples / BooksTest / Book not found returns a 404 Book not found returns a 404 \u00b6 fun Book not found returns a 404 (): Unit","title":" book not found returns a 404"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-book not found returns a 404/#book-not-found-returns-a-404","text":"fun Book not found returns a 404 (): Unit","title":"Book not found returns a 404"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-create book returns 201 and new book -i-d/","text":"port_http_server / com.hexagonkt.http.server.examples / BooksTest / Create book returns 201 and new book ID Create book returns 201 and new book ID \u00b6 fun Create book returns 201 and new book ID (): Unit","title":" create book returns 201 and new book  i d"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-create book returns 201 and new book -i-d/#create-book-returns-201-and-new-book-id","text":"fun Create book returns 201 and new book ID (): Unit","title":"Create book returns 201 and new book ID"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-delete book returns the deleted record -i-d/","text":"port_http_server / com.hexagonkt.http.server.examples / BooksTest / Delete book returns the deleted record ID Delete book returns the deleted record ID \u00b6 fun Delete book returns the deleted record ID (): Unit","title":" delete book returns the deleted record  i d"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-delete book returns the deleted record -i-d/#delete-book-returns-the-deleted-record-id","text":"fun Delete book returns the deleted record ID (): Unit","title":"Delete book returns the deleted record ID"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-get book returns all book's fields/","text":"port_http_server / com.hexagonkt.http.server.examples / BooksTest / Get book returns all book's fields Get book returns all book's fields \u00b6 fun Get book returns all book ' s fields (): Unit","title":" get book returns all book's fields"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-get book returns all book's fields/#get-book-returns-all-books-fields","text":"fun Get book returns all book ' s fields (): Unit","title":"Get book returns all book's fields"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-init-/","text":"port_http_server / com.hexagonkt.http.server.examples / BooksTest / <init> <init> \u00b6 BooksTest ( adapter : ServerPort )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-init-/#init","text":"BooksTest ( adapter : ServerPort )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-invalid method returns 405/","text":"port_http_server / com.hexagonkt.http.server.examples / BooksTest / Invalid method returns 405 Invalid method returns 405 \u00b6 fun Invalid method returns 405 (): Unit","title":" invalid method returns 405"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-invalid method returns 405/#invalid-method-returns-405","text":"fun Invalid method returns 405 (): Unit","title":"Invalid method returns 405"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-list books contains all books -i-ds/","text":"port_http_server / com.hexagonkt.http.server.examples / BooksTest / List books contains all books IDs List books contains all books IDs \u00b6 fun List books contains all books IDs (): Unit","title":" list books contains all books  i ds"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-list books contains all books -i-ds/#list-books-contains-all-books-ids","text":"fun List books contains all books IDs (): Unit","title":"List books contains all books IDs"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-update book overrides existing book data/","text":"port_http_server / com.hexagonkt.http.server.examples / BooksTest / Update book overrides existing book data Update book overrides existing book data \u00b6 fun Update book overrides existing book data (): Unit","title":" update book overrides existing book data"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-update book overrides existing book data/#update-book-overrides-existing-book-data","text":"fun Update book overrides existing book data (): Unit","title":"Update book overrides existing book data"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/initialize/","text":"port_http_server / com.hexagonkt.http.server.examples / BooksTest / initialize initialize \u00b6 fun initialize (): Unit","title":"Initialize"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/initialize/#initialize","text":"fun initialize (): Unit","title":"initialize"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/server/","text":"port_http_server / com.hexagonkt.http.server.examples / BooksTest / server server \u00b6 val server: Server","title":"Server"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/server/#server","text":"val server: Server","title":"server"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/shutdown/","text":"port_http_server / com.hexagonkt.http.server.examples / BooksTest / shutdown shutdown \u00b6 fun shutdown (): Unit","title":"Shutdown"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/shutdown/#shutdown","text":"fun shutdown (): Unit","title":"shutdown"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-book/","text":"port_http_server / com.hexagonkt.http.server.examples / BooksTest / Book Book \u00b6 data class Book Constructors \u00b6 Name Summary <init> Book ( author : String , title : String ) Properties \u00b6 Name Summary author val author: String title val title: String","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-book/#book","text":"data class Book","title":"Book"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-book/#constructors","text":"Name Summary <init> Book ( author : String , title : String )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-book/#properties","text":"Name Summary author val author: String title val title: String","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-book/-init-/","text":"port_http_server / com.hexagonkt.http.server.examples / BooksTest / Book / <init> <init> \u00b6 Book ( author : String , title : String )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-book/-init-/#init","text":"Book ( author : String , title : String )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-book/author/","text":"port_http_server / com.hexagonkt.http.server.examples / BooksTest / Book / author author \u00b6 val author: String","title":"Author"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-book/author/#author","text":"val author: String","title":"author"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-book/title/","text":"port_http_server / com.hexagonkt.http.server.examples / BooksTest / Book / title title \u00b6 val title: String","title":"Title"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-books-test/-book/title/#title","text":"val title: String","title":"title"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/","text":"port_http_server / com.hexagonkt.http.server.examples / CookiesTest CookiesTest \u00b6 abstract class CookiesTest Constructors \u00b6 Name Summary <init> CookiesTest ( adapter : ServerPort ) Properties \u00b6 Name Summary server val server: Server Functions \u00b6 Name Summary clearCookies fun clearCookies (): Unit Create cookie adds a new cookie to the request fun Create cookie adds a new cookie to the request (): Unit Empty cookies assures there is no cookies fun Empty cookies assures there is no cookies (): Unit initialize fun initialize (): Unit Remove cookie deletes the given cookie fun Remove cookie deletes the given cookie (): Unit Remove not available cookie does not fail fun Remove not available cookie does not fail (): Unit shutdown fun shutdown (): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/#cookiestest","text":"abstract class CookiesTest","title":"CookiesTest"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/#constructors","text":"Name Summary <init> CookiesTest ( adapter : ServerPort )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/#properties","text":"Name Summary server val server: Server","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/#functions","text":"Name Summary clearCookies fun clearCookies (): Unit Create cookie adds a new cookie to the request fun Create cookie adds a new cookie to the request (): Unit Empty cookies assures there is no cookies fun Empty cookies assures there is no cookies (): Unit initialize fun initialize (): Unit Remove cookie deletes the given cookie fun Remove cookie deletes the given cookie (): Unit Remove not available cookie does not fail fun Remove not available cookie does not fail (): Unit shutdown fun shutdown (): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/-create cookie adds a new cookie to the request/","text":"port_http_server / com.hexagonkt.http.server.examples / CookiesTest / Create cookie adds a new cookie to the request Create cookie adds a new cookie to the request \u00b6 fun Create cookie adds a new cookie to the request (): Unit","title":" create cookie adds a new cookie to the request"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/-create cookie adds a new cookie to the request/#create-cookie-adds-a-new-cookie-to-the-request","text":"fun Create cookie adds a new cookie to the request (): Unit","title":"Create cookie adds a new cookie to the request"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/-empty cookies assures there is no cookies/","text":"port_http_server / com.hexagonkt.http.server.examples / CookiesTest / Empty cookies assures there is no cookies Empty cookies assures there is no cookies \u00b6 fun Empty cookies assures there is no cookies (): Unit","title":" empty cookies assures there is no cookies"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/-empty cookies assures there is no cookies/#empty-cookies-assures-there-is-no-cookies","text":"fun Empty cookies assures there is no cookies (): Unit","title":"Empty cookies assures there is no cookies"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/-init-/","text":"port_http_server / com.hexagonkt.http.server.examples / CookiesTest / <init> <init> \u00b6 CookiesTest ( adapter : ServerPort )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/-init-/#init","text":"CookiesTest ( adapter : ServerPort )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/-remove cookie deletes the given cookie/","text":"port_http_server / com.hexagonkt.http.server.examples / CookiesTest / Remove cookie deletes the given cookie Remove cookie deletes the given cookie \u00b6 fun Remove cookie deletes the given cookie (): Unit","title":" remove cookie deletes the given cookie"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/-remove cookie deletes the given cookie/#remove-cookie-deletes-the-given-cookie","text":"fun Remove cookie deletes the given cookie (): Unit","title":"Remove cookie deletes the given cookie"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/-remove not available cookie does not fail/","text":"port_http_server / com.hexagonkt.http.server.examples / CookiesTest / Remove not available cookie does not fail Remove not available cookie does not fail \u00b6 fun Remove not available cookie does not fail (): Unit","title":" remove not available cookie does not fail"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/-remove not available cookie does not fail/#remove-not-available-cookie-does-not-fail","text":"fun Remove not available cookie does not fail (): Unit","title":"Remove not available cookie does not fail"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/clear-cookies/","text":"port_http_server / com.hexagonkt.http.server.examples / CookiesTest / clearCookies clearCookies \u00b6 fun clearCookies (): Unit","title":"Clear cookies"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/clear-cookies/#clearcookies","text":"fun clearCookies (): Unit","title":"clearCookies"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/initialize/","text":"port_http_server / com.hexagonkt.http.server.examples / CookiesTest / initialize initialize \u00b6 fun initialize (): Unit","title":"Initialize"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/initialize/#initialize","text":"fun initialize (): Unit","title":"initialize"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/server/","text":"port_http_server / com.hexagonkt.http.server.examples / CookiesTest / server server \u00b6 val server: Server","title":"Server"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/server/#server","text":"val server: Server","title":"server"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/shutdown/","text":"port_http_server / com.hexagonkt.http.server.examples / CookiesTest / shutdown shutdown \u00b6 fun shutdown (): Unit","title":"Shutdown"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cookies-test/shutdown/#shutdown","text":"fun shutdown (): Unit","title":"shutdown"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest CorsTest \u00b6 abstract class CorsTest Constructors \u00b6 Name Summary <init> CorsTest ( adapter : ServerPort ) Properties \u00b6 Name Summary server val server: Server Functions \u00b6 Name Summary Allowed origin is returned properly fun Allowed origin is returned properly (): Unit CORS full pre flight fun CORS full pre flight (): Unit CORS pre flight fun CORS pre flight (): Unit CORS pre flight with allowed headers fun CORS pre flight with allowed headers (): Unit CORS pre flight with empty request method fun CORS pre flight with empty request method (): Unit CORS pre flight with not allowed headers fun CORS pre flight with not allowed headers (): Unit CORS pre flight with not allowed method fun CORS pre flight with not allowed method (): Unit CORS pre flight without request method fun CORS pre flight without request method (): Unit initialize fun initialize (): Unit Request with not allowed origin is forbidden fun Request with not allowed origin is forbidden (): Unit Request without origin continues as non CORS fun Request without origin continues as non CORS (): Unit shutdown fun shutdown (): Unit Simple CORS request fun Simple CORS request (): Unit Simple CORS request with exposed headers fun Simple CORS request with exposed headers (): Unit Simple CORS request with not allowed method fun Simple CORS request with not allowed method (): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/#corstest","text":"abstract class CorsTest","title":"CorsTest"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/#constructors","text":"Name Summary <init> CorsTest ( adapter : ServerPort )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/#properties","text":"Name Summary server val server: Server","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/#functions","text":"Name Summary Allowed origin is returned properly fun Allowed origin is returned properly (): Unit CORS full pre flight fun CORS full pre flight (): Unit CORS pre flight fun CORS pre flight (): Unit CORS pre flight with allowed headers fun CORS pre flight with allowed headers (): Unit CORS pre flight with empty request method fun CORS pre flight with empty request method (): Unit CORS pre flight with not allowed headers fun CORS pre flight with not allowed headers (): Unit CORS pre flight with not allowed method fun CORS pre flight with not allowed method (): Unit CORS pre flight without request method fun CORS pre flight without request method (): Unit initialize fun initialize (): Unit Request with not allowed origin is forbidden fun Request with not allowed origin is forbidden (): Unit Request without origin continues as non CORS fun Request without origin continues as non CORS (): Unit shutdown fun shutdown (): Unit Simple CORS request fun Simple CORS request (): Unit Simple CORS request with exposed headers fun Simple CORS request with exposed headers (): Unit Simple CORS request with not allowed method fun Simple CORS request with not allowed method (): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-allowed origin is returned properly/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / Allowed origin is returned properly Allowed origin is returned properly \u00b6 fun Allowed origin is returned properly (): Unit","title":" allowed origin is returned properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-allowed origin is returned properly/#allowed-origin-is-returned-properly","text":"fun Allowed origin is returned properly (): Unit","title":"Allowed origin is returned properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s full pre flight/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / CORS full pre flight CORS full pre flight \u00b6 fun CORS full pre flight (): Unit","title":" c o r s full pre flight"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s full pre flight/#cors-full-pre-flight","text":"fun CORS full pre flight (): Unit","title":"CORS full pre flight"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight with allowed headers/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / CORS pre flight with allowed headers CORS pre flight with allowed headers \u00b6 fun CORS pre flight with allowed headers (): Unit","title":" c o r s pre flight with allowed headers"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight with allowed headers/#cors-pre-flight-with-allowed-headers","text":"fun CORS pre flight with allowed headers (): Unit","title":"CORS pre flight with allowed headers"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight with empty request method/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / CORS pre flight with empty request method CORS pre flight with empty request method \u00b6 fun CORS pre flight with empty request method (): Unit","title":" c o r s pre flight with empty request method"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight with empty request method/#cors-pre-flight-with-empty-request-method","text":"fun CORS pre flight with empty request method (): Unit","title":"CORS pre flight with empty request method"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight with not allowed headers/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / CORS pre flight with not allowed headers CORS pre flight with not allowed headers \u00b6 fun CORS pre flight with not allowed headers (): Unit","title":" c o r s pre flight with not allowed headers"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight with not allowed headers/#cors-pre-flight-with-not-allowed-headers","text":"fun CORS pre flight with not allowed headers (): Unit","title":"CORS pre flight with not allowed headers"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight with not allowed method/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / CORS pre flight with not allowed method CORS pre flight with not allowed method \u00b6 fun CORS pre flight with not allowed method (): Unit","title":" c o r s pre flight with not allowed method"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight with not allowed method/#cors-pre-flight-with-not-allowed-method","text":"fun CORS pre flight with not allowed method (): Unit","title":"CORS pre flight with not allowed method"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight without request method/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / CORS pre flight without request method CORS pre flight without request method \u00b6 fun CORS pre flight without request method (): Unit","title":" c o r s pre flight without request method"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight without request method/#cors-pre-flight-without-request-method","text":"fun CORS pre flight without request method (): Unit","title":"CORS pre flight without request method"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / CORS pre flight CORS pre flight \u00b6 fun CORS pre flight (): Unit","title":" c o r s pre flight"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-c-o-r-s pre flight/#cors-pre-flight","text":"fun CORS pre flight (): Unit","title":"CORS pre flight"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-init-/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / <init> <init> \u00b6 CorsTest ( adapter : ServerPort )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-init-/#init","text":"CorsTest ( adapter : ServerPort )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-request with not allowed origin is forbidden/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / Request with not allowed origin is forbidden Request with not allowed origin is forbidden \u00b6 fun Request with not allowed origin is forbidden (): Unit","title":" request with not allowed origin is forbidden"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-request with not allowed origin is forbidden/#request-with-not-allowed-origin-is-forbidden","text":"fun Request with not allowed origin is forbidden (): Unit","title":"Request with not allowed origin is forbidden"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-request without origin continues as non -c-o-r-s/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / Request without origin continues as non CORS Request without origin continues as non CORS \u00b6 fun Request without origin continues as non CORS (): Unit","title":" request without origin continues as non  c o r s"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-request without origin continues as non -c-o-r-s/#request-without-origin-continues-as-non-cors","text":"fun Request without origin continues as non CORS (): Unit","title":"Request without origin continues as non CORS"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-simple -c-o-r-s request with exposed headers/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / Simple CORS request with exposed headers Simple CORS request with exposed headers \u00b6 fun Simple CORS request with exposed headers (): Unit","title":" simple  c o r s request with exposed headers"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-simple -c-o-r-s request with exposed headers/#simple-cors-request-with-exposed-headers","text":"fun Simple CORS request with exposed headers (): Unit","title":"Simple CORS request with exposed headers"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-simple -c-o-r-s request with not allowed method/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / Simple CORS request with not allowed method Simple CORS request with not allowed method \u00b6 fun Simple CORS request with not allowed method (): Unit","title":" simple  c o r s request with not allowed method"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-simple -c-o-r-s request with not allowed method/#simple-cors-request-with-not-allowed-method","text":"fun Simple CORS request with not allowed method (): Unit","title":"Simple CORS request with not allowed method"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-simple -c-o-r-s request/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / Simple CORS request Simple CORS request \u00b6 fun Simple CORS request (): Unit","title":" simple  c o r s request"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/-simple -c-o-r-s request/#simple-cors-request","text":"fun Simple CORS request (): Unit","title":"Simple CORS request"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/initialize/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / initialize initialize \u00b6 fun initialize (): Unit","title":"Initialize"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/initialize/#initialize","text":"fun initialize (): Unit","title":"initialize"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/server/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / server server \u00b6 val server: Server","title":"Server"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/server/#server","text":"val server: Server","title":"server"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/shutdown/","text":"port_http_server / com.hexagonkt.http.server.examples / CorsTest / shutdown shutdown \u00b6 fun shutdown (): Unit","title":"Shutdown"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-cors-test/shutdown/#shutdown","text":"fun shutdown (): Unit","title":"shutdown"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/","text":"port_http_server / com.hexagonkt.http.server.examples / ErrorsTest ErrorsTest \u00b6 abstract class ErrorsTest Exceptions \u00b6 Name Summary CustomException class CustomException : IllegalArgumentException Constructors \u00b6 Name Summary <init> ErrorsTest ( adapter : ServerPort ) Properties \u00b6 Name Summary server val server: Server Functions \u00b6 Name Summary A runtime exception returns a 500 code fun A runtime exception returns a 500 code (): Unit Base error handler catch all exceptions that subclass a given one fun Base error handler catch all exceptions that subclass a given one (): Unit Halt stops request with 500 status code fun Halt stops request with 500 status code (): Unit Handle exception allows to catch unhandled callback exceptions fun Handle exception allows to catch unhandled callback exceptions (): Unit Handling status code allows to change the returned code fun Handling status code allows to change the returned code (): Unit initialize fun initialize (): Unit shutdown fun shutdown (): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/#errorstest","text":"abstract class ErrorsTest","title":"ErrorsTest"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/#exceptions","text":"Name Summary CustomException class CustomException : IllegalArgumentException","title":"Exceptions"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/#constructors","text":"Name Summary <init> ErrorsTest ( adapter : ServerPort )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/#properties","text":"Name Summary server val server: Server","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/#functions","text":"Name Summary A runtime exception returns a 500 code fun A runtime exception returns a 500 code (): Unit Base error handler catch all exceptions that subclass a given one fun Base error handler catch all exceptions that subclass a given one (): Unit Halt stops request with 500 status code fun Halt stops request with 500 status code (): Unit Handle exception allows to catch unhandled callback exceptions fun Handle exception allows to catch unhandled callback exceptions (): Unit Handling status code allows to change the returned code fun Handling status code allows to change the returned code (): Unit initialize fun initialize (): Unit shutdown fun shutdown (): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-a runtime exception returns a 500 code/","text":"port_http_server / com.hexagonkt.http.server.examples / ErrorsTest / A runtime exception returns a 500 code A runtime exception returns a 500 code \u00b6 fun A runtime exception returns a 500 code (): Unit","title":" a runtime exception returns a 500 code"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-a runtime exception returns a 500 code/#a-runtime-exception-returns-a-500-code","text":"fun A runtime exception returns a 500 code (): Unit","title":"A runtime exception returns a 500 code"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-base error handler catch all exceptions that subclass a given one/","text":"port_http_server / com.hexagonkt.http.server.examples / ErrorsTest / Base error handler catch all exceptions that subclass a given one Base error handler catch all exceptions that subclass a given one \u00b6 fun Base error handler catch all exceptions that subclass a given one (): Unit","title":" base error handler catch all exceptions that subclass a given one"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-base error handler catch all exceptions that subclass a given one/#base-error-handler-catch-all-exceptions-that-subclass-a-given-one","text":"fun Base error handler catch all exceptions that subclass a given one (): Unit","title":"Base error handler catch all exceptions that subclass a given one"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-halt stops request with 500 status code/","text":"port_http_server / com.hexagonkt.http.server.examples / ErrorsTest / Halt stops request with 500 status code Halt stops request with 500 status code \u00b6 fun Halt stops request with 500 status code (): Unit","title":" halt stops request with 500 status code"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-halt stops request with 500 status code/#halt-stops-request-with-500-status-code","text":"fun Halt stops request with 500 status code (): Unit","title":"Halt stops request with 500 status code"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-handle exception allows to catch unhandled callback exceptions/","text":"port_http_server / com.hexagonkt.http.server.examples / ErrorsTest / Handle exception allows to catch unhandled callback exceptions Handle exception allows to catch unhandled callback exceptions \u00b6 fun Handle exception allows to catch unhandled callback exceptions (): Unit","title":" handle exception allows to catch unhandled callback exceptions"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-handle exception allows to catch unhandled callback exceptions/#handle-exception-allows-to-catch-unhandled-callback-exceptions","text":"fun Handle exception allows to catch unhandled callback exceptions (): Unit","title":"Handle exception allows to catch unhandled callback exceptions"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-handling status code allows to change the returned code/","text":"port_http_server / com.hexagonkt.http.server.examples / ErrorsTest / Handling status code allows to change the returned code Handling status code allows to change the returned code \u00b6 fun Handling status code allows to change the returned code (): Unit","title":" handling status code allows to change the returned code"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-handling status code allows to change the returned code/#handling-status-code-allows-to-change-the-returned-code","text":"fun Handling status code allows to change the returned code (): Unit","title":"Handling status code allows to change the returned code"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-init-/","text":"port_http_server / com.hexagonkt.http.server.examples / ErrorsTest / <init> <init> \u00b6 ErrorsTest ( adapter : ServerPort )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-init-/#init","text":"ErrorsTest ( adapter : ServerPort )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/initialize/","text":"port_http_server / com.hexagonkt.http.server.examples / ErrorsTest / initialize initialize \u00b6 fun initialize (): Unit","title":"Initialize"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/initialize/#initialize","text":"fun initialize (): Unit","title":"initialize"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/server/","text":"port_http_server / com.hexagonkt.http.server.examples / ErrorsTest / server server \u00b6 val server: Server","title":"Server"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/server/#server","text":"val server: Server","title":"server"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/shutdown/","text":"port_http_server / com.hexagonkt.http.server.examples / ErrorsTest / shutdown shutdown \u00b6 fun shutdown (): Unit","title":"Shutdown"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/shutdown/#shutdown","text":"fun shutdown (): Unit","title":"shutdown"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-custom-exception/","text":"port_http_server / com.hexagonkt.http.server.examples / ErrorsTest / CustomException CustomException \u00b6 class CustomException : IllegalArgumentException Constructors \u00b6 Name Summary <init> CustomException ()","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-custom-exception/#customexception","text":"class CustomException : IllegalArgumentException","title":"CustomException"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-custom-exception/#constructors","text":"Name Summary <init> CustomException ()","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-custom-exception/-init-/","text":"port_http_server / com.hexagonkt.http.server.examples / ErrorsTest / CustomException / <init> <init> \u00b6 CustomException ()","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server.examples/-errors-test/-custom-exception/-init-/#init","text":"CustomException ()","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/","text":"port_http_server / com.hexagonkt.http.server.examples / FilesTest FilesTest \u00b6 abstract class FilesTest Constructors \u00b6 Name Summary <init> FilesTest ( adapter : ServerPort ) Functions \u00b6 Name Summary An static file from resources can be fetched fun An static file from resources can be fetched (): Unit Files content type is returned properly fun Files content type is returned properly (): Unit Files mounted on a path are returned properly fun Files mounted on a path are returned properly (): Unit initialize fun initialize (): Unit Not found resources return 404 fun Not found resources return 404 () : Unit Parameters are separated from each other fun Parameters are separated from each other (): Unit Requesting a folder with an existing file name returns 404 fun Requesting a folder with an existing file name returns 404 (): Unit Sending files works properly fun Sending files works properly (): Unit Sending multi part content works properly fun Sending multi part content works properly (): Unit shutdown fun shutdown (): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/#filestest","text":"abstract class FilesTest","title":"FilesTest"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/#constructors","text":"Name Summary <init> FilesTest ( adapter : ServerPort )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/#functions","text":"Name Summary An static file from resources can be fetched fun An static file from resources can be fetched (): Unit Files content type is returned properly fun Files content type is returned properly (): Unit Files mounted on a path are returned properly fun Files mounted on a path are returned properly (): Unit initialize fun initialize (): Unit Not found resources return 404 fun Not found resources return 404 () : Unit Parameters are separated from each other fun Parameters are separated from each other (): Unit Requesting a folder with an existing file name returns 404 fun Requesting a folder with an existing file name returns 404 (): Unit Sending files works properly fun Sending files works properly (): Unit Sending multi part content works properly fun Sending multi part content works properly (): Unit shutdown fun shutdown (): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-an static file from resources can be fetched/","text":"port_http_server / com.hexagonkt.http.server.examples / FilesTest / An static file from resources can be fetched An static file from resources can be fetched \u00b6 fun An static file from resources can be fetched (): Unit","title":" an static file from resources can be fetched"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-an static file from resources can be fetched/#an-static-file-from-resources-can-be-fetched","text":"fun An static file from resources can be fetched (): Unit","title":"An static file from resources can be fetched"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-files content type is returned properly/","text":"port_http_server / com.hexagonkt.http.server.examples / FilesTest / Files content type is returned properly Files content type is returned properly \u00b6 fun Files content type is returned properly (): Unit","title":" files content type is returned properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-files content type is returned properly/#files-content-type-is-returned-properly","text":"fun Files content type is returned properly (): Unit","title":"Files content type is returned properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-files mounted on a path are returned properly/","text":"port_http_server / com.hexagonkt.http.server.examples / FilesTest / Files mounted on a path are returned properly Files mounted on a path are returned properly \u00b6 fun Files mounted on a path are returned properly (): Unit","title":" files mounted on a path are returned properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-files mounted on a path are returned properly/#files-mounted-on-a-path-are-returned-properly","text":"fun Files mounted on a path are returned properly (): Unit","title":"Files mounted on a path are returned properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-init-/","text":"port_http_server / com.hexagonkt.http.server.examples / FilesTest / <init> <init> \u00b6 FilesTest ( adapter : ServerPort )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-init-/#init","text":"FilesTest ( adapter : ServerPort )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-not found resources return 404/","text":"port_http_server / com.hexagonkt.http.server.examples / FilesTest / Not found resources return 404 Not found resources return 404 \u00b6 fun Not found resources return 404 () : Unit","title":" not found resources return 404"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-not found resources return 404/#not-found-resources-return-404","text":"fun Not found resources return 404 () : Unit","title":"Not found resources return 404"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-parameters are separated from each other/","text":"port_http_server / com.hexagonkt.http.server.examples / FilesTest / Parameters are separated from each other Parameters are separated from each other \u00b6 fun Parameters are separated from each other (): Unit","title":" parameters are separated from each other"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-parameters are separated from each other/#parameters-are-separated-from-each-other","text":"fun Parameters are separated from each other (): Unit","title":"Parameters are separated from each other"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-requesting a folder with an existing file name returns 404/","text":"port_http_server / com.hexagonkt.http.server.examples / FilesTest / Requesting a folder with an existing file name returns 404 Requesting a folder with an existing file name returns 404 \u00b6 fun Requesting a folder with an existing file name returns 404 (): Unit","title":" requesting a folder with an existing file name returns 404"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-requesting a folder with an existing file name returns 404/#requesting-a-folder-with-an-existing-file-name-returns-404","text":"fun Requesting a folder with an existing file name returns 404 (): Unit","title":"Requesting a folder with an existing file name returns 404"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-sending files works properly/","text":"port_http_server / com.hexagonkt.http.server.examples / FilesTest / Sending files works properly Sending files works properly \u00b6 fun Sending files works properly (): Unit","title":" sending files works properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-sending files works properly/#sending-files-works-properly","text":"fun Sending files works properly (): Unit","title":"Sending files works properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-sending multi part content works properly/","text":"port_http_server / com.hexagonkt.http.server.examples / FilesTest / Sending multi part content works properly Sending multi part content works properly \u00b6 fun Sending multi part content works properly (): Unit","title":" sending multi part content works properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/-sending multi part content works properly/#sending-multi-part-content-works-properly","text":"fun Sending multi part content works properly (): Unit","title":"Sending multi part content works properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/initialize/","text":"port_http_server / com.hexagonkt.http.server.examples / FilesTest / initialize initialize \u00b6 fun initialize (): Unit","title":"Initialize"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/initialize/#initialize","text":"fun initialize (): Unit","title":"initialize"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/shutdown/","text":"port_http_server / com.hexagonkt.http.server.examples / FilesTest / shutdown shutdown \u00b6 fun shutdown (): Unit","title":"Shutdown"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-files-test/shutdown/#shutdown","text":"fun shutdown (): Unit","title":"shutdown"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/","text":"port_http_server / com.hexagonkt.http.server.examples / FiltersTest FiltersTest \u00b6 abstract class FiltersTest Constructors \u00b6 Name Summary <init> FiltersTest ( adapter : ServerPort ) Functions \u00b6 Name Summary HTTP request with valid credentials returns valid response fun HTTP request with valid credentials returns valid response (): Unit initialize fun initialize (): Unit Request with invalid password returns 403 fun Request with invalid password returns 403 (): Unit Request with invalid user returns 403 fun Request with invalid user returns 403 (): Unit Request without authorization returns 401 fun Request without authorization returns 401 (): Unit shutdown fun shutdown (): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/#filterstest","text":"abstract class FiltersTest","title":"FiltersTest"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/#constructors","text":"Name Summary <init> FiltersTest ( adapter : ServerPort )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/#functions","text":"Name Summary HTTP request with valid credentials returns valid response fun HTTP request with valid credentials returns valid response (): Unit initialize fun initialize (): Unit Request with invalid password returns 403 fun Request with invalid password returns 403 (): Unit Request with invalid user returns 403 fun Request with invalid user returns 403 (): Unit Request without authorization returns 401 fun Request without authorization returns 401 (): Unit shutdown fun shutdown (): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/-h-t-t-p request with valid credentials returns valid response/","text":"port_http_server / com.hexagonkt.http.server.examples / FiltersTest / HTTP request with valid credentials returns valid response HTTP request with valid credentials returns valid response \u00b6 fun HTTP request with valid credentials returns valid response (): Unit","title":" h t t p request with valid credentials returns valid response"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/-h-t-t-p request with valid credentials returns valid response/#http-request-with-valid-credentials-returns-valid-response","text":"fun HTTP request with valid credentials returns valid response (): Unit","title":"HTTP request with valid credentials returns valid response"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/-init-/","text":"port_http_server / com.hexagonkt.http.server.examples / FiltersTest / <init> <init> \u00b6 FiltersTest ( adapter : ServerPort )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/-init-/#init","text":"FiltersTest ( adapter : ServerPort )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/-request with invalid password returns 403/","text":"port_http_server / com.hexagonkt.http.server.examples / FiltersTest / Request with invalid password returns 403 Request with invalid password returns 403 \u00b6 fun Request with invalid password returns 403 (): Unit","title":" request with invalid password returns 403"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/-request with invalid password returns 403/#request-with-invalid-password-returns-403","text":"fun Request with invalid password returns 403 (): Unit","title":"Request with invalid password returns 403"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/-request with invalid user returns 403/","text":"port_http_server / com.hexagonkt.http.server.examples / FiltersTest / Request with invalid user returns 403 Request with invalid user returns 403 \u00b6 fun Request with invalid user returns 403 (): Unit","title":" request with invalid user returns 403"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/-request with invalid user returns 403/#request-with-invalid-user-returns-403","text":"fun Request with invalid user returns 403 (): Unit","title":"Request with invalid user returns 403"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/-request without authorization returns 401/","text":"port_http_server / com.hexagonkt.http.server.examples / FiltersTest / Request without authorization returns 401 Request without authorization returns 401 \u00b6 fun Request without authorization returns 401 (): Unit","title":" request without authorization returns 401"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/-request without authorization returns 401/#request-without-authorization-returns-401","text":"fun Request without authorization returns 401 (): Unit","title":"Request without authorization returns 401"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/initialize/","text":"port_http_server / com.hexagonkt.http.server.examples / FiltersTest / initialize initialize \u00b6 fun initialize (): Unit","title":"Initialize"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/initialize/#initialize","text":"fun initialize (): Unit","title":"initialize"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/shutdown/","text":"port_http_server / com.hexagonkt.http.server.examples / FiltersTest / shutdown shutdown \u00b6 fun shutdown (): Unit","title":"Shutdown"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-filters-test/shutdown/#shutdown","text":"fun shutdown (): Unit","title":"shutdown"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest GenericTest \u00b6 abstract class GenericTest Constructors \u00b6 Name Summary <init> GenericTest ( adapter : ServerPort ) Functions \u00b6 Name Summary contentType fun contentType (): Unit echoParamWithMaj fun echoParamWithMaj (): Unit echoParamWithUpperCaseInValue fun echoParamWithUpperCaseInValue (): Unit Empty query string is handled properly fun Empty query string is handled properly (): Unit getRoot fun getRoot (): Unit HTTP methods are handled correctly fun HTTP methods are handled correctly (): Unit initialize fun initialize (): Unit notFound fun notFound (): Unit redirect fun redirect (): Unit Request body is parsed properly fun Request body is parsed properly (): Unit Request data is read properly fun Request data is read properly (): Unit requestDataWithDifferentHeaders fun requestDataWithDifferentHeaders (): Unit Response data is generated properly fun Response data is generated properly (): Unit Root files content type is returned properly fun Root files content type is returned properly (): Unit shutdown fun shutdown (): Unit twoRoutesWithDifferentCase fun twoRoutesWithDifferentCase (): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/#generictest","text":"abstract class GenericTest","title":"GenericTest"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/#constructors","text":"Name Summary <init> GenericTest ( adapter : ServerPort )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/#functions","text":"Name Summary contentType fun contentType (): Unit echoParamWithMaj fun echoParamWithMaj (): Unit echoParamWithUpperCaseInValue fun echoParamWithUpperCaseInValue (): Unit Empty query string is handled properly fun Empty query string is handled properly (): Unit getRoot fun getRoot (): Unit HTTP methods are handled correctly fun HTTP methods are handled correctly (): Unit initialize fun initialize (): Unit notFound fun notFound (): Unit redirect fun redirect (): Unit Request body is parsed properly fun Request body is parsed properly (): Unit Request data is read properly fun Request data is read properly (): Unit requestDataWithDifferentHeaders fun requestDataWithDifferentHeaders (): Unit Response data is generated properly fun Response data is generated properly (): Unit Root files content type is returned properly fun Root files content type is returned properly (): Unit shutdown fun shutdown (): Unit twoRoutesWithDifferentCase fun twoRoutesWithDifferentCase (): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/-empty query string is handled properly/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / Empty query string is handled properly Empty query string is handled properly \u00b6 fun Empty query string is handled properly (): Unit","title":" empty query string is handled properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/-empty query string is handled properly/#empty-query-string-is-handled-properly","text":"fun Empty query string is handled properly (): Unit","title":"Empty query string is handled properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/-h-t-t-p methods are handled correctly/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / HTTP methods are handled correctly HTTP methods are handled correctly \u00b6 fun HTTP methods are handled correctly (): Unit","title":" h t t p methods are handled correctly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/-h-t-t-p methods are handled correctly/#http-methods-are-handled-correctly","text":"fun HTTP methods are handled correctly (): Unit","title":"HTTP methods are handled correctly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/-init-/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / <init> <init> \u00b6 GenericTest ( adapter : ServerPort )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/-init-/#init","text":"GenericTest ( adapter : ServerPort )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/-request body is parsed properly/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / Request body is parsed properly Request body is parsed properly \u00b6 fun Request body is parsed properly (): Unit","title":" request body is parsed properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/-request body is parsed properly/#request-body-is-parsed-properly","text":"fun Request body is parsed properly (): Unit","title":"Request body is parsed properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/-request data is read properly/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / Request data is read properly Request data is read properly \u00b6 fun Request data is read properly (): Unit","title":" request data is read properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/-request data is read properly/#request-data-is-read-properly","text":"fun Request data is read properly (): Unit","title":"Request data is read properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/-response data is generated properly/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / Response data is generated properly Response data is generated properly \u00b6 fun Response data is generated properly (): Unit","title":" response data is generated properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/-response data is generated properly/#response-data-is-generated-properly","text":"fun Response data is generated properly (): Unit","title":"Response data is generated properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/-root files content type is returned properly/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / Root files content type is returned properly Root files content type is returned properly \u00b6 fun Root files content type is returned properly (): Unit","title":" root files content type is returned properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/-root files content type is returned properly/#root-files-content-type-is-returned-properly","text":"fun Root files content type is returned properly (): Unit","title":"Root files content type is returned properly"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/content-type/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / contentType contentType \u00b6 fun contentType (): Unit","title":"Content type"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/content-type/#contenttype","text":"fun contentType (): Unit","title":"contentType"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/echo-param-with-maj/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / echoParamWithMaj echoParamWithMaj \u00b6 fun echoParamWithMaj (): Unit","title":"Echo param with maj"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/echo-param-with-maj/#echoparamwithmaj","text":"fun echoParamWithMaj (): Unit","title":"echoParamWithMaj"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/echo-param-with-upper-case-in-value/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / echoParamWithUpperCaseInValue echoParamWithUpperCaseInValue \u00b6 fun echoParamWithUpperCaseInValue (): Unit","title":"Echo param with upper case in value"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/echo-param-with-upper-case-in-value/#echoparamwithuppercaseinvalue","text":"fun echoParamWithUpperCaseInValue (): Unit","title":"echoParamWithUpperCaseInValue"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/get-root/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / getRoot getRoot \u00b6 fun getRoot (): Unit","title":"Get root"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/get-root/#getroot","text":"fun getRoot (): Unit","title":"getRoot"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/initialize/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / initialize initialize \u00b6 fun initialize (): Unit","title":"Initialize"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/initialize/#initialize","text":"fun initialize (): Unit","title":"initialize"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/not-found/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / notFound notFound \u00b6 fun notFound (): Unit","title":"Not found"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/not-found/#notfound","text":"fun notFound (): Unit","title":"notFound"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/redirect/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / redirect redirect \u00b6 fun redirect (): Unit","title":"Redirect"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/redirect/#redirect","text":"fun redirect (): Unit","title":"redirect"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/request-data-with-different-headers/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / requestDataWithDifferentHeaders requestDataWithDifferentHeaders \u00b6 fun requestDataWithDifferentHeaders (): Unit","title":"Request data with different headers"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/request-data-with-different-headers/#requestdatawithdifferentheaders","text":"fun requestDataWithDifferentHeaders (): Unit","title":"requestDataWithDifferentHeaders"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/shutdown/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / shutdown shutdown \u00b6 fun shutdown (): Unit","title":"Shutdown"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/shutdown/#shutdown","text":"fun shutdown (): Unit","title":"shutdown"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/two-routes-with-different-case/","text":"port_http_server / com.hexagonkt.http.server.examples / GenericTest / twoRoutesWithDifferentCase twoRoutesWithDifferentCase \u00b6 fun twoRoutesWithDifferentCase (): Unit","title":"Two routes with different case"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-generic-test/two-routes-with-different-case/#tworouteswithdifferentcase","text":"fun twoRoutesWithDifferentCase (): Unit","title":"twoRoutesWithDifferentCase"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/","text":"port_http_server / com.hexagonkt.http.server.examples / SessionTest SessionTest \u00b6 abstract class SessionTest Constructors \u00b6 Name Summary <init> SessionTest ( adapter : ServerPort ) Properties \u00b6 Name Summary server val server: Server Functions \u00b6 Name Summary Attribute is added to session fun Attribute is added to session (): Unit initialize fun initialize (): Unit Session attribute lifecycle test fun Session attribute lifecycle test (): Unit shutdown fun shutdown (): Unit","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/#sessiontest","text":"abstract class SessionTest","title":"SessionTest"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/#constructors","text":"Name Summary <init> SessionTest ( adapter : ServerPort )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/#properties","text":"Name Summary server val server: Server","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/#functions","text":"Name Summary Attribute is added to session fun Attribute is added to session (): Unit initialize fun initialize (): Unit Session attribute lifecycle test fun Session attribute lifecycle test (): Unit shutdown fun shutdown (): Unit","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/-attribute is added to session/","text":"port_http_server / com.hexagonkt.http.server.examples / SessionTest / Attribute is added to session Attribute is added to session \u00b6 fun Attribute is added to session (): Unit","title":" attribute is added to session"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/-attribute is added to session/#attribute-is-added-to-session","text":"fun Attribute is added to session (): Unit","title":"Attribute is added to session"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/-init-/","text":"port_http_server / com.hexagonkt.http.server.examples / SessionTest / <init> <init> \u00b6 SessionTest ( adapter : ServerPort )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/-init-/#init","text":"SessionTest ( adapter : ServerPort )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/-session attribute lifecycle test/","text":"port_http_server / com.hexagonkt.http.server.examples / SessionTest / Session attribute lifecycle test Session attribute lifecycle test \u00b6 fun Session attribute lifecycle test (): Unit","title":" session attribute lifecycle test"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/-session attribute lifecycle test/#session-attribute-lifecycle-test","text":"fun Session attribute lifecycle test (): Unit","title":"Session attribute lifecycle test"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/initialize/","text":"port_http_server / com.hexagonkt.http.server.examples / SessionTest / initialize initialize \u00b6 fun initialize (): Unit","title":"Initialize"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/initialize/#initialize","text":"fun initialize (): Unit","title":"initialize"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/server/","text":"port_http_server / com.hexagonkt.http.server.examples / SessionTest / server server \u00b6 val server: Server","title":"Server"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/server/#server","text":"val server: Server","title":"server"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/shutdown/","text":"port_http_server / com.hexagonkt.http.server.examples / SessionTest / shutdown shutdown \u00b6 fun shutdown (): Unit","title":"Shutdown"},{"location":"port_http_server/com.hexagonkt.http.server.examples/-session-test/shutdown/#shutdown","text":"fun shutdown (): Unit","title":"shutdown"},{"location":"port_http_server/com.hexagonkt.http.server.test/","text":"port_http_server / com.hexagonkt.http.server.test Package com.hexagonkt.http.server.test \u00b6 Types \u00b6 Name Summary TestRequest data class TestRequest TestResponse data class TestResponse TestSession data class TestSession Functions \u00b6 Name Summary testCall fun testCall ( request : TestRequest = TestRequest (), response : TestResponse = TestResponse (), session : TestSession = TestSession ()): Call","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server.test/#package-comhexagonkthttpservertest","text":"","title":"Package com.hexagonkt.http.server.test"},{"location":"port_http_server/com.hexagonkt.http.server.test/#types","text":"Name Summary TestRequest data class TestRequest TestResponse data class TestResponse TestSession data class TestSession","title":"Types"},{"location":"port_http_server/com.hexagonkt.http.server.test/#functions","text":"Name Summary testCall fun testCall ( request : TestRequest = TestRequest (), response : TestResponse = TestResponse (), session : TestSession = TestSession ()): Call","title":"Functions"},{"location":"port_http_server/com.hexagonkt.http.server.test/test-call/","text":"port_http_server / com.hexagonkt.http.server.test / testCall testCall \u00b6 fun testCall ( request : TestRequest = TestRequest (), response : TestResponse = TestResponse (), session : TestSession = TestSession ()): Call","title":"Test call"},{"location":"port_http_server/com.hexagonkt.http.server.test/test-call/#testcall","text":"fun testCall ( request : TestRequest = TestRequest (), response : TestResponse = TestResponse (), session : TestSession = TestSession ()): Call","title":"testCall"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest TestRequest \u00b6 data class TestRequest Constructors \u00b6 Name Summary <init> TestRequest ( method : Method = Method . GET , scheme : String = \"http\" , host : String = \"localhost\" , ip : String = \"127.0.0.1\" , port : Int = 9090 , path : String = \"/\" , pathParameters : Map < String , String > = emptyMap (), queryString : String = \"\" , url : String = \"$scheme://$host$path\" , parts : Map < String , Part > = emptyMap (), parameters : Map < String , List < String >> = emptyMap (), queryParameters : Map < String , List < String >> = emptyMap (), formParameters : Map < String , List < String >> = emptyMap (), body : String = \"\" , headers : Map < String , List < String >> = emptyMap (), cookies : Map < String , HttpCookie > = emptyMap (), contentType : String ? = null , contentLength : Long = body . length . toLong ()) Properties \u00b6 Name Summary body val body: String contentLength val contentLength: Long contentType val contentType: String ? cookies val cookies: Map < String , HttpCookie > formParameters val formParameters: Map < String , List < String >> headers val headers: Map < String , List < String >> host val host: String ip val ip: String method val method: Method parameters val parameters: Map < String , List < String >> parts val parts: Map < String , Part > path val path: String pathParameters val pathParameters: Map < String , String > port val port: Int queryParameters val queryParameters: Map < String , List < String >> queryString val queryString: String scheme val scheme: String url val url: String","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/#testrequest","text":"data class TestRequest","title":"TestRequest"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/#constructors","text":"Name Summary <init> TestRequest ( method : Method = Method . GET , scheme : String = \"http\" , host : String = \"localhost\" , ip : String = \"127.0.0.1\" , port : Int = 9090 , path : String = \"/\" , pathParameters : Map < String , String > = emptyMap (), queryString : String = \"\" , url : String = \"$scheme://$host$path\" , parts : Map < String , Part > = emptyMap (), parameters : Map < String , List < String >> = emptyMap (), queryParameters : Map < String , List < String >> = emptyMap (), formParameters : Map < String , List < String >> = emptyMap (), body : String = \"\" , headers : Map < String , List < String >> = emptyMap (), cookies : Map < String , HttpCookie > = emptyMap (), contentType : String ? = null , contentLength : Long = body . length . toLong ())","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/#properties","text":"Name Summary body val body: String contentLength val contentLength: Long contentType val contentType: String ? cookies val cookies: Map < String , HttpCookie > formParameters val formParameters: Map < String , List < String >> headers val headers: Map < String , List < String >> host val host: String ip val ip: String method val method: Method parameters val parameters: Map < String , List < String >> parts val parts: Map < String , Part > path val path: String pathParameters val pathParameters: Map < String , String > port val port: Int queryParameters val queryParameters: Map < String , List < String >> queryString val queryString: String scheme val scheme: String url val url: String","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/-init-/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / <init> <init> \u00b6 TestRequest ( method : Method = Method . GET , scheme : String = \"http\" , host : String = \"localhost\" , ip : String = \"127.0.0.1\" , port : Int = 9090 , path : String = \"/\" , pathParameters : Map < String , String > = emptyMap (), queryString : String = \"\" , url : String = \"$scheme://$host$path\" , parts : Map < String , Part > = emptyMap (), parameters : Map < String , List < String >> = emptyMap (), queryParameters : Map < String , List < String >> = emptyMap (), formParameters : Map < String , List < String >> = emptyMap (), body : String = \"\" , headers : Map < String , List < String >> = emptyMap (), cookies : Map < String , HttpCookie > = emptyMap (), contentType : String ? = null , contentLength : Long = body . length . toLong ())","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/-init-/#init","text":"TestRequest ( method : Method = Method . GET , scheme : String = \"http\" , host : String = \"localhost\" , ip : String = \"127.0.0.1\" , port : Int = 9090 , path : String = \"/\" , pathParameters : Map < String , String > = emptyMap (), queryString : String = \"\" , url : String = \"$scheme://$host$path\" , parts : Map < String , Part > = emptyMap (), parameters : Map < String , List < String >> = emptyMap (), queryParameters : Map < String , List < String >> = emptyMap (), formParameters : Map < String , List < String >> = emptyMap (), body : String = \"\" , headers : Map < String , List < String >> = emptyMap (), cookies : Map < String , HttpCookie > = emptyMap (), contentType : String ? = null , contentLength : Long = body . length . toLong ())","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/body/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / body body \u00b6 val body: String","title":"Body"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/body/#body","text":"val body: String","title":"body"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/content-length/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / contentLength contentLength \u00b6 val contentLength: Long","title":"Content length"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/content-length/#contentlength","text":"val contentLength: Long","title":"contentLength"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/content-type/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / contentType contentType \u00b6 val contentType: String ?","title":"Content type"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/content-type/#contenttype","text":"val contentType: String ?","title":"contentType"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/cookies/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / cookies cookies \u00b6 val cookies: Map < String , HttpCookie >","title":"Cookies"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/cookies/#cookies","text":"val cookies: Map < String , HttpCookie >","title":"cookies"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/form-parameters/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / formParameters formParameters \u00b6 val formParameters: Map < String , List < String >>","title":"Form parameters"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/form-parameters/#formparameters","text":"val formParameters: Map < String , List < String >>","title":"formParameters"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/headers/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / headers headers \u00b6 val headers: Map < String , List < String >>","title":"Headers"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/headers/#headers","text":"val headers: Map < String , List < String >>","title":"headers"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/host/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / host host \u00b6 val host: String","title":"Host"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/host/#host","text":"val host: String","title":"host"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/ip/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / ip ip \u00b6 val ip: String","title":"Ip"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/ip/#ip","text":"val ip: String","title":"ip"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/method/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / method method \u00b6 val method: Method","title":"Method"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/method/#method","text":"val method: Method","title":"method"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/parameters/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / parameters parameters \u00b6 val parameters: Map < String , List < String >>","title":"Parameters"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/parameters/#parameters","text":"val parameters: Map < String , List < String >>","title":"parameters"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/parts/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / parts parts \u00b6 val parts: Map < String , Part >","title":"Parts"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/parts/#parts","text":"val parts: Map < String , Part >","title":"parts"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/path-parameters/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / pathParameters pathParameters \u00b6 val pathParameters: Map < String , String >","title":"Path parameters"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/path-parameters/#pathparameters","text":"val pathParameters: Map < String , String >","title":"pathParameters"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/path/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / path path \u00b6 val path: String","title":"Path"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/path/#path","text":"val path: String","title":"path"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/port/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / port port \u00b6 val port: Int","title":"Port"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/port/#port","text":"val port: Int","title":"port"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/query-parameters/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / queryParameters queryParameters \u00b6 val queryParameters: Map < String , List < String >>","title":"Query parameters"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/query-parameters/#queryparameters","text":"val queryParameters: Map < String , List < String >>","title":"queryParameters"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/query-string/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / queryString queryString \u00b6 val queryString: String","title":"Query string"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/query-string/#querystring","text":"val queryString: String","title":"queryString"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/scheme/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / scheme scheme \u00b6 val scheme: String","title":"Scheme"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/scheme/#scheme","text":"val scheme: String","title":"scheme"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/url/","text":"port_http_server / com.hexagonkt.http.server.test / TestRequest / url url \u00b6 val url: String","title":"Url"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-request/url/#url","text":"val url: String","title":"url"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-response/","text":"port_http_server / com.hexagonkt.http.server.test / TestResponse TestResponse \u00b6 data class TestResponse Constructors \u00b6 Name Summary <init> TestResponse ( cookies : Map < String , HttpCookie > = emptyMap (), body : Any = \"\" , contentType : String ? = null , status : Int = 200 , outputStream : OutputStream = ByteArrayOutputStream ()) Properties \u00b6 Name Summary body var body : Any contentType var contentType : String ? cookies var cookies : Map < String , HttpCookie > outputStream var outputStream : OutputStream status var status : Int","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-response/#testresponse","text":"data class TestResponse","title":"TestResponse"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-response/#constructors","text":"Name Summary <init> TestResponse ( cookies : Map < String , HttpCookie > = emptyMap (), body : Any = \"\" , contentType : String ? = null , status : Int = 200 , outputStream : OutputStream = ByteArrayOutputStream ())","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-response/#properties","text":"Name Summary body var body : Any contentType var contentType : String ? cookies var cookies : Map < String , HttpCookie > outputStream var outputStream : OutputStream status var status : Int","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-response/-init-/","text":"port_http_server / com.hexagonkt.http.server.test / TestResponse / <init> <init> \u00b6 TestResponse ( cookies : Map < String , HttpCookie > = emptyMap (), body : Any = \"\" , contentType : String ? = null , status : Int = 200 , outputStream : OutputStream = ByteArrayOutputStream ())","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-response/-init-/#init","text":"TestResponse ( cookies : Map < String , HttpCookie > = emptyMap (), body : Any = \"\" , contentType : String ? = null , status : Int = 200 , outputStream : OutputStream = ByteArrayOutputStream ())","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-response/body/","text":"port_http_server / com.hexagonkt.http.server.test / TestResponse / body body \u00b6 var body : Any","title":"Body"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-response/body/#body","text":"var body : Any","title":"body"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-response/content-type/","text":"port_http_server / com.hexagonkt.http.server.test / TestResponse / contentType contentType \u00b6 var contentType : String ?","title":"Content type"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-response/content-type/#contenttype","text":"var contentType : String ?","title":"contentType"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-response/cookies/","text":"port_http_server / com.hexagonkt.http.server.test / TestResponse / cookies cookies \u00b6 var cookies : Map < String , HttpCookie >","title":"Cookies"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-response/cookies/#cookies","text":"var cookies : Map < String , HttpCookie >","title":"cookies"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-response/output-stream/","text":"port_http_server / com.hexagonkt.http.server.test / TestResponse / outputStream outputStream \u00b6 var outputStream : OutputStream","title":"Output stream"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-response/output-stream/#outputstream","text":"var outputStream : OutputStream","title":"outputStream"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-response/status/","text":"port_http_server / com.hexagonkt.http.server.test / TestResponse / status status \u00b6 var status : Int","title":"Status"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-response/status/#status","text":"var status : Int","title":"status"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-session/","text":"port_http_server / com.hexagonkt.http.server.test / TestSession TestSession \u00b6 data class TestSession Constructors \u00b6 Name Summary <init> TestSession ( attributes : Map < String , Any ?> = emptyMap (), creationTime : Long ? = null , id : String ? = null , maxInactiveInterval : Int ? = null , lastAccessedTime : Long ? = null ) Properties \u00b6 Name Summary attributes var attributes : Map < String , Any ?> creationTime var creationTime : Long ? id var id : String ? lastAccessedTime var lastAccessedTime : Long ? maxInactiveInterval var maxInactiveInterval : Int ?","title":"Home"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-session/#testsession","text":"data class TestSession","title":"TestSession"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-session/#constructors","text":"Name Summary <init> TestSession ( attributes : Map < String , Any ?> = emptyMap (), creationTime : Long ? = null , id : String ? = null , maxInactiveInterval : Int ? = null , lastAccessedTime : Long ? = null )","title":"Constructors"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-session/#properties","text":"Name Summary attributes var attributes : Map < String , Any ?> creationTime var creationTime : Long ? id var id : String ? lastAccessedTime var lastAccessedTime : Long ? maxInactiveInterval var maxInactiveInterval : Int ?","title":"Properties"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-session/-init-/","text":"port_http_server / com.hexagonkt.http.server.test / TestSession / <init> <init> \u00b6 TestSession ( attributes : Map < String , Any ?> = emptyMap (), creationTime : Long ? = null , id : String ? = null , maxInactiveInterval : Int ? = null , lastAccessedTime : Long ? = null )","title":" init "},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-session/-init-/#init","text":"TestSession ( attributes : Map < String , Any ?> = emptyMap (), creationTime : Long ? = null , id : String ? = null , maxInactiveInterval : Int ? = null , lastAccessedTime : Long ? = null )","title":"&lt;init&gt;"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-session/attributes/","text":"port_http_server / com.hexagonkt.http.server.test / TestSession / attributes attributes \u00b6 var attributes : Map < String , Any ?>","title":"Attributes"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-session/attributes/#attributes","text":"var attributes : Map < String , Any ?>","title":"attributes"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-session/creation-time/","text":"port_http_server / com.hexagonkt.http.server.test / TestSession / creationTime creationTime \u00b6 var creationTime : Long ?","title":"Creation time"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-session/creation-time/#creationtime","text":"var creationTime : Long ?","title":"creationTime"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-session/id/","text":"port_http_server / com.hexagonkt.http.server.test / TestSession / id id \u00b6 var id : String ?","title":"Id"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-session/id/#id","text":"var id : String ?","title":"id"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-session/last-accessed-time/","text":"port_http_server / com.hexagonkt.http.server.test / TestSession / lastAccessedTime lastAccessedTime \u00b6 var lastAccessedTime : Long ?","title":"Last accessed time"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-session/last-accessed-time/#lastaccessedtime","text":"var lastAccessedTime : Long ?","title":"lastAccessedTime"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-session/max-inactive-interval/","text":"port_http_server / com.hexagonkt.http.server.test / TestSession / maxInactiveInterval maxInactiveInterval \u00b6 var maxInactiveInterval : Int ?","title":"Max inactive interval"},{"location":"port_http_server/com.hexagonkt.http.server.test/-test-session/max-inactive-interval/#maxinactiveinterval","text":"var maxInactiveInterval : Int ?","title":"maxInactiveInterval"},{"location":"port_messaging/","text":"port_messaging TODO Packages \u00b6 Name Summary com.hexagonkt.messaging TODO Index \u00b6 All Types","title":"Messaging"},{"location":"port_messaging/#packages","text":"Name Summary com.hexagonkt.messaging TODO","title":"Packages"},{"location":"port_messaging/#index","text":"All Types","title":"Index"},{"location":"port_messaging/alltypes/","text":"TODO All Types \u00b6 Name Summary com.hexagonkt.messaging.Message \u00b6 | com.hexagonkt.messaging.MessagingPort \u00b6","title":"Home"},{"location":"port_messaging/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"port_messaging/alltypes/#comhexagonktmessagingmessage","text":"|","title":"com.hexagonkt.messaging.Message"},{"location":"port_messaging/alltypes/#comhexagonktmessagingmessagingport","text":"","title":"com.hexagonkt.messaging.MessagingPort"},{"location":"port_messaging/com.hexagonkt.messaging/","text":"port_messaging / com.hexagonkt.messaging Package com.hexagonkt.messaging \u00b6 TODO Types \u00b6 Name Summary Message open class Message MessagingPort interface MessagingPort","title":"Home"},{"location":"port_messaging/com.hexagonkt.messaging/#package-comhexagonktmessaging","text":"TODO","title":"Package com.hexagonkt.messaging"},{"location":"port_messaging/com.hexagonkt.messaging/#types","text":"Name Summary Message open class Message MessagingPort interface MessagingPort","title":"Types"},{"location":"port_messaging/com.hexagonkt.messaging/-message/","text":"port_messaging / com.hexagonkt.messaging / Message Message \u00b6 open class Message Constructors \u00b6 Name Summary <init> Message ( timestamp : Long = currentTimeMillis (), dateTime : Long = LocalDateTime . now (). toNumber (), hostname : String = Jvm . hostname , ip : String = Jvm . ip , jvmid : String = Jvm . id , thread : String = currentThread (). name ) Properties \u00b6 Name Summary dateTime val dateTime: Long hostname val hostname: String ip val ip: String jvmid val jvmid: String thread val thread: String timestamp val timestamp: Long","title":"Home"},{"location":"port_messaging/com.hexagonkt.messaging/-message/#message","text":"open class Message","title":"Message"},{"location":"port_messaging/com.hexagonkt.messaging/-message/#constructors","text":"Name Summary <init> Message ( timestamp : Long = currentTimeMillis (), dateTime : Long = LocalDateTime . now (). toNumber (), hostname : String = Jvm . hostname , ip : String = Jvm . ip , jvmid : String = Jvm . id , thread : String = currentThread (). name )","title":"Constructors"},{"location":"port_messaging/com.hexagonkt.messaging/-message/#properties","text":"Name Summary dateTime val dateTime: Long hostname val hostname: String ip val ip: String jvmid val jvmid: String thread val thread: String timestamp val timestamp: Long","title":"Properties"},{"location":"port_messaging/com.hexagonkt.messaging/-message/-init-/","text":"port_messaging / com.hexagonkt.messaging / Message / <init> <init> \u00b6 Message ( timestamp : Long = currentTimeMillis (), dateTime : Long = LocalDateTime . now (). toNumber (), hostname : String = Jvm . hostname , ip : String = Jvm . ip , jvmid : String = Jvm . id , thread : String = currentThread (). name )","title":" init "},{"location":"port_messaging/com.hexagonkt.messaging/-message/-init-/#init","text":"Message ( timestamp : Long = currentTimeMillis (), dateTime : Long = LocalDateTime . now (). toNumber (), hostname : String = Jvm . hostname , ip : String = Jvm . ip , jvmid : String = Jvm . id , thread : String = currentThread (). name )","title":"&lt;init&gt;"},{"location":"port_messaging/com.hexagonkt.messaging/-message/date-time/","text":"port_messaging / com.hexagonkt.messaging / Message / dateTime dateTime \u00b6 val dateTime: Long","title":"Date time"},{"location":"port_messaging/com.hexagonkt.messaging/-message/date-time/#datetime","text":"val dateTime: Long","title":"dateTime"},{"location":"port_messaging/com.hexagonkt.messaging/-message/hostname/","text":"port_messaging / com.hexagonkt.messaging / Message / hostname hostname \u00b6 val hostname: String","title":"Hostname"},{"location":"port_messaging/com.hexagonkt.messaging/-message/hostname/#hostname","text":"val hostname: String","title":"hostname"},{"location":"port_messaging/com.hexagonkt.messaging/-message/ip/","text":"port_messaging / com.hexagonkt.messaging / Message / ip ip \u00b6 val ip: String","title":"Ip"},{"location":"port_messaging/com.hexagonkt.messaging/-message/ip/#ip","text":"val ip: String","title":"ip"},{"location":"port_messaging/com.hexagonkt.messaging/-message/jvmid/","text":"port_messaging / com.hexagonkt.messaging / Message / jvmid jvmid \u00b6 val jvmid: String","title":"Jvmid"},{"location":"port_messaging/com.hexagonkt.messaging/-message/jvmid/#jvmid","text":"val jvmid: String","title":"jvmid"},{"location":"port_messaging/com.hexagonkt.messaging/-message/thread/","text":"port_messaging / com.hexagonkt.messaging / Message / thread thread \u00b6 val thread: String","title":"Thread"},{"location":"port_messaging/com.hexagonkt.messaging/-message/thread/#thread","text":"val thread: String","title":"thread"},{"location":"port_messaging/com.hexagonkt.messaging/-message/timestamp/","text":"port_messaging / com.hexagonkt.messaging / Message / timestamp timestamp \u00b6 val timestamp: Long","title":"Timestamp"},{"location":"port_messaging/com.hexagonkt.messaging/-message/timestamp/#timestamp","text":"val timestamp: Long","title":"timestamp"},{"location":"port_messaging/com.hexagonkt.messaging/-messaging-port/","text":"port_messaging / com.hexagonkt.messaging / MessagingPort MessagingPort \u00b6 interface MessagingPort Functions \u00b6 Name Summary consume abstract fun < T : Message > consume ( type : KClass < T > , address : String , consumer : ( T ) -> Unit ): Unit open fun < T : Message > consume ( type : KClass < T > , consumer : ( T ) -> Unit ): Unit publish abstract fun publish ( message : Message , address : String ): Unit open fun publish ( message : Message ): Unit","title":"Home"},{"location":"port_messaging/com.hexagonkt.messaging/-messaging-port/#messagingport","text":"interface MessagingPort","title":"MessagingPort"},{"location":"port_messaging/com.hexagonkt.messaging/-messaging-port/#functions","text":"Name Summary consume abstract fun < T : Message > consume ( type : KClass < T > , address : String , consumer : ( T ) -> Unit ): Unit open fun < T : Message > consume ( type : KClass < T > , consumer : ( T ) -> Unit ): Unit publish abstract fun publish ( message : Message , address : String ): Unit open fun publish ( message : Message ): Unit","title":"Functions"},{"location":"port_messaging/com.hexagonkt.messaging/-messaging-port/consume/","text":"port_messaging / com.hexagonkt.messaging / MessagingPort / consume consume \u00b6 abstract fun < T : Message > consume ( type : KClass < T > , address : String , consumer : ( T ) -> Unit ): Unit open fun < T : Message > consume ( type : KClass < T > , consumer : ( T ) -> Unit ): Unit","title":"Consume"},{"location":"port_messaging/com.hexagonkt.messaging/-messaging-port/consume/#consume","text":"abstract fun < T : Message > consume ( type : KClass < T > , address : String , consumer : ( T ) -> Unit ): Unit open fun < T : Message > consume ( type : KClass < T > , consumer : ( T ) -> Unit ): Unit","title":"consume"},{"location":"port_messaging/com.hexagonkt.messaging/-messaging-port/publish/","text":"port_messaging / com.hexagonkt.messaging / MessagingPort / publish publish \u00b6 abstract fun publish ( message : Message , address : String ): Unit open fun publish ( message : Message ): Unit","title":"Publish"},{"location":"port_messaging/com.hexagonkt.messaging/-messaging-port/publish/#publish","text":"abstract fun publish ( message : Message , address : String ): Unit open fun publish ( message : Message ): Unit","title":"publish"},{"location":"port_store/","text":"port_store Hexagon's storage utilities for data classes. Packages \u00b6 Name Summary com.hexagonkt.store TODO com.hexagonkt.store.hashmap Index \u00b6 All Types","title":"Store"},{"location":"port_store/#packages","text":"Name Summary com.hexagonkt.store TODO com.hexagonkt.store.hashmap","title":"Packages"},{"location":"port_store/#index","text":"All Types","title":"Index"},{"location":"port_store/alltypes/","text":"Hexagon's storage utilities for data classes. All Types \u00b6 Name Summary com.hexagonkt.store.hashmap.Company \u00b6 | com.hexagonkt.store.hashmap.Department \u00b6 | com.hexagonkt.store.hashmap.HashMapMapper \u00b6 | com.hexagonkt.store.hashmap.HashMapMapperTest \u00b6 | com.hexagonkt.store.hashmap.HashMapStore \u00b6 | com.hexagonkt.store.hashmap.HashMapStoreTest \u00b6 | com.hexagonkt.store.IndexOrder \u00b6 | com.hexagonkt.store.Mapper \u00b6 Maps objects and fields from/to stores and filters. | com.hexagonkt.store.MapperTest \u00b6 | com.hexagonkt.store.hashmap.Person \u00b6 | com.hexagonkt.store.Store \u00b6 TODO All methods accepting maps rely on mapOf returning an insertion ordered map. Take care of this in the future to avoid possible bugs","title":"Home"},{"location":"port_store/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"port_store/alltypes/#comhexagonktstorehashmapcompany","text":"|","title":"com.hexagonkt.store.hashmap.Company"},{"location":"port_store/alltypes/#comhexagonktstorehashmapdepartment","text":"|","title":"com.hexagonkt.store.hashmap.Department"},{"location":"port_store/alltypes/#comhexagonktstorehashmaphashmapmapper","text":"|","title":"com.hexagonkt.store.hashmap.HashMapMapper"},{"location":"port_store/alltypes/#comhexagonktstorehashmaphashmapmappertest","text":"|","title":"com.hexagonkt.store.hashmap.HashMapMapperTest"},{"location":"port_store/alltypes/#comhexagonktstorehashmaphashmapstore","text":"|","title":"com.hexagonkt.store.hashmap.HashMapStore"},{"location":"port_store/alltypes/#comhexagonktstorehashmaphashmapstoretest","text":"|","title":"com.hexagonkt.store.hashmap.HashMapStoreTest"},{"location":"port_store/alltypes/#comhexagonktstoreindexorder","text":"|","title":"com.hexagonkt.store.IndexOrder"},{"location":"port_store/alltypes/#comhexagonktstoremapper","text":"Maps objects and fields from/to stores and filters. |","title":"com.hexagonkt.store.Mapper"},{"location":"port_store/alltypes/#comhexagonktstoremappertest","text":"|","title":"com.hexagonkt.store.MapperTest"},{"location":"port_store/alltypes/#comhexagonktstorehashmapperson","text":"|","title":"com.hexagonkt.store.hashmap.Person"},{"location":"port_store/alltypes/#comhexagonktstorestore","text":"TODO All methods accepting maps rely on mapOf returning an insertion ordered map. Take care of this in the future to avoid possible bugs","title":"com.hexagonkt.store.Store"},{"location":"port_store/com.hexagonkt.store/","text":"port_store / com.hexagonkt.store Package com.hexagonkt.store \u00b6 TODO Types \u00b6 Name Summary IndexOrder enum class IndexOrder Mapper Maps objects and fields from/to stores and filters. interface Mapper < T : Any > MapperTest class MapperTest Store TODO All methods accepting maps rely on mapOf returning an insertion ordered map. Take care of this in the future to avoid possible bugs interface Store < T : Any , K : Any >","title":"Home"},{"location":"port_store/com.hexagonkt.store/#package-comhexagonktstore","text":"TODO","title":"Package com.hexagonkt.store"},{"location":"port_store/com.hexagonkt.store/#types","text":"Name Summary IndexOrder enum class IndexOrder Mapper Maps objects and fields from/to stores and filters. interface Mapper < T : Any > MapperTest class MapperTest Store TODO All methods accepting maps rely on mapOf returning an insertion ordered map. Take care of this in the future to avoid possible bugs interface Store < T : Any , K : Any >","title":"Types"},{"location":"port_store/com.hexagonkt.store/-index-order/","text":"port_store / com.hexagonkt.store / IndexOrder IndexOrder \u00b6 enum class IndexOrder Enum Values \u00b6 Name Summary ASCENDING DESCENDING","title":"Home"},{"location":"port_store/com.hexagonkt.store/-index-order/#indexorder","text":"enum class IndexOrder","title":"IndexOrder"},{"location":"port_store/com.hexagonkt.store/-index-order/#enum-values","text":"Name Summary ASCENDING DESCENDING","title":"Enum Values"},{"location":"port_store/com.hexagonkt.store/-index-order/-a-s-c-e-n-d-i-n-g/","text":"port_store / com.hexagonkt.store / IndexOrder / ASCENDING ASCENDING \u00b6 ASCENDING","title":" a s c e n d i n g"},{"location":"port_store/com.hexagonkt.store/-index-order/-a-s-c-e-n-d-i-n-g/#ascending","text":"ASCENDING","title":"ASCENDING"},{"location":"port_store/com.hexagonkt.store/-index-order/-d-e-s-c-e-n-d-i-n-g/","text":"port_store / com.hexagonkt.store / IndexOrder / DESCENDING DESCENDING \u00b6 DESCENDING","title":" d e s c e n d i n g"},{"location":"port_store/com.hexagonkt.store/-index-order/-d-e-s-c-e-n-d-i-n-g/#descending","text":"DESCENDING","title":"DESCENDING"},{"location":"port_store/com.hexagonkt.store/-mapper/","text":"port_store / com.hexagonkt.store / Mapper Mapper \u00b6 interface Mapper < T : Any > Maps objects and fields from/to stores and filters. Properties \u00b6 Name Summary fields abstract val fields: Map < String , KProperty1 <* , *>> Functions \u00b6 Name Summary fromStore abstract fun fromStore ( map : Map < String , Any > ): T open fun fromStore ( property : String , value : Any ): Any toStore abstract fun toStore ( instance : T ): Map < String , Any > open fun toStore ( property : String , value : Any ): Any Inheritors \u00b6 Name Summary HashMapMapper class HashMapMapper < T : Any , K : Any > : Mapper < T >","title":"Home"},{"location":"port_store/com.hexagonkt.store/-mapper/#mapper","text":"interface Mapper < T : Any > Maps objects and fields from/to stores and filters.","title":"Mapper"},{"location":"port_store/com.hexagonkt.store/-mapper/#properties","text":"Name Summary fields abstract val fields: Map < String , KProperty1 <* , *>>","title":"Properties"},{"location":"port_store/com.hexagonkt.store/-mapper/#functions","text":"Name Summary fromStore abstract fun fromStore ( map : Map < String , Any > ): T open fun fromStore ( property : String , value : Any ): Any toStore abstract fun toStore ( instance : T ): Map < String , Any > open fun toStore ( property : String , value : Any ): Any","title":"Functions"},{"location":"port_store/com.hexagonkt.store/-mapper/#inheritors","text":"Name Summary HashMapMapper class HashMapMapper < T : Any , K : Any > : Mapper < T >","title":"Inheritors"},{"location":"port_store/com.hexagonkt.store/-mapper/fields/","text":"port_store / com.hexagonkt.store / Mapper / fields fields \u00b6 abstract val fields: Map < String , KProperty1 <* , *>>","title":"Fields"},{"location":"port_store/com.hexagonkt.store/-mapper/fields/#fields","text":"abstract val fields: Map < String , KProperty1 <* , *>>","title":"fields"},{"location":"port_store/com.hexagonkt.store/-mapper/from-store/","text":"port_store / com.hexagonkt.store / Mapper / fromStore fromStore \u00b6 abstract fun fromStore ( map : Map < String , Any > ): T open fun fromStore ( property : String , value : Any ): Any","title":"From store"},{"location":"port_store/com.hexagonkt.store/-mapper/from-store/#fromstore","text":"abstract fun fromStore ( map : Map < String , Any > ): T open fun fromStore ( property : String , value : Any ): Any","title":"fromStore"},{"location":"port_store/com.hexagonkt.store/-mapper/to-store/","text":"port_store / com.hexagonkt.store / Mapper / toStore toStore \u00b6 abstract fun toStore ( instance : T ): Map < String , Any > open fun toStore ( property : String , value : Any ): Any","title":"To store"},{"location":"port_store/com.hexagonkt.store/-mapper/to-store/#tostore","text":"abstract fun toStore ( instance : T ): Map < String , Any > open fun toStore ( property : String , value : Any ): Any","title":"toStore"},{"location":"port_store/com.hexagonkt.store/-mapper-test/","text":"port_store / com.hexagonkt.store / MapperTest MapperTest \u00b6 class MapperTest Constructors \u00b6 Name Summary <init> MapperTest () Functions \u00b6 Name Summary Default mapper methods return its own parameters fun Default mapper methods return its own parameters () : Unit","title":"Home"},{"location":"port_store/com.hexagonkt.store/-mapper-test/#mappertest","text":"class MapperTest","title":"MapperTest"},{"location":"port_store/com.hexagonkt.store/-mapper-test/#constructors","text":"Name Summary <init> MapperTest ()","title":"Constructors"},{"location":"port_store/com.hexagonkt.store/-mapper-test/#functions","text":"Name Summary Default mapper methods return its own parameters fun Default mapper methods return its own parameters () : Unit","title":"Functions"},{"location":"port_store/com.hexagonkt.store/-mapper-test/-default mapper methods return its own parameters/","text":"port_store / com.hexagonkt.store / MapperTest / Default mapper methods return its own parameters Default mapper methods return its own parameters \u00b6 fun Default mapper methods return its own parameters () : Unit","title":" default mapper methods return its own parameters"},{"location":"port_store/com.hexagonkt.store/-mapper-test/-default mapper methods return its own parameters/#default-mapper-methods-return-its-own-parameters","text":"fun Default mapper methods return its own parameters () : Unit","title":"Default mapper methods return its own parameters"},{"location":"port_store/com.hexagonkt.store/-mapper-test/-init-/","text":"port_store / com.hexagonkt.store / MapperTest / <init> <init> \u00b6 MapperTest ()","title":" init "},{"location":"port_store/com.hexagonkt.store/-mapper-test/-init-/#init","text":"MapperTest ()","title":"&lt;init&gt;"},{"location":"port_store/com.hexagonkt.store/-store/","text":"port_store / com.hexagonkt.store / Store Store \u00b6 interface Store < T : Any , K : Any > TODO All methods accepting maps rely on mapOf returning an insertion ordered map. Take care of this in the future to avoid possible bugs Properties \u00b6 Name Summary key abstract val key: KProperty1 < T , K > mapper abstract val mapper: Mapper < T > name abstract val name: String type abstract val type: KClass < T > Functions \u00b6 Name Summary count abstract fun count ( filter : Map < String , *> = emptyMap < String , Any > ()): Long createIndex abstract fun createIndex ( unique : Boolean , fields : Map < String , IndexOrder > ): String open fun createIndex ( unique : Boolean , vararg fields : Pair < String , IndexOrder > ): String deleteMany abstract fun deleteMany ( filter : Map < String , *> ): Long deleteOne abstract fun deleteOne ( id : K ): Boolean drop abstract fun drop (): Unit fields open fun fields ( updates : Map < KProperty1 < T , *> , *> ): Map < String , *> open fun fields ( vararg updates : Pair < KProperty1 < T , *> , *> ): Map < String , *> findAll open fun findAll ( limit : Int ? = null , skip : Int ? = null , sort : Map < String , Boolean > = emptyMap ()): List < T > open fun findAll ( fields : List < String > , limit : Int ? = null , skip : Int ? = null , sort : Map < String , Boolean > = emptyMap ()): List < Map < String , *>> findMany abstract fun findMany ( filter : Map < String , *> , limit : Int ? = null , skip : Int ? = null , sort : Map < String , Boolean > = emptyMap ()): List < T > abstract fun findMany ( filter : Map < String , *> , fields : List < String > , limit : Int ? = null , skip : Int ? = null , sort : Map < String , Boolean > = emptyMap ()): List < Map < String , *>> findOne abstract fun findOne ( key : K ): T ? abstract fun findOne ( key : K , fields : List < String > ): Map < String , *>? open fun findOne ( filter : Map < String , *> ): T ? open fun findOne ( filter : Map < String , *> , fields : List < String > ): Map < String , *>? insertMany abstract fun insertMany ( instances : List < T > ): List < K > open fun insertMany ( vararg instances : T ): List < K > insertOne abstract fun insertOne ( instance : T ): K replaceMany abstract fun replaceMany ( instances : List < T > ): List < T > open fun replaceMany ( vararg instances : T ): List < T > replaceOne abstract fun replaceOne ( instance : T ): Boolean saveMany abstract fun saveMany ( instances : List < T > ): List < K ?> saveOne abstract fun saveOne ( instance : T ): K ? updateMany abstract fun updateMany ( filter : Map < String , *> , updates : Map < String , *> ): Long updateOne abstract fun updateOne ( key : K , updates : Map < String , *> ): Boolean open fun updateOne ( key : K , vararg updates : Pair < KProperty1 < T , *> , *> ): Boolean Inheritors \u00b6 Name Summary HashMapStore class HashMapStore < T : Any , K : Any > : Store < T , K >","title":"Home"},{"location":"port_store/com.hexagonkt.store/-store/#store","text":"interface Store < T : Any , K : Any > TODO All methods accepting maps rely on mapOf returning an insertion ordered map. Take care of this in the future to avoid possible bugs","title":"Store"},{"location":"port_store/com.hexagonkt.store/-store/#properties","text":"Name Summary key abstract val key: KProperty1 < T , K > mapper abstract val mapper: Mapper < T > name abstract val name: String type abstract val type: KClass < T >","title":"Properties"},{"location":"port_store/com.hexagonkt.store/-store/#functions","text":"Name Summary count abstract fun count ( filter : Map < String , *> = emptyMap < String , Any > ()): Long createIndex abstract fun createIndex ( unique : Boolean , fields : Map < String , IndexOrder > ): String open fun createIndex ( unique : Boolean , vararg fields : Pair < String , IndexOrder > ): String deleteMany abstract fun deleteMany ( filter : Map < String , *> ): Long deleteOne abstract fun deleteOne ( id : K ): Boolean drop abstract fun drop (): Unit fields open fun fields ( updates : Map < KProperty1 < T , *> , *> ): Map < String , *> open fun fields ( vararg updates : Pair < KProperty1 < T , *> , *> ): Map < String , *> findAll open fun findAll ( limit : Int ? = null , skip : Int ? = null , sort : Map < String , Boolean > = emptyMap ()): List < T > open fun findAll ( fields : List < String > , limit : Int ? = null , skip : Int ? = null , sort : Map < String , Boolean > = emptyMap ()): List < Map < String , *>> findMany abstract fun findMany ( filter : Map < String , *> , limit : Int ? = null , skip : Int ? = null , sort : Map < String , Boolean > = emptyMap ()): List < T > abstract fun findMany ( filter : Map < String , *> , fields : List < String > , limit : Int ? = null , skip : Int ? = null , sort : Map < String , Boolean > = emptyMap ()): List < Map < String , *>> findOne abstract fun findOne ( key : K ): T ? abstract fun findOne ( key : K , fields : List < String > ): Map < String , *>? open fun findOne ( filter : Map < String , *> ): T ? open fun findOne ( filter : Map < String , *> , fields : List < String > ): Map < String , *>? insertMany abstract fun insertMany ( instances : List < T > ): List < K > open fun insertMany ( vararg instances : T ): List < K > insertOne abstract fun insertOne ( instance : T ): K replaceMany abstract fun replaceMany ( instances : List < T > ): List < T > open fun replaceMany ( vararg instances : T ): List < T > replaceOne abstract fun replaceOne ( instance : T ): Boolean saveMany abstract fun saveMany ( instances : List < T > ): List < K ?> saveOne abstract fun saveOne ( instance : T ): K ? updateMany abstract fun updateMany ( filter : Map < String , *> , updates : Map < String , *> ): Long updateOne abstract fun updateOne ( key : K , updates : Map < String , *> ): Boolean open fun updateOne ( key : K , vararg updates : Pair < KProperty1 < T , *> , *> ): Boolean","title":"Functions"},{"location":"port_store/com.hexagonkt.store/-store/#inheritors","text":"Name Summary HashMapStore class HashMapStore < T : Any , K : Any > : Store < T , K >","title":"Inheritors"},{"location":"port_store/com.hexagonkt.store/-store/count/","text":"port_store / com.hexagonkt.store / Store / count count \u00b6 abstract fun count ( filter : Map < String , *> = emptyMap < String , Any > ()): Long","title":"Count"},{"location":"port_store/com.hexagonkt.store/-store/count/#count","text":"abstract fun count ( filter : Map < String , *> = emptyMap < String , Any > ()): Long","title":"count"},{"location":"port_store/com.hexagonkt.store/-store/create-index/","text":"port_store / com.hexagonkt.store / Store / createIndex createIndex \u00b6 abstract fun createIndex ( unique : Boolean , fields : Map < String , IndexOrder > ): String open fun createIndex ( unique : Boolean , vararg fields : Pair < String , IndexOrder > ): String","title":"Create index"},{"location":"port_store/com.hexagonkt.store/-store/create-index/#createindex","text":"abstract fun createIndex ( unique : Boolean , fields : Map < String , IndexOrder > ): String open fun createIndex ( unique : Boolean , vararg fields : Pair < String , IndexOrder > ): String","title":"createIndex"},{"location":"port_store/com.hexagonkt.store/-store/delete-many/","text":"port_store / com.hexagonkt.store / Store / deleteMany deleteMany \u00b6 abstract fun deleteMany ( filter : Map < String , *> ): Long","title":"Delete many"},{"location":"port_store/com.hexagonkt.store/-store/delete-many/#deletemany","text":"abstract fun deleteMany ( filter : Map < String , *> ): Long","title":"deleteMany"},{"location":"port_store/com.hexagonkt.store/-store/delete-one/","text":"port_store / com.hexagonkt.store / Store / deleteOne deleteOne \u00b6 abstract fun deleteOne ( id : K ): Boolean","title":"Delete one"},{"location":"port_store/com.hexagonkt.store/-store/delete-one/#deleteone","text":"abstract fun deleteOne ( id : K ): Boolean","title":"deleteOne"},{"location":"port_store/com.hexagonkt.store/-store/drop/","text":"port_store / com.hexagonkt.store / Store / drop drop \u00b6 abstract fun drop (): Unit","title":"Drop"},{"location":"port_store/com.hexagonkt.store/-store/drop/#drop","text":"abstract fun drop (): Unit","title":"drop"},{"location":"port_store/com.hexagonkt.store/-store/fields/","text":"port_store / com.hexagonkt.store / Store / fields fields \u00b6 open fun fields ( updates : Map < KProperty1 < T , *> , *> ): Map < String , *> open fun fields ( vararg updates : Pair < KProperty1 < T , *> , *> ): Map < String , *>","title":"Fields"},{"location":"port_store/com.hexagonkt.store/-store/fields/#fields","text":"open fun fields ( updates : Map < KProperty1 < T , *> , *> ): Map < String , *> open fun fields ( vararg updates : Pair < KProperty1 < T , *> , *> ): Map < String , *>","title":"fields"},{"location":"port_store/com.hexagonkt.store/-store/find-all/","text":"port_store / com.hexagonkt.store / Store / findAll findAll \u00b6 open fun findAll ( limit : Int ? = null , skip : Int ? = null , sort : Map < String , Boolean > = emptyMap ()): List < T > open fun findAll ( fields : List < String > , limit : Int ? = null , skip : Int ? = null , sort : Map < String , Boolean > = emptyMap ()): List < Map < String , *>>","title":"Find all"},{"location":"port_store/com.hexagonkt.store/-store/find-all/#findall","text":"open fun findAll ( limit : Int ? = null , skip : Int ? = null , sort : Map < String , Boolean > = emptyMap ()): List < T > open fun findAll ( fields : List < String > , limit : Int ? = null , skip : Int ? = null , sort : Map < String , Boolean > = emptyMap ()): List < Map < String , *>>","title":"findAll"},{"location":"port_store/com.hexagonkt.store/-store/find-many/","text":"port_store / com.hexagonkt.store / Store / findMany findMany \u00b6 abstract fun findMany ( filter : Map < String , *> , limit : Int ? = null , skip : Int ? = null , sort : Map < String , Boolean > = emptyMap ()): List < T > abstract fun findMany ( filter : Map < String , *> , fields : List < String > , limit : Int ? = null , skip : Int ? = null , sort : Map < String , Boolean > = emptyMap ()): List < Map < String , *>>","title":"Find many"},{"location":"port_store/com.hexagonkt.store/-store/find-many/#findmany","text":"abstract fun findMany ( filter : Map < String , *> , limit : Int ? = null , skip : Int ? = null , sort : Map < String , Boolean > = emptyMap ()): List < T > abstract fun findMany ( filter : Map < String , *> , fields : List < String > , limit : Int ? = null , skip : Int ? = null , sort : Map < String , Boolean > = emptyMap ()): List < Map < String , *>>","title":"findMany"},{"location":"port_store/com.hexagonkt.store/-store/find-one/","text":"port_store / com.hexagonkt.store / Store / findOne findOne \u00b6 abstract fun findOne ( key : K ): T ? abstract fun findOne ( key : K , fields : List < String > ): Map < String , *>? open fun findOne ( filter : Map < String , *> ): T ? open fun findOne ( filter : Map < String , *> , fields : List < String > ): Map < String , *>?","title":"Find one"},{"location":"port_store/com.hexagonkt.store/-store/find-one/#findone","text":"abstract fun findOne ( key : K ): T ? abstract fun findOne ( key : K , fields : List < String > ): Map < String , *>? open fun findOne ( filter : Map < String , *> ): T ? open fun findOne ( filter : Map < String , *> , fields : List < String > ): Map < String , *>?","title":"findOne"},{"location":"port_store/com.hexagonkt.store/-store/insert-many/","text":"port_store / com.hexagonkt.store / Store / insertMany insertMany \u00b6 abstract fun insertMany ( instances : List < T > ): List < K > open fun insertMany ( vararg instances : T ): List < K >","title":"Insert many"},{"location":"port_store/com.hexagonkt.store/-store/insert-many/#insertmany","text":"abstract fun insertMany ( instances : List < T > ): List < K > open fun insertMany ( vararg instances : T ): List < K >","title":"insertMany"},{"location":"port_store/com.hexagonkt.store/-store/insert-one/","text":"port_store / com.hexagonkt.store / Store / insertOne insertOne \u00b6 abstract fun insertOne ( instance : T ): K","title":"Insert one"},{"location":"port_store/com.hexagonkt.store/-store/insert-one/#insertone","text":"abstract fun insertOne ( instance : T ): K","title":"insertOne"},{"location":"port_store/com.hexagonkt.store/-store/key/","text":"port_store / com.hexagonkt.store / Store / key key \u00b6 abstract val key: KProperty1 < T , K >","title":"Key"},{"location":"port_store/com.hexagonkt.store/-store/key/#key","text":"abstract val key: KProperty1 < T , K >","title":"key"},{"location":"port_store/com.hexagonkt.store/-store/mapper/","text":"port_store / com.hexagonkt.store / Store / mapper mapper \u00b6 abstract val mapper: Mapper < T >","title":"Mapper"},{"location":"port_store/com.hexagonkt.store/-store/mapper/#mapper","text":"abstract val mapper: Mapper < T >","title":"mapper"},{"location":"port_store/com.hexagonkt.store/-store/name/","text":"port_store / com.hexagonkt.store / Store / name name \u00b6 abstract val name: String","title":"Name"},{"location":"port_store/com.hexagonkt.store/-store/name/#name","text":"abstract val name: String","title":"name"},{"location":"port_store/com.hexagonkt.store/-store/replace-many/","text":"port_store / com.hexagonkt.store / Store / replaceMany replaceMany \u00b6 abstract fun replaceMany ( instances : List < T > ): List < T > open fun replaceMany ( vararg instances : T ): List < T >","title":"Replace many"},{"location":"port_store/com.hexagonkt.store/-store/replace-many/#replacemany","text":"abstract fun replaceMany ( instances : List < T > ): List < T > open fun replaceMany ( vararg instances : T ): List < T >","title":"replaceMany"},{"location":"port_store/com.hexagonkt.store/-store/replace-one/","text":"port_store / com.hexagonkt.store / Store / replaceOne replaceOne \u00b6 abstract fun replaceOne ( instance : T ): Boolean","title":"Replace one"},{"location":"port_store/com.hexagonkt.store/-store/replace-one/#replaceone","text":"abstract fun replaceOne ( instance : T ): Boolean","title":"replaceOne"},{"location":"port_store/com.hexagonkt.store/-store/save-many/","text":"port_store / com.hexagonkt.store / Store / saveMany saveMany \u00b6 abstract fun saveMany ( instances : List < T > ): List < K ?>","title":"Save many"},{"location":"port_store/com.hexagonkt.store/-store/save-many/#savemany","text":"abstract fun saveMany ( instances : List < T > ): List < K ?>","title":"saveMany"},{"location":"port_store/com.hexagonkt.store/-store/save-one/","text":"port_store / com.hexagonkt.store / Store / saveOne saveOne \u00b6 abstract fun saveOne ( instance : T ): K ?","title":"Save one"},{"location":"port_store/com.hexagonkt.store/-store/save-one/#saveone","text":"abstract fun saveOne ( instance : T ): K ?","title":"saveOne"},{"location":"port_store/com.hexagonkt.store/-store/type/","text":"port_store / com.hexagonkt.store / Store / type type \u00b6 abstract val type: KClass < T >","title":"Type"},{"location":"port_store/com.hexagonkt.store/-store/type/#type","text":"abstract val type: KClass < T >","title":"type"},{"location":"port_store/com.hexagonkt.store/-store/update-many/","text":"port_store / com.hexagonkt.store / Store / updateMany updateMany \u00b6 abstract fun updateMany ( filter : Map < String , *> , updates : Map < String , *> ): Long","title":"Update many"},{"location":"port_store/com.hexagonkt.store/-store/update-many/#updatemany","text":"abstract fun updateMany ( filter : Map < String , *> , updates : Map < String , *> ): Long","title":"updateMany"},{"location":"port_store/com.hexagonkt.store/-store/update-one/","text":"port_store / com.hexagonkt.store / Store / updateOne updateOne \u00b6 abstract fun updateOne ( key : K , updates : Map < String , *> ): Boolean open fun updateOne ( key : K , vararg updates : Pair < KProperty1 < T , *> , *> ): Boolean","title":"Update one"},{"location":"port_store/com.hexagonkt.store/-store/update-one/#updateone","text":"abstract fun updateOne ( key : K , updates : Map < String , *> ): Boolean open fun updateOne ( key : K , vararg updates : Pair < KProperty1 < T , *> , *> ): Boolean","title":"updateOne"},{"location":"port_store/com.hexagonkt.store.hashmap/","text":"port_store / com.hexagonkt.store.hashmap Package com.hexagonkt.store.hashmap \u00b6 Types \u00b6 Name Summary Company data class Company Department enum class Department HashMapMapper class HashMapMapper < T : Any , K : Any > : Mapper < T > HashMapMapperTest class HashMapMapperTest HashMapStore class HashMapStore < T : Any , K : Any > : Store < T , K > HashMapStoreTest class HashMapStoreTest Person data class Person","title":"Home"},{"location":"port_store/com.hexagonkt.store.hashmap/#package-comhexagonktstorehashmap","text":"","title":"Package com.hexagonkt.store.hashmap"},{"location":"port_store/com.hexagonkt.store.hashmap/#types","text":"Name Summary Company data class Company Department enum class Department HashMapMapper class HashMapMapper < T : Any , K : Any > : Mapper < T > HashMapMapperTest class HashMapMapperTest HashMapStore class HashMapStore < T : Any , K : Any > : Store < T , K > HashMapStoreTest class HashMapStoreTest Person data class Person","title":"Types"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/","text":"port_store / com.hexagonkt.store.hashmap / Company Company \u00b6 data class Company Constructors \u00b6 Name Summary <init> Company ( id : String , foundation : LocalDate , closeTime : LocalTime , openTime : ClosedRange < LocalTime > , web : URL ? , clients : List < URL > = listOf (), logo : ByteBuffer ? = null , notes : String ? = null , people : Set < Person > = setOf (), departments : Set < Department > = setOf (), creationDate : LocalDateTime = LocalDateTime . now ()) Properties \u00b6 Name Summary clients val clients: List < URL > closeTime val closeTime: LocalTime creationDate val creationDate: LocalDateTime departments val departments: Set < Department > foundation val foundation: LocalDate id val id: String logo val logo: ByteBuffer ? notes val notes: String ? openTime val openTime: ClosedRange < LocalTime > people val people: Set < Person > web val web: URL ?","title":"Home"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/#company","text":"data class Company","title":"Company"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/#constructors","text":"Name Summary <init> Company ( id : String , foundation : LocalDate , closeTime : LocalTime , openTime : ClosedRange < LocalTime > , web : URL ? , clients : List < URL > = listOf (), logo : ByteBuffer ? = null , notes : String ? = null , people : Set < Person > = setOf (), departments : Set < Department > = setOf (), creationDate : LocalDateTime = LocalDateTime . now ())","title":"Constructors"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/#properties","text":"Name Summary clients val clients: List < URL > closeTime val closeTime: LocalTime creationDate val creationDate: LocalDateTime departments val departments: Set < Department > foundation val foundation: LocalDate id val id: String logo val logo: ByteBuffer ? notes val notes: String ? openTime val openTime: ClosedRange < LocalTime > people val people: Set < Person > web val web: URL ?","title":"Properties"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/-init-/","text":"port_store / com.hexagonkt.store.hashmap / Company / <init> <init> \u00b6 Company ( id : String , foundation : LocalDate , closeTime : LocalTime , openTime : ClosedRange < LocalTime > , web : URL ? , clients : List < URL > = listOf (), logo : ByteBuffer ? = null , notes : String ? = null , people : Set < Person > = setOf (), departments : Set < Department > = setOf (), creationDate : LocalDateTime = LocalDateTime . now ())","title":" init "},{"location":"port_store/com.hexagonkt.store.hashmap/-company/-init-/#init","text":"Company ( id : String , foundation : LocalDate , closeTime : LocalTime , openTime : ClosedRange < LocalTime > , web : URL ? , clients : List < URL > = listOf (), logo : ByteBuffer ? = null , notes : String ? = null , people : Set < Person > = setOf (), departments : Set < Department > = setOf (), creationDate : LocalDateTime = LocalDateTime . now ())","title":"&lt;init&gt;"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/clients/","text":"port_store / com.hexagonkt.store.hashmap / Company / clients clients \u00b6 val clients: List < URL >","title":"Clients"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/clients/#clients","text":"val clients: List < URL >","title":"clients"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/close-time/","text":"port_store / com.hexagonkt.store.hashmap / Company / closeTime closeTime \u00b6 val closeTime: LocalTime","title":"Close time"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/close-time/#closetime","text":"val closeTime: LocalTime","title":"closeTime"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/creation-date/","text":"port_store / com.hexagonkt.store.hashmap / Company / creationDate creationDate \u00b6 val creationDate: LocalDateTime","title":"Creation date"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/creation-date/#creationdate","text":"val creationDate: LocalDateTime","title":"creationDate"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/departments/","text":"port_store / com.hexagonkt.store.hashmap / Company / departments departments \u00b6 val departments: Set < Department >","title":"Departments"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/departments/#departments","text":"val departments: Set < Department >","title":"departments"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/foundation/","text":"port_store / com.hexagonkt.store.hashmap / Company / foundation foundation \u00b6 val foundation: LocalDate","title":"Foundation"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/foundation/#foundation","text":"val foundation: LocalDate","title":"foundation"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/id/","text":"port_store / com.hexagonkt.store.hashmap / Company / id id \u00b6 val id: String","title":"Id"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/id/#id","text":"val id: String","title":"id"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/logo/","text":"port_store / com.hexagonkt.store.hashmap / Company / logo logo \u00b6 val logo: ByteBuffer ?","title":"Logo"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/logo/#logo","text":"val logo: ByteBuffer ?","title":"logo"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/notes/","text":"port_store / com.hexagonkt.store.hashmap / Company / notes notes \u00b6 val notes: String ?","title":"Notes"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/notes/#notes","text":"val notes: String ?","title":"notes"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/open-time/","text":"port_store / com.hexagonkt.store.hashmap / Company / openTime openTime \u00b6 val openTime: ClosedRange < LocalTime >","title":"Open time"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/open-time/#opentime","text":"val openTime: ClosedRange < LocalTime >","title":"openTime"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/people/","text":"port_store / com.hexagonkt.store.hashmap / Company / people people \u00b6 val people: Set < Person >","title":"People"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/people/#people","text":"val people: Set < Person >","title":"people"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/web/","text":"port_store / com.hexagonkt.store.hashmap / Company / web web \u00b6 val web: URL ?","title":"Web"},{"location":"port_store/com.hexagonkt.store.hashmap/-company/web/#web","text":"val web: URL ?","title":"web"},{"location":"port_store/com.hexagonkt.store.hashmap/-department/","text":"port_store / com.hexagonkt.store.hashmap / Department Department \u00b6 enum class Department Enum Values \u00b6 Name Summary DESIGN DEVELOPMENT","title":"Home"},{"location":"port_store/com.hexagonkt.store.hashmap/-department/#department","text":"enum class Department","title":"Department"},{"location":"port_store/com.hexagonkt.store.hashmap/-department/#enum-values","text":"Name Summary DESIGN DEVELOPMENT","title":"Enum Values"},{"location":"port_store/com.hexagonkt.store.hashmap/-department/-d-e-s-i-g-n/","text":"port_store / com.hexagonkt.store.hashmap / Department / DESIGN DESIGN \u00b6 DESIGN","title":" d e s i g n"},{"location":"port_store/com.hexagonkt.store.hashmap/-department/-d-e-s-i-g-n/#design","text":"DESIGN","title":"DESIGN"},{"location":"port_store/com.hexagonkt.store.hashmap/-department/-d-e-v-e-l-o-p-m-e-n-t/","text":"port_store / com.hexagonkt.store.hashmap / Department / DEVELOPMENT DEVELOPMENT \u00b6 DEVELOPMENT","title":" d e v e l o p m e n t"},{"location":"port_store/com.hexagonkt.store.hashmap/-department/-d-e-v-e-l-o-p-m-e-n-t/#development","text":"DEVELOPMENT","title":"DEVELOPMENT"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapper HashMapMapper \u00b6 class HashMapMapper < T : Any , K : Any > : Mapper < T > Constructors \u00b6 Name Summary <init> HashMapMapper ( type : KClass < T > , key : KProperty1 < T , K > ) Properties \u00b6 Name Summary fields val fields: Map < String , KProperty1 <* , *>> Functions \u00b6 Name Summary fromStore fun fromStore ( map : Map < String , Any > ): T fun fromStore ( property : String , value : Any ): Any toStore fun toStore ( instance : T ): Map < String , Any >","title":"Home"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper/#hashmapmapper","text":"class HashMapMapper < T : Any , K : Any > : Mapper < T >","title":"HashMapMapper"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper/#constructors","text":"Name Summary <init> HashMapMapper ( type : KClass < T > , key : KProperty1 < T , K > )","title":"Constructors"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper/#properties","text":"Name Summary fields val fields: Map < String , KProperty1 <* , *>>","title":"Properties"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper/#functions","text":"Name Summary fromStore fun fromStore ( map : Map < String , Any > ): T fun fromStore ( property : String , value : Any ): Any toStore fun toStore ( instance : T ): Map < String , Any >","title":"Functions"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper/-init-/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapper / <init> <init> \u00b6 HashMapMapper ( type : KClass < T > , key : KProperty1 < T , K > )","title":" init "},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper/-init-/#init","text":"HashMapMapper ( type : KClass < T > , key : KProperty1 < T , K > )","title":"&lt;init&gt;"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper/fields/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapper / fields fields \u00b6 val fields: Map < String , KProperty1 <* , *>>","title":"Fields"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper/fields/#fields","text":"val fields: Map < String , KProperty1 <* , *>>","title":"fields"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper/from-store/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapper / fromStore fromStore \u00b6 fun fromStore ( map : Map < String , Any > ): T fun fromStore ( property : String , value : Any ): Any","title":"From store"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper/from-store/#fromstore","text":"fun fromStore ( map : Map < String , Any > ): T fun fromStore ( property : String , value : Any ): Any","title":"fromStore"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper/to-store/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapper / toStore toStore \u00b6 fun toStore ( instance : T ): Map < String , Any >","title":"To store"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper/to-store/#tostore","text":"fun toStore ( instance : T ): Map < String , Any >","title":"toStore"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest HashMapMapperTest \u00b6 class HashMapMapperTest Types \u00b6 Name Summary MappedClass data class MappedClass Constructors \u00b6 Name Summary <init> HashMapMapperTest () Functions \u00b6 Name Summary A mapper transform a data class to a map and back fun A mapper transform a data class to a map and back (): Unit Mapping a date to an invalid field type results in error fun Mapping a date to an invalid field type results in error (): Unit","title":"Home"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/#hashmapmappertest","text":"class HashMapMapperTest","title":"HashMapMapperTest"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/#types","text":"Name Summary MappedClass data class MappedClass","title":"Types"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/#constructors","text":"Name Summary <init> HashMapMapperTest ()","title":"Constructors"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/#functions","text":"Name Summary A mapper transform a data class to a map and back fun A mapper transform a data class to a map and back (): Unit Mapping a date to an invalid field type results in error fun Mapping a date to an invalid field type results in error (): Unit","title":"Functions"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-a mapper transform a data class to a map and back/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / A mapper transform a data class to a map and back A mapper transform a data class to a map and back \u00b6 fun A mapper transform a data class to a map and back (): Unit","title":" a mapper transform a data class to a map and back"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-a mapper transform a data class to a map and back/#a-mapper-transform-a-data-class-to-a-map-and-back","text":"fun A mapper transform a data class to a map and back (): Unit","title":"A mapper transform a data class to a map and back"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-init-/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / <init> <init> \u00b6 HashMapMapperTest ()","title":" init "},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-init-/#init","text":"HashMapMapperTest ()","title":"&lt;init&gt;"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapping a date to an invalid field type results in error/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / Mapping a date to an invalid field type results in error Mapping a date to an invalid field type results in error \u00b6 fun Mapping a date to an invalid field type results in error (): Unit","title":" mapping a date to an invalid field type results in error"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapping a date to an invalid field type results in error/#mapping-a-date-to-an-invalid-field-type-results-in-error","text":"fun Mapping a date to an invalid field type results in error (): Unit","title":"Mapping a date to an invalid field type results in error"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / MappedClass MappedClass \u00b6 data class MappedClass Constructors \u00b6 Name Summary <init> MappedClass ( oneString : String = \"String\" , oneBoolean : Boolean = true , anInt : Int = 42 , oneLong : Long = 1 _234L , oneFloat : Float = 1 . 23 F , oneDouble : Double = 2 . 345 , oneList : List < String > = listOf ( \"One\" , \"Two\" ), oneMap : Map < String , *> = mapOf ( \"One\" to 1 , \"Two\" to true , \"Three\" to 0 . 12 ), oneNullable : String ? = null , otherData : String = \"other\" , atHome : Int = 0 , onePlus : Char = 'c' ) Properties \u00b6 Name Summary anInt val anInt: Int atHome val atHome: Int oneBoolean val oneBoolean: Boolean oneDouble val oneDouble: Double oneFloat val oneFloat: Float oneList val oneList: List < String > oneLong val oneLong: Long oneMap val oneMap: Map < String , *> oneNullable val oneNullable: String ? onePlus val onePlus: Char oneString val oneString: String otherData val otherData: String","title":"Home"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/#mappedclass","text":"data class MappedClass","title":"MappedClass"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/#constructors","text":"Name Summary <init> MappedClass ( oneString : String = \"String\" , oneBoolean : Boolean = true , anInt : Int = 42 , oneLong : Long = 1 _234L , oneFloat : Float = 1 . 23 F , oneDouble : Double = 2 . 345 , oneList : List < String > = listOf ( \"One\" , \"Two\" ), oneMap : Map < String , *> = mapOf ( \"One\" to 1 , \"Two\" to true , \"Three\" to 0 . 12 ), oneNullable : String ? = null , otherData : String = \"other\" , atHome : Int = 0 , onePlus : Char = 'c' )","title":"Constructors"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/#properties","text":"Name Summary anInt val anInt: Int atHome val atHome: Int oneBoolean val oneBoolean: Boolean oneDouble val oneDouble: Double oneFloat val oneFloat: Float oneList val oneList: List < String > oneLong val oneLong: Long oneMap val oneMap: Map < String , *> oneNullable val oneNullable: String ? onePlus val onePlus: Char oneString val oneString: String otherData val otherData: String","title":"Properties"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/-init-/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / MappedClass / <init> <init> \u00b6 MappedClass ( oneString : String = \"String\" , oneBoolean : Boolean = true , anInt : Int = 42 , oneLong : Long = 1 _234L , oneFloat : Float = 1 . 23 F , oneDouble : Double = 2 . 345 , oneList : List < String > = listOf ( \"One\" , \"Two\" ), oneMap : Map < String , *> = mapOf ( \"One\" to 1 , \"Two\" to true , \"Three\" to 0 . 12 ), oneNullable : String ? = null , otherData : String = \"other\" , atHome : Int = 0 , onePlus : Char = 'c' )","title":" init "},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/-init-/#init","text":"MappedClass ( oneString : String = \"String\" , oneBoolean : Boolean = true , anInt : Int = 42 , oneLong : Long = 1 _234L , oneFloat : Float = 1 . 23 F , oneDouble : Double = 2 . 345 , oneList : List < String > = listOf ( \"One\" , \"Two\" ), oneMap : Map < String , *> = mapOf ( \"One\" to 1 , \"Two\" to true , \"Three\" to 0 . 12 ), oneNullable : String ? = null , otherData : String = \"other\" , atHome : Int = 0 , onePlus : Char = 'c' )","title":"&lt;init&gt;"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/an-int/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / MappedClass / anInt anInt \u00b6 val anInt: Int","title":"An int"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/an-int/#anint","text":"val anInt: Int","title":"anInt"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/at-home/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / MappedClass / atHome atHome \u00b6 val atHome: Int","title":"At home"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/at-home/#athome","text":"val atHome: Int","title":"atHome"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-boolean/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / MappedClass / oneBoolean oneBoolean \u00b6 val oneBoolean: Boolean","title":"One boolean"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-boolean/#oneboolean","text":"val oneBoolean: Boolean","title":"oneBoolean"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-double/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / MappedClass / oneDouble oneDouble \u00b6 val oneDouble: Double","title":"One double"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-double/#onedouble","text":"val oneDouble: Double","title":"oneDouble"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-float/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / MappedClass / oneFloat oneFloat \u00b6 val oneFloat: Float","title":"One float"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-float/#onefloat","text":"val oneFloat: Float","title":"oneFloat"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-list/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / MappedClass / oneList oneList \u00b6 val oneList: List < String >","title":"One list"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-list/#onelist","text":"val oneList: List < String >","title":"oneList"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-long/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / MappedClass / oneLong oneLong \u00b6 val oneLong: Long","title":"One long"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-long/#onelong","text":"val oneLong: Long","title":"oneLong"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-map/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / MappedClass / oneMap oneMap \u00b6 val oneMap: Map < String , *>","title":"One map"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-map/#onemap","text":"val oneMap: Map < String , *>","title":"oneMap"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-nullable/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / MappedClass / oneNullable oneNullable \u00b6 val oneNullable: String ?","title":"One nullable"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-nullable/#onenullable","text":"val oneNullable: String ?","title":"oneNullable"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-plus/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / MappedClass / onePlus onePlus \u00b6 val onePlus: Char","title":"One plus"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-plus/#oneplus","text":"val onePlus: Char","title":"onePlus"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-string/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / MappedClass / oneString oneString \u00b6 val oneString: String","title":"One string"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/one-string/#onestring","text":"val oneString: String","title":"oneString"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/other-data/","text":"port_store / com.hexagonkt.store.hashmap / HashMapMapperTest / MappedClass / otherData otherData \u00b6 val otherData: String","title":"Other data"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-mapper-test/-mapped-class/other-data/#otherdata","text":"val otherData: String","title":"otherData"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore HashMapStore \u00b6 class HashMapStore < T : Any , K : Any > : Store < T , K > Constructors \u00b6 Name Summary <init> HashMapStore ( type : KClass < T > , key : KProperty1 < T , K > , name : String = type . java . simpleName , store : HashMap < K , Map < String , Any >> = hashMapOf (), mapper : Mapper < T > = HashMapMapper ( type , key )) Properties \u00b6 Name Summary key val key: KProperty1 < T , K > mapper val mapper: Mapper < T > name val name: String type val type: KClass < T > Functions \u00b6 Name Summary count fun count ( filter : Map < String , *> ): Long createIndex fun createIndex ( unique : Boolean , fields : Map < String , IndexOrder > ): String deleteMany fun deleteMany ( filter : Map < String , *> ): Long deleteOne fun deleteOne ( id : K ): Boolean drop fun drop (): Unit findMany fun findMany ( filter : Map < String , *> , limit : Int ? , skip : Int ? , sort : Map < String , Boolean > ): List < T > fun findMany ( filter : Map < String , *> , fields : List < String > , limit : Int ? , skip : Int ? , sort : Map < String , Boolean > ): List < Map < String , *>> findOne fun findOne ( key : K ): T ? fun findOne ( key : K , fields : List < String > ): Map < String , *>? insertMany fun insertMany ( instances : List < T > ): List < K > insertOne fun insertOne ( instance : T ): K replaceMany fun replaceMany ( instances : List < T > ): List < T > replaceOne fun replaceOne ( instance : T ): Boolean saveMany fun saveMany ( instances : List < T > ): List < K ?> saveOne fun saveOne ( instance : T ): K ? updateMany fun updateMany ( filter : Map < String , *> , updates : Map < String , *> ): Long updateOne fun updateOne ( key : K , updates : Map < String , *> ): Boolean","title":"Home"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/#hashmapstore","text":"class HashMapStore < T : Any , K : Any > : Store < T , K >","title":"HashMapStore"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/#constructors","text":"Name Summary <init> HashMapStore ( type : KClass < T > , key : KProperty1 < T , K > , name : String = type . java . simpleName , store : HashMap < K , Map < String , Any >> = hashMapOf (), mapper : Mapper < T > = HashMapMapper ( type , key ))","title":"Constructors"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/#properties","text":"Name Summary key val key: KProperty1 < T , K > mapper val mapper: Mapper < T > name val name: String type val type: KClass < T >","title":"Properties"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/#functions","text":"Name Summary count fun count ( filter : Map < String , *> ): Long createIndex fun createIndex ( unique : Boolean , fields : Map < String , IndexOrder > ): String deleteMany fun deleteMany ( filter : Map < String , *> ): Long deleteOne fun deleteOne ( id : K ): Boolean drop fun drop (): Unit findMany fun findMany ( filter : Map < String , *> , limit : Int ? , skip : Int ? , sort : Map < String , Boolean > ): List < T > fun findMany ( filter : Map < String , *> , fields : List < String > , limit : Int ? , skip : Int ? , sort : Map < String , Boolean > ): List < Map < String , *>> findOne fun findOne ( key : K ): T ? fun findOne ( key : K , fields : List < String > ): Map < String , *>? insertMany fun insertMany ( instances : List < T > ): List < K > insertOne fun insertOne ( instance : T ): K replaceMany fun replaceMany ( instances : List < T > ): List < T > replaceOne fun replaceOne ( instance : T ): Boolean saveMany fun saveMany ( instances : List < T > ): List < K ?> saveOne fun saveOne ( instance : T ): K ? updateMany fun updateMany ( filter : Map < String , *> , updates : Map < String , *> ): Long updateOne fun updateOne ( key : K , updates : Map < String , *> ): Boolean","title":"Functions"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/-init-/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / <init> <init> \u00b6 HashMapStore ( type : KClass < T > , key : KProperty1 < T , K > , name : String = type . java . simpleName , store : HashMap < K , Map < String , Any >> = hashMapOf (), mapper : Mapper < T > = HashMapMapper ( type , key ))","title":" init "},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/-init-/#init","text":"HashMapStore ( type : KClass < T > , key : KProperty1 < T , K > , name : String = type . java . simpleName , store : HashMap < K , Map < String , Any >> = hashMapOf (), mapper : Mapper < T > = HashMapMapper ( type , key ))","title":"&lt;init&gt;"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/count/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / count count \u00b6 fun count ( filter : Map < String , *> ): Long","title":"Count"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/count/#count","text":"fun count ( filter : Map < String , *> ): Long","title":"count"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/create-index/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / createIndex createIndex \u00b6 fun createIndex ( unique : Boolean , fields : Map < String , IndexOrder > ): String","title":"Create index"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/create-index/#createindex","text":"fun createIndex ( unique : Boolean , fields : Map < String , IndexOrder > ): String","title":"createIndex"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/delete-many/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / deleteMany deleteMany \u00b6 fun deleteMany ( filter : Map < String , *> ): Long","title":"Delete many"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/delete-many/#deletemany","text":"fun deleteMany ( filter : Map < String , *> ): Long","title":"deleteMany"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/delete-one/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / deleteOne deleteOne \u00b6 fun deleteOne ( id : K ): Boolean","title":"Delete one"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/delete-one/#deleteone","text":"fun deleteOne ( id : K ): Boolean","title":"deleteOne"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/drop/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / drop drop \u00b6 fun drop (): Unit","title":"Drop"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/drop/#drop","text":"fun drop (): Unit","title":"drop"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/find-many/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / findMany findMany \u00b6 fun findMany ( filter : Map < String , *> , limit : Int ? , skip : Int ? , sort : Map < String , Boolean > ): List < T > fun findMany ( filter : Map < String , *> , fields : List < String > , limit : Int ? , skip : Int ? , sort : Map < String , Boolean > ): List < Map < String , *>>","title":"Find many"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/find-many/#findmany","text":"fun findMany ( filter : Map < String , *> , limit : Int ? , skip : Int ? , sort : Map < String , Boolean > ): List < T > fun findMany ( filter : Map < String , *> , fields : List < String > , limit : Int ? , skip : Int ? , sort : Map < String , Boolean > ): List < Map < String , *>>","title":"findMany"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/find-one/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / findOne findOne \u00b6 fun findOne ( key : K ): T ? fun findOne ( key : K , fields : List < String > ): Map < String , *>?","title":"Find one"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/find-one/#findone","text":"fun findOne ( key : K ): T ? fun findOne ( key : K , fields : List < String > ): Map < String , *>?","title":"findOne"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/insert-many/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / insertMany insertMany \u00b6 fun insertMany ( instances : List < T > ): List < K >","title":"Insert many"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/insert-many/#insertmany","text":"fun insertMany ( instances : List < T > ): List < K >","title":"insertMany"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/insert-one/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / insertOne insertOne \u00b6 fun insertOne ( instance : T ): K","title":"Insert one"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/insert-one/#insertone","text":"fun insertOne ( instance : T ): K","title":"insertOne"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/key/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / key key \u00b6 val key: KProperty1 < T , K >","title":"Key"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/key/#key","text":"val key: KProperty1 < T , K >","title":"key"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/mapper/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / mapper mapper \u00b6 val mapper: Mapper < T >","title":"Mapper"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/mapper/#mapper","text":"val mapper: Mapper < T >","title":"mapper"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/name/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / name name \u00b6 val name: String","title":"Name"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/name/#name","text":"val name: String","title":"name"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/replace-many/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / replaceMany replaceMany \u00b6 fun replaceMany ( instances : List < T > ): List < T >","title":"Replace many"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/replace-many/#replacemany","text":"fun replaceMany ( instances : List < T > ): List < T >","title":"replaceMany"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/replace-one/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / replaceOne replaceOne \u00b6 fun replaceOne ( instance : T ): Boolean","title":"Replace one"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/replace-one/#replaceone","text":"fun replaceOne ( instance : T ): Boolean","title":"replaceOne"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/save-many/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / saveMany saveMany \u00b6 fun saveMany ( instances : List < T > ): List < K ?>","title":"Save many"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/save-many/#savemany","text":"fun saveMany ( instances : List < T > ): List < K ?>","title":"saveMany"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/save-one/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / saveOne saveOne \u00b6 fun saveOne ( instance : T ): K ?","title":"Save one"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/save-one/#saveone","text":"fun saveOne ( instance : T ): K ?","title":"saveOne"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/type/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / type type \u00b6 val type: KClass < T >","title":"Type"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/type/#type","text":"val type: KClass < T >","title":"type"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/update-many/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / updateMany updateMany \u00b6 fun updateMany ( filter : Map < String , *> , updates : Map < String , *> ): Long","title":"Update many"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/update-many/#updatemany","text":"fun updateMany ( filter : Map < String , *> , updates : Map < String , *> ): Long","title":"updateMany"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/update-one/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStore / updateOne updateOne \u00b6 fun updateOne ( key : K , updates : Map < String , *> ): Boolean","title":"Update one"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store/update-one/#updateone","text":"fun updateOne ( key : K , updates : Map < String , *> ): Boolean","title":"updateOne"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStoreTest HashMapStoreTest \u00b6 class HashMapStoreTest Constructors \u00b6 Name Summary <init> HashMapStoreTest () Functions \u00b6 Name Summary dropCollection fun dropCollection (): Unit Entities are stored fun Entities are stored (): Unit Insert one record returns the proper key fun Insert one record returns the proper key (): Unit Many records are stored fun Many records are stored (): Unit New records are stored fun New records are stored (): Unit Store type is correct fun Store type is correct (): Unit","title":"Home"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/#hashmapstoretest","text":"class HashMapStoreTest","title":"HashMapStoreTest"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/#constructors","text":"Name Summary <init> HashMapStoreTest ()","title":"Constructors"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/#functions","text":"Name Summary dropCollection fun dropCollection (): Unit Entities are stored fun Entities are stored (): Unit Insert one record returns the proper key fun Insert one record returns the proper key (): Unit Many records are stored fun Many records are stored (): Unit New records are stored fun New records are stored (): Unit Store type is correct fun Store type is correct (): Unit","title":"Functions"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/-entities are stored/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStoreTest / Entities are stored Entities are stored \u00b6 fun Entities are stored (): Unit","title":" entities are stored"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/-entities are stored/#entities-are-stored","text":"fun Entities are stored (): Unit","title":"Entities are stored"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/-init-/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStoreTest / <init> <init> \u00b6 HashMapStoreTest ()","title":" init "},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/-init-/#init","text":"HashMapStoreTest ()","title":"&lt;init&gt;"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/-insert one record returns the proper key/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStoreTest / Insert one record returns the proper key Insert one record returns the proper key \u00b6 fun Insert one record returns the proper key (): Unit","title":" insert one record returns the proper key"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/-insert one record returns the proper key/#insert-one-record-returns-the-proper-key","text":"fun Insert one record returns the proper key (): Unit","title":"Insert one record returns the proper key"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/-many records are stored/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStoreTest / Many records are stored Many records are stored \u00b6 fun Many records are stored (): Unit","title":" many records are stored"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/-many records are stored/#many-records-are-stored","text":"fun Many records are stored (): Unit","title":"Many records are stored"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/-new records are stored/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStoreTest / New records are stored New records are stored \u00b6 fun New records are stored (): Unit","title":" new records are stored"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/-new records are stored/#new-records-are-stored","text":"fun New records are stored (): Unit","title":"New records are stored"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/-store type is correct/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStoreTest / Store type is correct Store type is correct \u00b6 fun Store type is correct (): Unit","title":" store type is correct"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/-store type is correct/#store-type-is-correct","text":"fun Store type is correct (): Unit","title":"Store type is correct"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/drop-collection/","text":"port_store / com.hexagonkt.store.hashmap / HashMapStoreTest / dropCollection dropCollection \u00b6 fun dropCollection (): Unit","title":"Drop collection"},{"location":"port_store/com.hexagonkt.store.hashmap/-hash-map-store-test/drop-collection/#dropcollection","text":"fun dropCollection (): Unit","title":"dropCollection"},{"location":"port_store/com.hexagonkt.store.hashmap/-person/","text":"port_store / com.hexagonkt.store.hashmap / Person Person \u00b6 data class Person Constructors \u00b6 Name Summary <init> Person ( name : String ) Properties \u00b6 Name Summary name val name: String","title":"Home"},{"location":"port_store/com.hexagonkt.store.hashmap/-person/#person","text":"data class Person","title":"Person"},{"location":"port_store/com.hexagonkt.store.hashmap/-person/#constructors","text":"Name Summary <init> Person ( name : String )","title":"Constructors"},{"location":"port_store/com.hexagonkt.store.hashmap/-person/#properties","text":"Name Summary name val name: String","title":"Properties"},{"location":"port_store/com.hexagonkt.store.hashmap/-person/-init-/","text":"port_store / com.hexagonkt.store.hashmap / Person / <init> <init> \u00b6 Person ( name : String )","title":" init "},{"location":"port_store/com.hexagonkt.store.hashmap/-person/-init-/#init","text":"Person ( name : String )","title":"&lt;init&gt;"},{"location":"port_store/com.hexagonkt.store.hashmap/-person/name/","text":"port_store / com.hexagonkt.store.hashmap / Person / name name \u00b6 val name: String","title":"Name"},{"location":"port_store/com.hexagonkt.store.hashmap/-person/name/#name","text":"val name: String","title":"name"},{"location":"port_templates/","text":"port_templates TODO Packages \u00b6 Name Summary com.hexagonkt.templates TODO Index \u00b6 All Types","title":"Templates"},{"location":"port_templates/#packages","text":"Name Summary com.hexagonkt.templates TODO","title":"Packages"},{"location":"port_templates/#index","text":"All Types","title":"Index"},{"location":"port_templates/alltypes/","text":"TODO All Types \u00b6 Name Summary com.hexagonkt.templates.TemplateManager \u00b6 | com.hexagonkt.templates.TemplateManagerTest \u00b6 | com.hexagonkt.templates.TemplatePort \u00b6","title":"Home"},{"location":"port_templates/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"port_templates/alltypes/#comhexagonkttemplatestemplatemanager","text":"|","title":"com.hexagonkt.templates.TemplateManager"},{"location":"port_templates/alltypes/#comhexagonkttemplatestemplatemanagertest","text":"|","title":"com.hexagonkt.templates.TemplateManagerTest"},{"location":"port_templates/alltypes/#comhexagonkttemplatestemplateport","text":"","title":"com.hexagonkt.templates.TemplatePort"},{"location":"port_templates/com.hexagonkt.templates/","text":"port_templates / com.hexagonkt.templates Package com.hexagonkt.templates \u00b6 TODO Level 2 heading \u00b6 More docs Types \u00b6 Name Summary TemplateManager object TemplateManager TemplateManagerTest class TemplateManagerTest TemplatePort interface TemplatePort","title":"Home"},{"location":"port_templates/com.hexagonkt.templates/#package-comhexagonkttemplates","text":"TODO","title":"Package com.hexagonkt.templates"},{"location":"port_templates/com.hexagonkt.templates/#level-2-heading","text":"More docs","title":"Level 2 heading"},{"location":"port_templates/com.hexagonkt.templates/#types","text":"Name Summary TemplateManager object TemplateManager TemplateManagerTest class TemplateManagerTest TemplatePort interface TemplatePort","title":"Types"},{"location":"port_templates/com.hexagonkt.templates/-template-manager/","text":"port_templates / com.hexagonkt.templates / TemplateManager TemplateManager \u00b6 object TemplateManager Functions \u00b6 Name Summary render fun render ( engine : TemplatePort , resource : String , locale : Locale , context : Map < String , *> ): String","title":"Home"},{"location":"port_templates/com.hexagonkt.templates/-template-manager/#templatemanager","text":"object TemplateManager","title":"TemplateManager"},{"location":"port_templates/com.hexagonkt.templates/-template-manager/#functions","text":"Name Summary render fun render ( engine : TemplatePort , resource : String , locale : Locale , context : Map < String , *> ): String","title":"Functions"},{"location":"port_templates/com.hexagonkt.templates/-template-manager/render/","text":"port_templates / com.hexagonkt.templates / TemplateManager / render render \u00b6 fun render ( engine : TemplatePort , resource : String , locale : Locale , context : Map < String , *> ): String","title":"Render"},{"location":"port_templates/com.hexagonkt.templates/-template-manager/render/#render","text":"fun render ( engine : TemplatePort , resource : String , locale : Locale , context : Map < String , *> ): String","title":"render"},{"location":"port_templates/com.hexagonkt.templates/-template-manager-test/","text":"port_templates / com.hexagonkt.templates / TemplateManagerTest TemplateManagerTest \u00b6 class TemplateManagerTest Constructors \u00b6 Name Summary <init> TemplateManagerTest () Functions \u00b6 Name Summary Invalid resource path will return empty map fun Invalid resource path will return empty map () : Unit Template with unparseable properties is rendered fun Template with unparseable properties is rendered (): Unit","title":"Home"},{"location":"port_templates/com.hexagonkt.templates/-template-manager-test/#templatemanagertest","text":"class TemplateManagerTest","title":"TemplateManagerTest"},{"location":"port_templates/com.hexagonkt.templates/-template-manager-test/#constructors","text":"Name Summary <init> TemplateManagerTest ()","title":"Constructors"},{"location":"port_templates/com.hexagonkt.templates/-template-manager-test/#functions","text":"Name Summary Invalid resource path will return empty map fun Invalid resource path will return empty map () : Unit Template with unparseable properties is rendered fun Template with unparseable properties is rendered (): Unit","title":"Functions"},{"location":"port_templates/com.hexagonkt.templates/-template-manager-test/-init-/","text":"port_templates / com.hexagonkt.templates / TemplateManagerTest / <init> <init> \u00b6 TemplateManagerTest ()","title":" init "},{"location":"port_templates/com.hexagonkt.templates/-template-manager-test/-init-/#init","text":"TemplateManagerTest ()","title":"&lt;init&gt;"},{"location":"port_templates/com.hexagonkt.templates/-template-manager-test/-invalid resource path will return empty map/","text":"port_templates / com.hexagonkt.templates / TemplateManagerTest / Invalid resource path will return empty map Invalid resource path will return empty map \u00b6 fun Invalid resource path will return empty map () : Unit","title":" invalid resource path will return empty map"},{"location":"port_templates/com.hexagonkt.templates/-template-manager-test/-invalid resource path will return empty map/#invalid-resource-path-will-return-empty-map","text":"fun Invalid resource path will return empty map () : Unit","title":"Invalid resource path will return empty map"},{"location":"port_templates/com.hexagonkt.templates/-template-manager-test/-template with unparseable properties is rendered/","text":"port_templates / com.hexagonkt.templates / TemplateManagerTest / Template with unparseable properties is rendered Template with unparseable properties is rendered \u00b6 fun Template with unparseable properties is rendered (): Unit","title":" template with unparseable properties is rendered"},{"location":"port_templates/com.hexagonkt.templates/-template-manager-test/-template with unparseable properties is rendered/#template-with-unparseable-properties-is-rendered","text":"fun Template with unparseable properties is rendered (): Unit","title":"Template with unparseable properties is rendered"},{"location":"port_templates/com.hexagonkt.templates/-template-port/","text":"port_templates / com.hexagonkt.templates / TemplatePort TemplatePort \u00b6 interface TemplatePort Functions \u00b6 Name Summary render abstract fun render ( resource : String , locale : Locale , context : Map < String , *> ): String open fun render ( resource : String , locale : Locale , vararg context : Pair < String , *> ): String","title":"Home"},{"location":"port_templates/com.hexagonkt.templates/-template-port/#templateport","text":"interface TemplatePort","title":"TemplatePort"},{"location":"port_templates/com.hexagonkt.templates/-template-port/#functions","text":"Name Summary render abstract fun render ( resource : String , locale : Locale , context : Map < String , *> ): String open fun render ( resource : String , locale : Locale , vararg context : Pair < String , *> ): String","title":"Functions"},{"location":"port_templates/com.hexagonkt.templates/-template-port/render/","text":"port_templates / com.hexagonkt.templates / TemplatePort / render render \u00b6 abstract fun render ( resource : String , locale : Locale , context : Map < String , *> ): String open fun render ( resource : String , locale : Locale , vararg context : Pair < String , *> ): String","title":"Render"},{"location":"port_templates/com.hexagonkt.templates/-template-port/render/#render","text":"abstract fun render ( resource : String , locale : Locale , context : Map < String , *> ): String open fun render ( resource : String , locale : Locale , vararg context : Pair < String , *> ): String","title":"render"},{"location":"store_mongodb/","text":"store_mongodb Hexagon's storage utilities for data classes. Packages \u00b6 Name Summary com.hexagonkt.store.mongodb TODO Index \u00b6 All Types","title":"MongoDB"},{"location":"store_mongodb/#packages","text":"Name Summary com.hexagonkt.store.mongodb TODO","title":"Packages"},{"location":"store_mongodb/#index","text":"All Types","title":"Index"},{"location":"store_mongodb/alltypes/","text":"Hexagon's storage utilities for data classes. All Types \u00b6 Name Summary com.hexagonkt.store.mongodb.Company \u00b6 | com.hexagonkt.store.mongodb.CompanyTest \u00b6 | com.hexagonkt.store.mongodb.Department \u00b6 | com.hexagonkt.store.mongodb.IdRepositoryTest \u00b6 TODO Check events | com.hexagonkt.store.mongodb.MongoDbMapper \u00b6 | com.hexagonkt.store.mongodb.MongoDbMapperTest \u00b6 | com.hexagonkt.store.mongodb.MongoDbStore \u00b6 | com.hexagonkt.store.mongodb.MongoDbStoreTest \u00b6 | com.hexagonkt.store.mongodb.MongoIdRepository \u00b6 | com.hexagonkt.store.mongodb.MongoRepository \u00b6 | com.hexagonkt.store.mongodb.MongoRepositoryTest \u00b6 | com.hexagonkt.store.mongodb.Person \u00b6 | com.hexagonkt.store.mongodb.RepositoryTest \u00b6 TODO Check events | com.hexagonkt.store.mongodb.Tag \u00b6","title":"Home"},{"location":"store_mongodb/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"store_mongodb/alltypes/#comhexagonktstoremongodbcompany","text":"|","title":"com.hexagonkt.store.mongodb.Company"},{"location":"store_mongodb/alltypes/#comhexagonktstoremongodbcompanytest","text":"|","title":"com.hexagonkt.store.mongodb.CompanyTest"},{"location":"store_mongodb/alltypes/#comhexagonktstoremongodbdepartment","text":"|","title":"com.hexagonkt.store.mongodb.Department"},{"location":"store_mongodb/alltypes/#comhexagonktstoremongodbidrepositorytest","text":"TODO Check events |","title":"com.hexagonkt.store.mongodb.IdRepositoryTest"},{"location":"store_mongodb/alltypes/#comhexagonktstoremongodbmongodbmapper","text":"|","title":"com.hexagonkt.store.mongodb.MongoDbMapper"},{"location":"store_mongodb/alltypes/#comhexagonktstoremongodbmongodbmappertest","text":"|","title":"com.hexagonkt.store.mongodb.MongoDbMapperTest"},{"location":"store_mongodb/alltypes/#comhexagonktstoremongodbmongodbstore","text":"|","title":"com.hexagonkt.store.mongodb.MongoDbStore"},{"location":"store_mongodb/alltypes/#comhexagonktstoremongodbmongodbstoretest","text":"|","title":"com.hexagonkt.store.mongodb.MongoDbStoreTest"},{"location":"store_mongodb/alltypes/#comhexagonktstoremongodbmongoidrepository","text":"|","title":"com.hexagonkt.store.mongodb.MongoIdRepository"},{"location":"store_mongodb/alltypes/#comhexagonktstoremongodbmongorepository","text":"|","title":"com.hexagonkt.store.mongodb.MongoRepository"},{"location":"store_mongodb/alltypes/#comhexagonktstoremongodbmongorepositorytest","text":"|","title":"com.hexagonkt.store.mongodb.MongoRepositoryTest"},{"location":"store_mongodb/alltypes/#comhexagonktstoremongodbperson","text":"|","title":"com.hexagonkt.store.mongodb.Person"},{"location":"store_mongodb/alltypes/#comhexagonktstoremongodbrepositorytest","text":"TODO Check events |","title":"com.hexagonkt.store.mongodb.RepositoryTest"},{"location":"store_mongodb/alltypes/#comhexagonktstoremongodbtag","text":"","title":"com.hexagonkt.store.mongodb.Tag"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/","text":"store_mongodb / com.hexagonkt.store.mongodb Package com.hexagonkt.store.mongodb \u00b6 TODO Types \u00b6 Name Summary Company data class Company CompanyTest class CompanyTest : IdRepositoryTest < Company , String > Department enum class Department IdRepositoryTest TODO Check events abstract class IdRepositoryTest < T : Any , K : Any > : RepositoryTest < T , K > MongoDbMapper class MongoDbMapper < T : Any , K : Any > : Mapper < T > MongoDbMapperTest class MongoDbMapperTest MongoDbStore class MongoDbStore < T : Any , K : Any > : Store < T , K > MongoDbStoreTest class MongoDbStoreTest MongoIdRepository open class MongoIdRepository < T : Any , K : Any > : MongoRepository < T > MongoRepository open class MongoRepository < T : Any > : MongoCollection < Document > MongoRepositoryTest class MongoRepositoryTest Person data class Person RepositoryTest TODO Check events abstract class RepositoryTest < T : Any , out K : Any > Tag data class Tag Functions \u00b6 Name Summary mongoDatabase fun mongoDatabase ( uri : String ): MongoDatabase","title":"Home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/#package-comhexagonktstoremongodb","text":"TODO","title":"Package com.hexagonkt.store.mongodb"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/#types","text":"Name Summary Company data class Company CompanyTest class CompanyTest : IdRepositoryTest < Company , String > Department enum class Department IdRepositoryTest TODO Check events abstract class IdRepositoryTest < T : Any , K : Any > : RepositoryTest < T , K > MongoDbMapper class MongoDbMapper < T : Any , K : Any > : Mapper < T > MongoDbMapperTest class MongoDbMapperTest MongoDbStore class MongoDbStore < T : Any , K : Any > : Store < T , K > MongoDbStoreTest class MongoDbStoreTest MongoIdRepository open class MongoIdRepository < T : Any , K : Any > : MongoRepository < T > MongoRepository open class MongoRepository < T : Any > : MongoCollection < Document > MongoRepositoryTest class MongoRepositoryTest Person data class Person RepositoryTest TODO Check events abstract class RepositoryTest < T : Any , out K : Any > Tag data class Tag","title":"Types"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/#functions","text":"Name Summary mongoDatabase fun mongoDatabase ( uri : String ): MongoDatabase","title":"Functions"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/mongo-database/","text":"store_mongodb / com.hexagonkt.store.mongodb / mongoDatabase mongoDatabase \u00b6 fun mongoDatabase ( uri : String ): MongoDatabase","title":"Mongo database"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/mongo-database/#mongodatabase","text":"fun mongoDatabase ( uri : String ): MongoDatabase","title":"mongoDatabase"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/","text":"store_mongodb / com.hexagonkt.store.mongodb / Company Company \u00b6 data class Company Constructors \u00b6 Name Summary <init> Company ( id : String , foundation : LocalDate , closeTime : LocalTime , openTime : ClosedRange < LocalTime > , web : URL ? , clients : List < URL > = listOf (), logo : ByteBuffer ? = null , notes : String ? = null , people : Set < Person > = setOf (), departments : Set < Department > = setOf (), creationDate : LocalDateTime = LocalDateTime . now (). truncatedTo ( MILLIS )) Properties \u00b6 Name Summary clients val clients: List < URL > closeTime val closeTime: LocalTime creationDate val creationDate: LocalDateTime departments val departments: Set < Department > foundation val foundation: LocalDate id val id: String logo val logo: ByteBuffer ? notes val notes: String ? openTime val openTime: ClosedRange < LocalTime > people val people: Set < Person > web val web: URL ?","title":"Home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/#company","text":"data class Company","title":"Company"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/#constructors","text":"Name Summary <init> Company ( id : String , foundation : LocalDate , closeTime : LocalTime , openTime : ClosedRange < LocalTime > , web : URL ? , clients : List < URL > = listOf (), logo : ByteBuffer ? = null , notes : String ? = null , people : Set < Person > = setOf (), departments : Set < Department > = setOf (), creationDate : LocalDateTime = LocalDateTime . now (). truncatedTo ( MILLIS ))","title":"Constructors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/#properties","text":"Name Summary clients val clients: List < URL > closeTime val closeTime: LocalTime creationDate val creationDate: LocalDateTime departments val departments: Set < Department > foundation val foundation: LocalDate id val id: String logo val logo: ByteBuffer ? notes val notes: String ? openTime val openTime: ClosedRange < LocalTime > people val people: Set < Person > web val web: URL ?","title":"Properties"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/-init-/","text":"store_mongodb / com.hexagonkt.store.mongodb / Company / <init> <init> \u00b6 Company ( id : String , foundation : LocalDate , closeTime : LocalTime , openTime : ClosedRange < LocalTime > , web : URL ? , clients : List < URL > = listOf (), logo : ByteBuffer ? = null , notes : String ? = null , people : Set < Person > = setOf (), departments : Set < Department > = setOf (), creationDate : LocalDateTime = LocalDateTime . now (). truncatedTo ( MILLIS ))","title":" init "},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/-init-/#init","text":"Company ( id : String , foundation : LocalDate , closeTime : LocalTime , openTime : ClosedRange < LocalTime > , web : URL ? , clients : List < URL > = listOf (), logo : ByteBuffer ? = null , notes : String ? = null , people : Set < Person > = setOf (), departments : Set < Department > = setOf (), creationDate : LocalDateTime = LocalDateTime . now (). truncatedTo ( MILLIS ))","title":"&lt;init&gt;"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/clients/","text":"store_mongodb / com.hexagonkt.store.mongodb / Company / clients clients \u00b6 val clients: List < URL >","title":"Clients"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/clients/#clients","text":"val clients: List < URL >","title":"clients"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/close-time/","text":"store_mongodb / com.hexagonkt.store.mongodb / Company / closeTime closeTime \u00b6 val closeTime: LocalTime","title":"Close time"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/close-time/#closetime","text":"val closeTime: LocalTime","title":"closeTime"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/creation-date/","text":"store_mongodb / com.hexagonkt.store.mongodb / Company / creationDate creationDate \u00b6 val creationDate: LocalDateTime","title":"Creation date"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/creation-date/#creationdate","text":"val creationDate: LocalDateTime","title":"creationDate"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/departments/","text":"store_mongodb / com.hexagonkt.store.mongodb / Company / departments departments \u00b6 val departments: Set < Department >","title":"Departments"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/departments/#departments","text":"val departments: Set < Department >","title":"departments"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/foundation/","text":"store_mongodb / com.hexagonkt.store.mongodb / Company / foundation foundation \u00b6 val foundation: LocalDate","title":"Foundation"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/foundation/#foundation","text":"val foundation: LocalDate","title":"foundation"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/id/","text":"store_mongodb / com.hexagonkt.store.mongodb / Company / id id \u00b6 val id: String","title":"Id"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/id/#id","text":"val id: String","title":"id"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/logo/","text":"store_mongodb / com.hexagonkt.store.mongodb / Company / logo logo \u00b6 val logo: ByteBuffer ?","title":"Logo"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/logo/#logo","text":"val logo: ByteBuffer ?","title":"logo"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/notes/","text":"store_mongodb / com.hexagonkt.store.mongodb / Company / notes notes \u00b6 val notes: String ?","title":"Notes"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/notes/#notes","text":"val notes: String ?","title":"notes"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/open-time/","text":"store_mongodb / com.hexagonkt.store.mongodb / Company / openTime openTime \u00b6 val openTime: ClosedRange < LocalTime >","title":"Open time"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/open-time/#opentime","text":"val openTime: ClosedRange < LocalTime >","title":"openTime"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/people/","text":"store_mongodb / com.hexagonkt.store.mongodb / Company / people people \u00b6 val people: Set < Person >","title":"People"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/people/#people","text":"val people: Set < Person >","title":"people"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/web/","text":"store_mongodb / com.hexagonkt.store.mongodb / Company / web web \u00b6 val web: URL ?","title":"Web"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company/web/#web","text":"val web: URL ?","title":"web"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/","text":"store_mongodb / com.hexagonkt.store.mongodb / CompanyTest CompanyTest \u00b6 class CompanyTest : IdRepositoryTest < Company , String > Constructors \u00b6 Name Summary <init> CompanyTest () Properties \u00b6 Name Summary testObjects val testObjects: List < Company > Functions \u00b6 Name Summary changeObject fun changeObject ( obj : Company ): Company check fun check (): Unit createObject fun createObject (): Company setObjectKey fun setObjectKey ( obj : Company , id : Int ): Company","title":"Home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/#companytest","text":"class CompanyTest : IdRepositoryTest < Company , String >","title":"CompanyTest"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/#constructors","text":"Name Summary <init> CompanyTest ()","title":"Constructors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/#properties","text":"Name Summary testObjects val testObjects: List < Company >","title":"Properties"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/#functions","text":"Name Summary changeObject fun changeObject ( obj : Company ): Company check fun check (): Unit createObject fun createObject (): Company setObjectKey fun setObjectKey ( obj : Company , id : Int ): Company","title":"Functions"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/-init-/","text":"store_mongodb / com.hexagonkt.store.mongodb / CompanyTest / <init> <init> \u00b6 CompanyTest ()","title":" init "},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/-init-/#init","text":"CompanyTest ()","title":"&lt;init&gt;"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/change-object/","text":"store_mongodb / com.hexagonkt.store.mongodb / CompanyTest / changeObject changeObject \u00b6 protected fun changeObject ( obj : Company ): Company","title":"Change object"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/change-object/#changeobject","text":"protected fun changeObject ( obj : Company ): Company","title":"changeObject"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/check/","text":"store_mongodb / com.hexagonkt.store.mongodb / CompanyTest / check check \u00b6 fun check (): Unit","title":"Check"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/check/#check","text":"fun check (): Unit","title":"check"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/create-object/","text":"store_mongodb / com.hexagonkt.store.mongodb / CompanyTest / createObject createObject \u00b6 protected fun createObject (): Company","title":"Create object"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/create-object/#createobject","text":"protected fun createObject (): Company","title":"createObject"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/set-object-key/","text":"store_mongodb / com.hexagonkt.store.mongodb / CompanyTest / setObjectKey setObjectKey \u00b6 protected fun setObjectKey ( obj : Company , id : Int ): Company","title":"Set object key"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/set-object-key/#setobjectkey","text":"protected fun setObjectKey ( obj : Company , id : Int ): Company","title":"setObjectKey"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/test-objects/","text":"store_mongodb / com.hexagonkt.store.mongodb / CompanyTest / testObjects testObjects \u00b6 protected val testObjects: List < Company >","title":"Test objects"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-company-test/test-objects/#testobjects","text":"protected val testObjects: List < Company >","title":"testObjects"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-department/","text":"store_mongodb / com.hexagonkt.store.mongodb / Department Department \u00b6 enum class Department Enum Values \u00b6 Name Summary DESIGN DEVELOPMENT","title":"Home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-department/#department","text":"enum class Department","title":"Department"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-department/#enum-values","text":"Name Summary DESIGN DEVELOPMENT","title":"Enum Values"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-department/-d-e-s-i-g-n/","text":"store_mongodb / com.hexagonkt.store.mongodb / Department / DESIGN DESIGN \u00b6 DESIGN","title":" d e s i g n"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-department/-d-e-s-i-g-n/#design","text":"DESIGN","title":"DESIGN"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-department/-d-e-v-e-l-o-p-m-e-n-t/","text":"store_mongodb / com.hexagonkt.store.mongodb / Department / DEVELOPMENT DEVELOPMENT \u00b6 DEVELOPMENT","title":" d e v e l o p m e n t"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-department/-d-e-v-e-l-o-p-m-e-n-t/#development","text":"DEVELOPMENT","title":"DEVELOPMENT"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-id-repository-test/","text":"store_mongodb / com.hexagonkt.store.mongodb / IdRepositoryTest IdRepositoryTest \u00b6 abstract class IdRepositoryTest < T : Any , K : Any > : RepositoryTest < T , K > TODO Check events Constructors \u00b6 Name Summary <init> TODO Check events IdRepositoryTest ( type : KClass < T > , key : KProperty1 < T , K > ) Functions \u00b6 Name Summary getObjectKey open fun getObjectKey ( obj : T ): K performing_crud_operations_with_lists_of_objects_behaves_as_expected fun performing_crud_operations_with_lists_of_objects_behaves_as_expected (): Unit Inheritors \u00b6 Name Summary CompanyTest class CompanyTest : IdRepositoryTest < Company , String >","title":"Home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-id-repository-test/#idrepositorytest","text":"abstract class IdRepositoryTest < T : Any , K : Any > : RepositoryTest < T , K > TODO Check events","title":"IdRepositoryTest"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-id-repository-test/#constructors","text":"Name Summary <init> TODO Check events IdRepositoryTest ( type : KClass < T > , key : KProperty1 < T , K > )","title":"Constructors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-id-repository-test/#functions","text":"Name Summary getObjectKey open fun getObjectKey ( obj : T ): K performing_crud_operations_with_lists_of_objects_behaves_as_expected fun performing_crud_operations_with_lists_of_objects_behaves_as_expected (): Unit","title":"Functions"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-id-repository-test/#inheritors","text":"Name Summary CompanyTest class CompanyTest : IdRepositoryTest < Company , String >","title":"Inheritors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-id-repository-test/-init-/","text":"store_mongodb / com.hexagonkt.store.mongodb / IdRepositoryTest / <init> <init> \u00b6 IdRepositoryTest ( type : KClass < T > , key : KProperty1 < T , K > ) TODO Check events","title":" init "},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-id-repository-test/-init-/#init","text":"IdRepositoryTest ( type : KClass < T > , key : KProperty1 < T , K > ) TODO Check events","title":"&lt;init&gt;"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-id-repository-test/get-object-key/","text":"store_mongodb / com.hexagonkt.store.mongodb / IdRepositoryTest / getObjectKey getObjectKey \u00b6 protected open fun getObjectKey ( obj : T ): K","title":"Get object key"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-id-repository-test/get-object-key/#getobjectkey","text":"protected open fun getObjectKey ( obj : T ): K","title":"getObjectKey"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-id-repository-test/performing_crud_operations_with_lists_of_objects_behaves_as_expected/","text":"store_mongodb / com.hexagonkt.store.mongodb / IdRepositoryTest / performing_crud_operations_with_lists_of_objects_behaves_as_expected performing_crud_operations_with_lists_of_objects_behaves_as_expected \u00b6 fun performing_crud_operations_with_lists_of_objects_behaves_as_expected (): Unit","title":"Performing crud operations with lists of objects behaves as expected"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-id-repository-test/performing_crud_operations_with_lists_of_objects_behaves_as_expected/#performing_crud_operations_with_lists_of_objects_behaves_as_expected","text":"fun performing_crud_operations_with_lists_of_objects_behaves_as_expected (): Unit","title":"performing_crud_operations_with_lists_of_objects_behaves_as_expected"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapper MongoDbMapper \u00b6 class MongoDbMapper < T : Any , K : Any > : Mapper < T > Constructors \u00b6 Name Summary <init> MongoDbMapper ( type : KClass < T > , key : KProperty1 < T , K > ) Properties \u00b6 Name Summary fields val fields: Map < String , KProperty1 <* , *>> Functions \u00b6 Name Summary fromStore fun fromStore ( map : Map < String , Any > ): T fun fromStore ( property : String , value : Any ): Any toStore fun toStore ( instance : T ): Map < String , Any > fun toStore ( property : String , value : Any ): Any","title":"Home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper/#mongodbmapper","text":"class MongoDbMapper < T : Any , K : Any > : Mapper < T >","title":"MongoDbMapper"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper/#constructors","text":"Name Summary <init> MongoDbMapper ( type : KClass < T > , key : KProperty1 < T , K > )","title":"Constructors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper/#properties","text":"Name Summary fields val fields: Map < String , KProperty1 <* , *>>","title":"Properties"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper/#functions","text":"Name Summary fromStore fun fromStore ( map : Map < String , Any > ): T fun fromStore ( property : String , value : Any ): Any toStore fun toStore ( instance : T ): Map < String , Any > fun toStore ( property : String , value : Any ): Any","title":"Functions"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper/-init-/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapper / <init> <init> \u00b6 MongoDbMapper ( type : KClass < T > , key : KProperty1 < T , K > )","title":" init "},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper/-init-/#init","text":"MongoDbMapper ( type : KClass < T > , key : KProperty1 < T , K > )","title":"&lt;init&gt;"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper/fields/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapper / fields fields \u00b6 val fields: Map < String , KProperty1 <* , *>>","title":"Fields"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper/fields/#fields","text":"val fields: Map < String , KProperty1 <* , *>>","title":"fields"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper/from-store/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapper / fromStore fromStore \u00b6 fun fromStore ( map : Map < String , Any > ): T fun fromStore ( property : String , value : Any ): Any","title":"From store"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper/from-store/#fromstore","text":"fun fromStore ( map : Map < String , Any > ): T fun fromStore ( property : String , value : Any ): Any","title":"fromStore"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper/to-store/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapper / toStore toStore \u00b6 fun toStore ( instance : T ): Map < String , Any > fun toStore ( property : String , value : Any ): Any","title":"To store"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper/to-store/#tostore","text":"fun toStore ( instance : T ): Map < String , Any > fun toStore ( property : String , value : Any ): Any","title":"toStore"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest MongoDbMapperTest \u00b6 class MongoDbMapperTest Types \u00b6 Name Summary MappedClass data class MappedClass Constructors \u00b6 Name Summary <init> MongoDbMapperTest () Functions \u00b6 Name Summary A mapper transform a data class to a map and back fun A mapper transform a data class to a map and back (): Unit Mapping a date to an invalid field type results in error fun Mapping a date to an invalid field type results in error (): Unit","title":"Home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/#mongodbmappertest","text":"class MongoDbMapperTest","title":"MongoDbMapperTest"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/#types","text":"Name Summary MappedClass data class MappedClass","title":"Types"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/#constructors","text":"Name Summary <init> MongoDbMapperTest ()","title":"Constructors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/#functions","text":"Name Summary A mapper transform a data class to a map and back fun A mapper transform a data class to a map and back (): Unit Mapping a date to an invalid field type results in error fun Mapping a date to an invalid field type results in error (): Unit","title":"Functions"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-a mapper transform a data class to a map and back/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / A mapper transform a data class to a map and back A mapper transform a data class to a map and back \u00b6 fun A mapper transform a data class to a map and back (): Unit","title":" a mapper transform a data class to a map and back"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-a mapper transform a data class to a map and back/#a-mapper-transform-a-data-class-to-a-map-and-back","text":"fun A mapper transform a data class to a map and back (): Unit","title":"A mapper transform a data class to a map and back"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-init-/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / <init> <init> \u00b6 MongoDbMapperTest ()","title":" init "},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-init-/#init","text":"MongoDbMapperTest ()","title":"&lt;init&gt;"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapping a date to an invalid field type results in error/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / Mapping a date to an invalid field type results in error Mapping a date to an invalid field type results in error \u00b6 fun Mapping a date to an invalid field type results in error (): Unit","title":" mapping a date to an invalid field type results in error"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapping a date to an invalid field type results in error/#mapping-a-date-to-an-invalid-field-type-results-in-error","text":"fun Mapping a date to an invalid field type results in error (): Unit","title":"Mapping a date to an invalid field type results in error"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / MappedClass MappedClass \u00b6 data class MappedClass Constructors \u00b6 Name Summary <init> MappedClass ( oneString : String = \"String\" , oneBoolean : Boolean = true , anInt : Int = 42 , oneLong : Long = 1 _234L , oneFloat : Float = 1 . 23 F , oneDouble : Double = 2 . 345 , oneList : List < String > = listOf ( \"One\" , \"Two\" ), oneMap : Map < String , *> = mapOf ( \"One\" to 1 , \"Two\" to true , \"Three\" to 0 . 12 ), oneNullable : String ? = null , otherData : String = \"other\" , atHome : Int = 0 , onePlus : Char = 'c' ) Properties \u00b6 Name Summary anInt val anInt: Int atHome val atHome: Int oneBoolean val oneBoolean: Boolean oneDouble val oneDouble: Double oneFloat val oneFloat: Float oneList val oneList: List < String > oneLong val oneLong: Long oneMap val oneMap: Map < String , *> oneNullable val oneNullable: String ? onePlus val onePlus: Char oneString val oneString: String otherData val otherData: String","title":"Home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/#mappedclass","text":"data class MappedClass","title":"MappedClass"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/#constructors","text":"Name Summary <init> MappedClass ( oneString : String = \"String\" , oneBoolean : Boolean = true , anInt : Int = 42 , oneLong : Long = 1 _234L , oneFloat : Float = 1 . 23 F , oneDouble : Double = 2 . 345 , oneList : List < String > = listOf ( \"One\" , \"Two\" ), oneMap : Map < String , *> = mapOf ( \"One\" to 1 , \"Two\" to true , \"Three\" to 0 . 12 ), oneNullable : String ? = null , otherData : String = \"other\" , atHome : Int = 0 , onePlus : Char = 'c' )","title":"Constructors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/#properties","text":"Name Summary anInt val anInt: Int atHome val atHome: Int oneBoolean val oneBoolean: Boolean oneDouble val oneDouble: Double oneFloat val oneFloat: Float oneList val oneList: List < String > oneLong val oneLong: Long oneMap val oneMap: Map < String , *> oneNullable val oneNullable: String ? onePlus val onePlus: Char oneString val oneString: String otherData val otherData: String","title":"Properties"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/-init-/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / MappedClass / <init> <init> \u00b6 MappedClass ( oneString : String = \"String\" , oneBoolean : Boolean = true , anInt : Int = 42 , oneLong : Long = 1 _234L , oneFloat : Float = 1 . 23 F , oneDouble : Double = 2 . 345 , oneList : List < String > = listOf ( \"One\" , \"Two\" ), oneMap : Map < String , *> = mapOf ( \"One\" to 1 , \"Two\" to true , \"Three\" to 0 . 12 ), oneNullable : String ? = null , otherData : String = \"other\" , atHome : Int = 0 , onePlus : Char = 'c' )","title":" init "},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/-init-/#init","text":"MappedClass ( oneString : String = \"String\" , oneBoolean : Boolean = true , anInt : Int = 42 , oneLong : Long = 1 _234L , oneFloat : Float = 1 . 23 F , oneDouble : Double = 2 . 345 , oneList : List < String > = listOf ( \"One\" , \"Two\" ), oneMap : Map < String , *> = mapOf ( \"One\" to 1 , \"Two\" to true , \"Three\" to 0 . 12 ), oneNullable : String ? = null , otherData : String = \"other\" , atHome : Int = 0 , onePlus : Char = 'c' )","title":"&lt;init&gt;"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/an-int/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / MappedClass / anInt anInt \u00b6 val anInt: Int","title":"An int"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/an-int/#anint","text":"val anInt: Int","title":"anInt"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/at-home/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / MappedClass / atHome atHome \u00b6 val atHome: Int","title":"At home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/at-home/#athome","text":"val atHome: Int","title":"atHome"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-boolean/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / MappedClass / oneBoolean oneBoolean \u00b6 val oneBoolean: Boolean","title":"One boolean"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-boolean/#oneboolean","text":"val oneBoolean: Boolean","title":"oneBoolean"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-double/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / MappedClass / oneDouble oneDouble \u00b6 val oneDouble: Double","title":"One double"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-double/#onedouble","text":"val oneDouble: Double","title":"oneDouble"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-float/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / MappedClass / oneFloat oneFloat \u00b6 val oneFloat: Float","title":"One float"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-float/#onefloat","text":"val oneFloat: Float","title":"oneFloat"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-list/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / MappedClass / oneList oneList \u00b6 val oneList: List < String >","title":"One list"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-list/#onelist","text":"val oneList: List < String >","title":"oneList"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-long/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / MappedClass / oneLong oneLong \u00b6 val oneLong: Long","title":"One long"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-long/#onelong","text":"val oneLong: Long","title":"oneLong"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-map/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / MappedClass / oneMap oneMap \u00b6 val oneMap: Map < String , *>","title":"One map"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-map/#onemap","text":"val oneMap: Map < String , *>","title":"oneMap"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-nullable/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / MappedClass / oneNullable oneNullable \u00b6 val oneNullable: String ?","title":"One nullable"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-nullable/#onenullable","text":"val oneNullable: String ?","title":"oneNullable"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-plus/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / MappedClass / onePlus onePlus \u00b6 val onePlus: Char","title":"One plus"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-plus/#oneplus","text":"val onePlus: Char","title":"onePlus"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-string/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / MappedClass / oneString oneString \u00b6 val oneString: String","title":"One string"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/one-string/#onestring","text":"val oneString: String","title":"oneString"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/other-data/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbMapperTest / MappedClass / otherData otherData \u00b6 val otherData: String","title":"Other data"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-mapper-test/-mapped-class/other-data/#otherdata","text":"val otherData: String","title":"otherData"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore MongoDbStore \u00b6 class MongoDbStore < T : Any , K : Any > : Store < T , K > Constructors \u00b6 Name Summary <init> MongoDbStore ( type : KClass < T > , key : KProperty1 < T , K > , url : String , name : String = type . java . simpleName ) MongoDbStore ( type : KClass < T > , key : KProperty1 < T , K > , database : MongoDatabase , name : String = type . java . simpleName , mapper : Mapper < T > = MongoDbMapper ( type , key )) Properties \u00b6 Name Summary collection val collection: MongoCollection <Document> key val key: KProperty1 < T , K > mapper val mapper: Mapper <T> name val name: String type val type: KClass < T > Functions \u00b6 Name Summary count fun count ( filter : Map < String , *> ): Long createIndex fun createIndex ( unique : Boolean , fields : Map < String , IndexOrder > ): String deleteMany fun deleteMany ( filter : Map < String , *> ): Long deleteOne fun deleteOne ( id : K ): Boolean drop fun drop (): Unit findMany fun findMany ( filter : Map < String , *> , limit : Int ? , skip : Int ? , sort : Map < String , Boolean > ): List < T > fun findMany ( filter : Map < String , *> , fields : List < String > , limit : Int ? , skip : Int ? , sort : Map < String , Boolean > ): List < Map < String , *>> findOne fun findOne ( key : K ): T ? fun findOne ( key : K , fields : List < String > ): Map < String , *>? insertMany fun insertMany ( instances : List < T > ): List < K > insertOne fun insertOne ( instance : T ): K replaceMany fun replaceMany ( instances : List < T > ): List < T > replaceOne fun replaceOne ( instance : T ): Boolean saveMany fun saveMany ( instances : List < T > ): List < K ?> saveOne fun saveOne ( instance : T ): K ? updateMany fun updateMany ( filter : Map < String , *> , updates : Map < String , *> ): Long updateOne fun updateOne ( key : K , updates : Map < String , *> ): Boolean Companion Object Functions \u00b6 Name Summary database fun database ( url : String ): MongoDatabase","title":"Home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/#mongodbstore","text":"class MongoDbStore < T : Any , K : Any > : Store < T , K >","title":"MongoDbStore"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/#constructors","text":"Name Summary <init> MongoDbStore ( type : KClass < T > , key : KProperty1 < T , K > , url : String , name : String = type . java . simpleName ) MongoDbStore ( type : KClass < T > , key : KProperty1 < T , K > , database : MongoDatabase , name : String = type . java . simpleName , mapper : Mapper < T > = MongoDbMapper ( type , key ))","title":"Constructors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/#properties","text":"Name Summary collection val collection: MongoCollection <Document> key val key: KProperty1 < T , K > mapper val mapper: Mapper <T> name val name: String type val type: KClass < T >","title":"Properties"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/#functions","text":"Name Summary count fun count ( filter : Map < String , *> ): Long createIndex fun createIndex ( unique : Boolean , fields : Map < String , IndexOrder > ): String deleteMany fun deleteMany ( filter : Map < String , *> ): Long deleteOne fun deleteOne ( id : K ): Boolean drop fun drop (): Unit findMany fun findMany ( filter : Map < String , *> , limit : Int ? , skip : Int ? , sort : Map < String , Boolean > ): List < T > fun findMany ( filter : Map < String , *> , fields : List < String > , limit : Int ? , skip : Int ? , sort : Map < String , Boolean > ): List < Map < String , *>> findOne fun findOne ( key : K ): T ? fun findOne ( key : K , fields : List < String > ): Map < String , *>? insertMany fun insertMany ( instances : List < T > ): List < K > insertOne fun insertOne ( instance : T ): K replaceMany fun replaceMany ( instances : List < T > ): List < T > replaceOne fun replaceOne ( instance : T ): Boolean saveMany fun saveMany ( instances : List < T > ): List < K ?> saveOne fun saveOne ( instance : T ): K ? updateMany fun updateMany ( filter : Map < String , *> , updates : Map < String , *> ): Long updateOne fun updateOne ( key : K , updates : Map < String , *> ): Boolean","title":"Functions"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/#companion-object-functions","text":"Name Summary database fun database ( url : String ): MongoDatabase","title":"Companion Object Functions"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/-init-/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / <init> <init> \u00b6 MongoDbStore ( type : KClass < T > , key : KProperty1 < T , K > , url : String , name : String = type . java . simpleName ) MongoDbStore ( type : KClass < T > , key : KProperty1 < T , K > , database : MongoDatabase , name : String = type . java . simpleName , mapper : Mapper < T > = MongoDbMapper ( type , key ))","title":" init "},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/-init-/#init","text":"MongoDbStore ( type : KClass < T > , key : KProperty1 < T , K > , url : String , name : String = type . java . simpleName ) MongoDbStore ( type : KClass < T > , key : KProperty1 < T , K > , database : MongoDatabase , name : String = type . java . simpleName , mapper : Mapper < T > = MongoDbMapper ( type , key ))","title":"&lt;init&gt;"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/collection/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / collection collection \u00b6 val collection: MongoCollection <Document>","title":"Collection"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/collection/#collection","text":"val collection: MongoCollection <Document>","title":"collection"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/count/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / count count \u00b6 fun count ( filter : Map < String , *> ): Long","title":"Count"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/count/#count","text":"fun count ( filter : Map < String , *> ): Long","title":"count"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/create-index/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / createIndex createIndex \u00b6 fun createIndex ( unique : Boolean , fields : Map < String , IndexOrder > ): String","title":"Create index"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/create-index/#createindex","text":"fun createIndex ( unique : Boolean , fields : Map < String , IndexOrder > ): String","title":"createIndex"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/database/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / database database \u00b6 fun database ( url : String ): MongoDatabase","title":"Database"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/database/#database","text":"fun database ( url : String ): MongoDatabase","title":"database"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/delete-many/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / deleteMany deleteMany \u00b6 fun deleteMany ( filter : Map < String , *> ): Long","title":"Delete many"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/delete-many/#deletemany","text":"fun deleteMany ( filter : Map < String , *> ): Long","title":"deleteMany"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/delete-one/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / deleteOne deleteOne \u00b6 fun deleteOne ( id : K ): Boolean","title":"Delete one"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/delete-one/#deleteone","text":"fun deleteOne ( id : K ): Boolean","title":"deleteOne"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/drop/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / drop drop \u00b6 fun drop (): Unit","title":"Drop"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/drop/#drop","text":"fun drop (): Unit","title":"drop"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/find-many/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / findMany findMany \u00b6 fun findMany ( filter : Map < String , *> , limit : Int ? , skip : Int ? , sort : Map < String , Boolean > ): List < T > fun findMany ( filter : Map < String , *> , fields : List < String > , limit : Int ? , skip : Int ? , sort : Map < String , Boolean > ): List < Map < String , *>>","title":"Find many"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/find-many/#findmany","text":"fun findMany ( filter : Map < String , *> , limit : Int ? , skip : Int ? , sort : Map < String , Boolean > ): List < T > fun findMany ( filter : Map < String , *> , fields : List < String > , limit : Int ? , skip : Int ? , sort : Map < String , Boolean > ): List < Map < String , *>>","title":"findMany"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/find-one/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / findOne findOne \u00b6 fun findOne ( key : K ): T ? fun findOne ( key : K , fields : List < String > ): Map < String , *>?","title":"Find one"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/find-one/#findone","text":"fun findOne ( key : K ): T ? fun findOne ( key : K , fields : List < String > ): Map < String , *>?","title":"findOne"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/insert-many/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / insertMany insertMany \u00b6 fun insertMany ( instances : List < T > ): List < K >","title":"Insert many"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/insert-many/#insertmany","text":"fun insertMany ( instances : List < T > ): List < K >","title":"insertMany"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/insert-one/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / insertOne insertOne \u00b6 fun insertOne ( instance : T ): K","title":"Insert one"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/insert-one/#insertone","text":"fun insertOne ( instance : T ): K","title":"insertOne"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/key/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / key key \u00b6 val key: KProperty1 < T , K >","title":"Key"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/key/#key","text":"val key: KProperty1 < T , K >","title":"key"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/mapper/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / mapper mapper \u00b6 val mapper: Mapper <T>","title":"Mapper"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/mapper/#mapper","text":"val mapper: Mapper <T>","title":"mapper"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/name/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / name name \u00b6 val name: String","title":"Name"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/name/#name","text":"val name: String","title":"name"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/replace-many/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / replaceMany replaceMany \u00b6 fun replaceMany ( instances : List < T > ): List < T >","title":"Replace many"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/replace-many/#replacemany","text":"fun replaceMany ( instances : List < T > ): List < T >","title":"replaceMany"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/replace-one/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / replaceOne replaceOne \u00b6 fun replaceOne ( instance : T ): Boolean","title":"Replace one"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/replace-one/#replaceone","text":"fun replaceOne ( instance : T ): Boolean","title":"replaceOne"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/save-many/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / saveMany saveMany \u00b6 fun saveMany ( instances : List < T > ): List < K ?>","title":"Save many"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/save-many/#savemany","text":"fun saveMany ( instances : List < T > ): List < K ?>","title":"saveMany"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/save-one/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / saveOne saveOne \u00b6 fun saveOne ( instance : T ): K ?","title":"Save one"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/save-one/#saveone","text":"fun saveOne ( instance : T ): K ?","title":"saveOne"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/type/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / type type \u00b6 val type: KClass < T >","title":"Type"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/type/#type","text":"val type: KClass < T >","title":"type"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/update-many/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / updateMany updateMany \u00b6 fun updateMany ( filter : Map < String , *> , updates : Map < String , *> ): Long","title":"Update many"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/update-many/#updatemany","text":"fun updateMany ( filter : Map < String , *> , updates : Map < String , *> ): Long","title":"updateMany"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/update-one/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStore / updateOne updateOne \u00b6 fun updateOne ( key : K , updates : Map < String , *> ): Boolean","title":"Update one"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store/update-one/#updateone","text":"fun updateOne ( key : K , updates : Map < String , *> ): Boolean","title":"updateOne"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStoreTest MongoDbStoreTest \u00b6 class MongoDbStoreTest Constructors \u00b6 Name Summary <init> MongoDbStoreTest () Functions \u00b6 Name Summary dropCollection fun dropCollection (): Unit Entities are stored fun Entities are stored (): Unit Indexes creation works ok fun Indexes creation works ok (): Unit Insert one record returns the proper key fun Insert one record returns the proper key (): Unit Many records are stored fun Many records are stored (): Unit New records are stored fun New records are stored (): Unit Store type is correct fun Store type is correct (): Unit","title":"Home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/#mongodbstoretest","text":"class MongoDbStoreTest","title":"MongoDbStoreTest"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/#constructors","text":"Name Summary <init> MongoDbStoreTest ()","title":"Constructors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/#functions","text":"Name Summary dropCollection fun dropCollection (): Unit Entities are stored fun Entities are stored (): Unit Indexes creation works ok fun Indexes creation works ok (): Unit Insert one record returns the proper key fun Insert one record returns the proper key (): Unit Many records are stored fun Many records are stored (): Unit New records are stored fun New records are stored (): Unit Store type is correct fun Store type is correct (): Unit","title":"Functions"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/-entities are stored/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStoreTest / Entities are stored Entities are stored \u00b6 fun Entities are stored (): Unit","title":" entities are stored"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/-entities are stored/#entities-are-stored","text":"fun Entities are stored (): Unit","title":"Entities are stored"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/-indexes creation works ok/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStoreTest / Indexes creation works ok Indexes creation works ok \u00b6 fun Indexes creation works ok (): Unit","title":" indexes creation works ok"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/-indexes creation works ok/#indexes-creation-works-ok","text":"fun Indexes creation works ok (): Unit","title":"Indexes creation works ok"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/-init-/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStoreTest / <init> <init> \u00b6 MongoDbStoreTest ()","title":" init "},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/-init-/#init","text":"MongoDbStoreTest ()","title":"&lt;init&gt;"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/-insert one record returns the proper key/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStoreTest / Insert one record returns the proper key Insert one record returns the proper key \u00b6 fun Insert one record returns the proper key (): Unit","title":" insert one record returns the proper key"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/-insert one record returns the proper key/#insert-one-record-returns-the-proper-key","text":"fun Insert one record returns the proper key (): Unit","title":"Insert one record returns the proper key"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/-many records are stored/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStoreTest / Many records are stored Many records are stored \u00b6 fun Many records are stored (): Unit","title":" many records are stored"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/-many records are stored/#many-records-are-stored","text":"fun Many records are stored (): Unit","title":"Many records are stored"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/-new records are stored/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStoreTest / New records are stored New records are stored \u00b6 fun New records are stored (): Unit","title":" new records are stored"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/-new records are stored/#new-records-are-stored","text":"fun New records are stored (): Unit","title":"New records are stored"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/-store type is correct/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStoreTest / Store type is correct Store type is correct \u00b6 fun Store type is correct (): Unit","title":" store type is correct"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/-store type is correct/#store-type-is-correct","text":"fun Store type is correct (): Unit","title":"Store type is correct"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/drop-collection/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoDbStoreTest / dropCollection dropCollection \u00b6 fun dropCollection (): Unit","title":"Drop collection"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-db-store-test/drop-collection/#dropcollection","text":"fun dropCollection (): Unit","title":"dropCollection"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoIdRepository MongoIdRepository \u00b6 open class MongoIdRepository < T : Any , K : Any > : MongoRepository < T > Constructors \u00b6 Name Summary <init> MongoIdRepository ( type : KClass < T > , database : MongoDatabase , key : KProperty1 < T , K > , indexOrder : Int ? = 1 , onStore : ( Document ) -> Document = { it } , onLoad : ( Document ) -> Document = { it } ) MongoIdRepository ( type : KClass < T > , collection : MongoCollection < Document > , key : KProperty1 < T , K > , indexOrder : Int ? = 1 , onStore : ( Document ) -> Document = { it } , onLoad : ( Document ) -> Document = { it } ) Properties \u00b6 Name Summary keyType val keyType: KClass < K > Functions \u00b6 Name Summary convertId open fun convertId ( id : K ): Any convertKeyName open fun convertKeyName ( keyName : String ): String deleteId fun deleteId ( documentId : K ): Unit deleteIds fun deleteIds ( vararg documentId : K ): Unit fun deleteIds ( documentIds : List < K > ): Unit deleteObject fun deleteObject ( documentId : T ): Unit deleteObjects fun deleteObjects ( vararg documentId : T ): Unit fun deleteObjects ( documentIds : List < T > ): Unit find fun find ( vararg documentId : K ): List < T > fun find ( documentId : List < K > , setup : FindIterable <*> .() -> Unit = {} ): List < T > fun find ( documentId : K ): T ? getKey fun getKey ( obj : T ): K isEmpty fun isEmpty (): Boolean replaceObject fun replaceObject ( document : T , upsert : Boolean = false ): UpdateResult replaceObjects fun replaceObjects ( vararg document : T , upsert : Boolean = false , bulk : Boolean = false ): Unit fun replaceObjects ( document : List < T > , upsert : Boolean = false , bulk : Boolean = false ): Unit","title":"Home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/#mongoidrepository","text":"open class MongoIdRepository < T : Any , K : Any > : MongoRepository < T >","title":"MongoIdRepository"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/#constructors","text":"Name Summary <init> MongoIdRepository ( type : KClass < T > , database : MongoDatabase , key : KProperty1 < T , K > , indexOrder : Int ? = 1 , onStore : ( Document ) -> Document = { it } , onLoad : ( Document ) -> Document = { it } ) MongoIdRepository ( type : KClass < T > , collection : MongoCollection < Document > , key : KProperty1 < T , K > , indexOrder : Int ? = 1 , onStore : ( Document ) -> Document = { it } , onLoad : ( Document ) -> Document = { it } )","title":"Constructors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/#properties","text":"Name Summary keyType val keyType: KClass < K >","title":"Properties"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/#functions","text":"Name Summary convertId open fun convertId ( id : K ): Any convertKeyName open fun convertKeyName ( keyName : String ): String deleteId fun deleteId ( documentId : K ): Unit deleteIds fun deleteIds ( vararg documentId : K ): Unit fun deleteIds ( documentIds : List < K > ): Unit deleteObject fun deleteObject ( documentId : T ): Unit deleteObjects fun deleteObjects ( vararg documentId : T ): Unit fun deleteObjects ( documentIds : List < T > ): Unit find fun find ( vararg documentId : K ): List < T > fun find ( documentId : List < K > , setup : FindIterable <*> .() -> Unit = {} ): List < T > fun find ( documentId : K ): T ? getKey fun getKey ( obj : T ): K isEmpty fun isEmpty (): Boolean replaceObject fun replaceObject ( document : T , upsert : Boolean = false ): UpdateResult replaceObjects fun replaceObjects ( vararg document : T , upsert : Boolean = false , bulk : Boolean = false ): Unit fun replaceObjects ( document : List < T > , upsert : Boolean = false , bulk : Boolean = false ): Unit","title":"Functions"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/-init-/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoIdRepository / <init> <init> \u00b6 MongoIdRepository ( type : KClass < T > , database : MongoDatabase , key : KProperty1 < T , K > , indexOrder : Int ? = 1 , onStore : ( Document ) -> Document = { it } , onLoad : ( Document ) -> Document = { it } ) MongoIdRepository ( type : KClass < T > , collection : MongoCollection < Document > , key : KProperty1 < T , K > , indexOrder : Int ? = 1 , onStore : ( Document ) -> Document = { it } , onLoad : ( Document ) -> Document = { it } )","title":" init "},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/-init-/#init","text":"MongoIdRepository ( type : KClass < T > , database : MongoDatabase , key : KProperty1 < T , K > , indexOrder : Int ? = 1 , onStore : ( Document ) -> Document = { it } , onLoad : ( Document ) -> Document = { it } ) MongoIdRepository ( type : KClass < T > , collection : MongoCollection < Document > , key : KProperty1 < T , K > , indexOrder : Int ? = 1 , onStore : ( Document ) -> Document = { it } , onLoad : ( Document ) -> Document = { it } )","title":"&lt;init&gt;"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/convert-id/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoIdRepository / convertId convertId \u00b6 protected open fun convertId ( id : K ): Any","title":"Convert id"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/convert-id/#convertid","text":"protected open fun convertId ( id : K ): Any","title":"convertId"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/convert-key-name/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoIdRepository / convertKeyName convertKeyName \u00b6 protected open fun convertKeyName ( keyName : String ): String","title":"Convert key name"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/convert-key-name/#convertkeyname","text":"protected open fun convertKeyName ( keyName : String ): String","title":"convertKeyName"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/delete-id/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoIdRepository / deleteId deleteId \u00b6 fun deleteId ( documentId : K ): Unit","title":"Delete id"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/delete-id/#deleteid","text":"fun deleteId ( documentId : K ): Unit","title":"deleteId"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/delete-ids/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoIdRepository / deleteIds deleteIds \u00b6 fun deleteIds ( vararg documentId : K ): Unit fun deleteIds ( documentIds : List < K > ): Unit","title":"Delete ids"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/delete-ids/#deleteids","text":"fun deleteIds ( vararg documentId : K ): Unit fun deleteIds ( documentIds : List < K > ): Unit","title":"deleteIds"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/delete-object/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoIdRepository / deleteObject deleteObject \u00b6 fun deleteObject ( documentId : T ): Unit","title":"Delete object"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/delete-object/#deleteobject","text":"fun deleteObject ( documentId : T ): Unit","title":"deleteObject"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/delete-objects/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoIdRepository / deleteObjects deleteObjects \u00b6 fun deleteObjects ( vararg documentId : T ): Unit fun deleteObjects ( documentIds : List < T > ): Unit","title":"Delete objects"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/delete-objects/#deleteobjects","text":"fun deleteObjects ( vararg documentId : T ): Unit fun deleteObjects ( documentIds : List < T > ): Unit","title":"deleteObjects"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/find/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoIdRepository / find find \u00b6 fun find ( vararg documentId : K ): List < T > fun find ( documentId : List < K > , setup : FindIterable <*> .() -> Unit = {} ): List < T > fun find ( documentId : K ): T ?","title":"Find"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/find/#find","text":"fun find ( vararg documentId : K ): List < T > fun find ( documentId : List < K > , setup : FindIterable <*> .() -> Unit = {} ): List < T > fun find ( documentId : K ): T ?","title":"find"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/get-key/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoIdRepository / getKey getKey \u00b6 fun getKey ( obj : T ): K","title":"Get key"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/get-key/#getkey","text":"fun getKey ( obj : T ): K","title":"getKey"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/is-empty/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoIdRepository / isEmpty isEmpty \u00b6 fun isEmpty (): Boolean","title":"Is empty"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/is-empty/#isempty","text":"fun isEmpty (): Boolean","title":"isEmpty"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/key-type/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoIdRepository / keyType keyType \u00b6 val keyType: KClass < K >","title":"Key type"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/key-type/#keytype","text":"val keyType: KClass < K >","title":"keyType"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/replace-object/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoIdRepository / replaceObject replaceObject \u00b6 fun replaceObject ( document : T , upsert : Boolean = false ): UpdateResult","title":"Replace object"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/replace-object/#replaceobject","text":"fun replaceObject ( document : T , upsert : Boolean = false ): UpdateResult","title":"replaceObject"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/replace-objects/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoIdRepository / replaceObjects replaceObjects \u00b6 fun replaceObjects ( vararg document : T , upsert : Boolean = false , bulk : Boolean = false ): Unit fun replaceObjects ( document : List < T > , upsert : Boolean = false , bulk : Boolean = false ): Unit","title":"Replace objects"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-id-repository/replace-objects/#replaceobjects","text":"fun replaceObjects ( vararg document : T , upsert : Boolean = false , bulk : Boolean = false ): Unit fun replaceObjects ( document : List < T > , upsert : Boolean = false , bulk : Boolean = false ): Unit","title":"replaceObjects"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepository MongoRepository \u00b6 open class MongoRepository < T : Any > : MongoCollection < Document > Constructors \u00b6 Name Summary <init> MongoRepository ( type : KClass < T > , database : MongoDatabase ) MongoRepository ( type : KClass < T > , collection : MongoCollection < Document > , onStore : ( Document ) -> Document = { it } , onLoad : ( Document ) -> Document = { it } ) Properties \u00b6 Name Summary onLoad val onLoad: (Document) -> Document onStore val onStore: (Document) -> Document Functions \u00b6 Name Summary delete fun delete (): DeleteResult findObjects fun findObjects ( setup : FindIterable <*> .() -> Unit = {} ): MongoIterable < T > fun findObjects ( filter : Bson , setup : FindIterable <*> .() -> Unit = {} ): MongoIterable < T > findOneObjectAndReplace fun findOneObjectAndReplace ( filter : Bson , replacement : T ): T fun findOneObjectAndReplace ( filter : Bson , replacement : T , options : FindOneAndReplaceOptions ): T importFile fun importFile ( input : File ): Unit importResource fun importResource ( input : String ): Unit insertManyObjects fun insertManyObjects ( documents : List < T > ): Unit fun insertManyObjects ( documents : List < T > , options : InsertManyOptions ): Unit insertOne fun insertOne ( document : Map < String , *> ): Unit insertOneObject TODO Publish error event (try-catch with throw) fun insertOneObject ( document : T ): Unit fun insertOneObject ( document : T , options : InsertOneOptions ): Unit map open fun map ( document : T ): Document open fun map ( documents : List < T > ): List < Document > replaceOneObject fun replaceOneObject ( filter : Bson , replacement : T ): UpdateResult fun replaceOneObject ( filter : Bson , replacement : T , options : ReplaceOptions ): UpdateResult unmap open fun unmap ( document : Document ): T Inheritors \u00b6 Name Summary MongoIdRepository open class MongoIdRepository < T : Any , K : Any > : MongoRepository < T >","title":"Home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/#mongorepository","text":"open class MongoRepository < T : Any > : MongoCollection < Document >","title":"MongoRepository"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/#constructors","text":"Name Summary <init> MongoRepository ( type : KClass < T > , database : MongoDatabase ) MongoRepository ( type : KClass < T > , collection : MongoCollection < Document > , onStore : ( Document ) -> Document = { it } , onLoad : ( Document ) -> Document = { it } )","title":"Constructors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/#properties","text":"Name Summary onLoad val onLoad: (Document) -> Document onStore val onStore: (Document) -> Document","title":"Properties"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/#functions","text":"Name Summary delete fun delete (): DeleteResult findObjects fun findObjects ( setup : FindIterable <*> .() -> Unit = {} ): MongoIterable < T > fun findObjects ( filter : Bson , setup : FindIterable <*> .() -> Unit = {} ): MongoIterable < T > findOneObjectAndReplace fun findOneObjectAndReplace ( filter : Bson , replacement : T ): T fun findOneObjectAndReplace ( filter : Bson , replacement : T , options : FindOneAndReplaceOptions ): T importFile fun importFile ( input : File ): Unit importResource fun importResource ( input : String ): Unit insertManyObjects fun insertManyObjects ( documents : List < T > ): Unit fun insertManyObjects ( documents : List < T > , options : InsertManyOptions ): Unit insertOne fun insertOne ( document : Map < String , *> ): Unit insertOneObject TODO Publish error event (try-catch with throw) fun insertOneObject ( document : T ): Unit fun insertOneObject ( document : T , options : InsertOneOptions ): Unit map open fun map ( document : T ): Document open fun map ( documents : List < T > ): List < Document > replaceOneObject fun replaceOneObject ( filter : Bson , replacement : T ): UpdateResult fun replaceOneObject ( filter : Bson , replacement : T , options : ReplaceOptions ): UpdateResult unmap open fun unmap ( document : Document ): T","title":"Functions"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/#inheritors","text":"Name Summary MongoIdRepository open class MongoIdRepository < T : Any , K : Any > : MongoRepository < T >","title":"Inheritors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/-init-/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepository / <init> <init> \u00b6 MongoRepository ( type : KClass < T > , database : MongoDatabase ) MongoRepository ( type : KClass < T > , collection : MongoCollection < Document > , onStore : ( Document ) -> Document = { it } , onLoad : ( Document ) -> Document = { it } )","title":" init "},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/-init-/#init","text":"MongoRepository ( type : KClass < T > , database : MongoDatabase ) MongoRepository ( type : KClass < T > , collection : MongoCollection < Document > , onStore : ( Document ) -> Document = { it } , onLoad : ( Document ) -> Document = { it } )","title":"&lt;init&gt;"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/delete/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepository / delete delete \u00b6 fun delete (): DeleteResult","title":"Delete"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/delete/#delete","text":"fun delete (): DeleteResult","title":"delete"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/find-objects/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepository / findObjects findObjects \u00b6 fun findObjects ( setup : FindIterable <*> .() -> Unit = {} ): MongoIterable < T > fun findObjects ( filter : Bson , setup : FindIterable <*> .() -> Unit = {} ): MongoIterable < T >","title":"Find objects"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/find-objects/#findobjects","text":"fun findObjects ( setup : FindIterable <*> .() -> Unit = {} ): MongoIterable < T > fun findObjects ( filter : Bson , setup : FindIterable <*> .() -> Unit = {} ): MongoIterable < T >","title":"findObjects"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/find-one-object-and-replace/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepository / findOneObjectAndReplace findOneObjectAndReplace \u00b6 fun findOneObjectAndReplace ( filter : Bson , replacement : T ): T fun findOneObjectAndReplace ( filter : Bson , replacement : T , options : FindOneAndReplaceOptions ): T","title":"Find one object and replace"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/find-one-object-and-replace/#findoneobjectandreplace","text":"fun findOneObjectAndReplace ( filter : Bson , replacement : T ): T fun findOneObjectAndReplace ( filter : Bson , replacement : T , options : FindOneAndReplaceOptions ): T","title":"findOneObjectAndReplace"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/import-file/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepository / importFile importFile \u00b6 fun importFile ( input : File ): Unit","title":"Import file"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/import-file/#importfile","text":"fun importFile ( input : File ): Unit","title":"importFile"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/import-resource/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepository / importResource importResource \u00b6 fun importResource ( input : String ): Unit","title":"Import resource"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/import-resource/#importresource","text":"fun importResource ( input : String ): Unit","title":"importResource"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/insert-many-objects/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepository / insertManyObjects insertManyObjects \u00b6 fun insertManyObjects ( documents : List < T > ): Unit fun insertManyObjects ( documents : List < T > , options : InsertManyOptions ): Unit","title":"Insert many objects"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/insert-many-objects/#insertmanyobjects","text":"fun insertManyObjects ( documents : List < T > ): Unit fun insertManyObjects ( documents : List < T > , options : InsertManyOptions ): Unit","title":"insertManyObjects"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/insert-one-object/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepository / insertOneObject insertOneObject \u00b6 fun insertOneObject ( document : T ): Unit TODO Publish error event (try-catch with throw) fun insertOneObject ( document : T , options : InsertOneOptions ): Unit","title":"Insert one object"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/insert-one-object/#insertoneobject","text":"fun insertOneObject ( document : T ): Unit TODO Publish error event (try-catch with throw) fun insertOneObject ( document : T , options : InsertOneOptions ): Unit","title":"insertOneObject"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/insert-one/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepository / insertOne insertOne \u00b6 fun insertOne ( document : Map < String , *> ): Unit","title":"Insert one"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/insert-one/#insertone","text":"fun insertOne ( document : Map < String , *> ): Unit","title":"insertOne"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/map/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepository / map map \u00b6 protected open fun map ( document : T ): Document protected open fun map ( documents : List < T > ): List < Document >","title":"Map"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/map/#map","text":"protected open fun map ( document : T ): Document protected open fun map ( documents : List < T > ): List < Document >","title":"map"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/on-load/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepository / onLoad onLoad \u00b6 protected val onLoad: (Document) -> Document","title":"On load"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/on-load/#onload","text":"protected val onLoad: (Document) -> Document","title":"onLoad"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/on-store/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepository / onStore onStore \u00b6 protected val onStore: (Document) -> Document","title":"On store"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/on-store/#onstore","text":"protected val onStore: (Document) -> Document","title":"onStore"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/replace-one-object/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepository / replaceOneObject replaceOneObject \u00b6 fun replaceOneObject ( filter : Bson , replacement : T ): UpdateResult fun replaceOneObject ( filter : Bson , replacement : T , options : ReplaceOptions ): UpdateResult","title":"Replace one object"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/replace-one-object/#replaceoneobject","text":"fun replaceOneObject ( filter : Bson , replacement : T ): UpdateResult fun replaceOneObject ( filter : Bson , replacement : T , options : ReplaceOptions ): UpdateResult","title":"replaceOneObject"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/unmap/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepository / unmap unmap \u00b6 protected open fun unmap ( document : Document ): T","title":"Unmap"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository/unmap/#unmap","text":"protected open fun unmap ( document : Document ): T","title":"unmap"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository-test/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepositoryTest MongoRepositoryTest \u00b6 class MongoRepositoryTest Constructors \u00b6 Name Summary <init> MongoRepositoryTest () Functions \u00b6 Name Summary Resources are loaded fun Resources are loaded (): Unit","title":"Home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository-test/#mongorepositorytest","text":"class MongoRepositoryTest","title":"MongoRepositoryTest"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository-test/#constructors","text":"Name Summary <init> MongoRepositoryTest ()","title":"Constructors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository-test/#functions","text":"Name Summary Resources are loaded fun Resources are loaded (): Unit","title":"Functions"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository-test/-init-/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepositoryTest / <init> <init> \u00b6 MongoRepositoryTest ()","title":" init "},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository-test/-init-/#init","text":"MongoRepositoryTest ()","title":"&lt;init&gt;"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository-test/-resources are loaded/","text":"store_mongodb / com.hexagonkt.store.mongodb / MongoRepositoryTest / Resources are loaded Resources are loaded \u00b6 fun Resources are loaded (): Unit","title":" resources are loaded"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-mongo-repository-test/-resources are loaded/#resources-are-loaded","text":"fun Resources are loaded (): Unit","title":"Resources are loaded"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-person/","text":"store_mongodb / com.hexagonkt.store.mongodb / Person Person \u00b6 data class Person Constructors \u00b6 Name Summary <init> Person ( name : String ) Properties \u00b6 Name Summary name val name: String","title":"Home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-person/#person","text":"data class Person","title":"Person"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-person/#constructors","text":"Name Summary <init> Person ( name : String )","title":"Constructors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-person/#properties","text":"Name Summary name val name: String","title":"Properties"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-person/-init-/","text":"store_mongodb / com.hexagonkt.store.mongodb / Person / <init> <init> \u00b6 Person ( name : String )","title":" init "},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-person/-init-/#init","text":"Person ( name : String )","title":"&lt;init&gt;"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-person/name/","text":"store_mongodb / com.hexagonkt.store.mongodb / Person / name name \u00b6 val name: String","title":"Name"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-person/name/#name","text":"val name: String","title":"name"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/","text":"store_mongodb / com.hexagonkt.store.mongodb / RepositoryTest RepositoryTest \u00b6 abstract class RepositoryTest < T : Any , out K : Any > TODO Check events Constructors \u00b6 Name Summary <init> TODO Check events RepositoryTest ( type : KClass < T > , key : KProperty1 < T , K > ) Properties \u00b6 Name Summary mongodbUrl val mongodbUrl: String testObjects abstract val testObjects: List < T > Functions \u00b6 Name Summary changeObject abstract fun changeObject ( obj : T ): T createObject abstract fun createObject (): T createObjects open fun createObjects (): List < T > find_and_replace_object_stores_modified_data_in_db fun find_and_replace_object_stores_modified_data_in_db (): Unit getObjectKey abstract fun getObjectKey ( obj : T ): K many_objects_are_stored_and_loaded_without_error fun many_objects_are_stored_and_loaded_without_error (): Unit one_object_is_stored_and_loaded_without_error fun one_object_is_stored_and_loaded_without_error (): Unit replace_object_stores_modified_data_in_db fun replace_object_stores_modified_data_in_db (): Unit setObjectKey abstract fun setObjectKey ( obj : T , id : Int ): T setupCollection open fun < T : Any > setupCollection ( collection : MongoRepository < T > ): Unit Inheritors \u00b6 Name Summary IdRepositoryTest TODO Check events abstract class IdRepositoryTest < T : Any , K : Any > : RepositoryTest < T , K >","title":"Home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/#repositorytest","text":"abstract class RepositoryTest < T : Any , out K : Any > TODO Check events","title":"RepositoryTest"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/#constructors","text":"Name Summary <init> TODO Check events RepositoryTest ( type : KClass < T > , key : KProperty1 < T , K > )","title":"Constructors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/#properties","text":"Name Summary mongodbUrl val mongodbUrl: String testObjects abstract val testObjects: List < T >","title":"Properties"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/#functions","text":"Name Summary changeObject abstract fun changeObject ( obj : T ): T createObject abstract fun createObject (): T createObjects open fun createObjects (): List < T > find_and_replace_object_stores_modified_data_in_db fun find_and_replace_object_stores_modified_data_in_db (): Unit getObjectKey abstract fun getObjectKey ( obj : T ): K many_objects_are_stored_and_loaded_without_error fun many_objects_are_stored_and_loaded_without_error (): Unit one_object_is_stored_and_loaded_without_error fun one_object_is_stored_and_loaded_without_error (): Unit replace_object_stores_modified_data_in_db fun replace_object_stores_modified_data_in_db (): Unit setObjectKey abstract fun setObjectKey ( obj : T , id : Int ): T setupCollection open fun < T : Any > setupCollection ( collection : MongoRepository < T > ): Unit","title":"Functions"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/#inheritors","text":"Name Summary IdRepositoryTest TODO Check events abstract class IdRepositoryTest < T : Any , K : Any > : RepositoryTest < T , K >","title":"Inheritors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/-init-/","text":"store_mongodb / com.hexagonkt.store.mongodb / RepositoryTest / <init> <init> \u00b6 RepositoryTest ( type : KClass < T > , key : KProperty1 < T , K > ) TODO Check events","title":" init "},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/-init-/#init","text":"RepositoryTest ( type : KClass < T > , key : KProperty1 < T , K > ) TODO Check events","title":"&lt;init&gt;"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/change-object/","text":"store_mongodb / com.hexagonkt.store.mongodb / RepositoryTest / changeObject changeObject \u00b6 protected abstract fun changeObject ( obj : T ): T","title":"Change object"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/change-object/#changeobject","text":"protected abstract fun changeObject ( obj : T ): T","title":"changeObject"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/create-object/","text":"store_mongodb / com.hexagonkt.store.mongodb / RepositoryTest / createObject createObject \u00b6 protected abstract fun createObject (): T","title":"Create object"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/create-object/#createobject","text":"protected abstract fun createObject (): T","title":"createObject"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/create-objects/","text":"store_mongodb / com.hexagonkt.store.mongodb / RepositoryTest / createObjects createObjects \u00b6 protected open fun createObjects (): List < T >","title":"Create objects"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/create-objects/#createobjects","text":"protected open fun createObjects (): List < T >","title":"createObjects"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/find_and_replace_object_stores_modified_data_in_db/","text":"store_mongodb / com.hexagonkt.store.mongodb / RepositoryTest / find_and_replace_object_stores_modified_data_in_db find_and_replace_object_stores_modified_data_in_db \u00b6 fun find_and_replace_object_stores_modified_data_in_db (): Unit","title":"Find and replace object stores modified data in db"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/find_and_replace_object_stores_modified_data_in_db/#find_and_replace_object_stores_modified_data_in_db","text":"fun find_and_replace_object_stores_modified_data_in_db (): Unit","title":"find_and_replace_object_stores_modified_data_in_db"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/get-object-key/","text":"store_mongodb / com.hexagonkt.store.mongodb / RepositoryTest / getObjectKey getObjectKey \u00b6 protected abstract fun getObjectKey ( obj : T ): K","title":"Get object key"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/get-object-key/#getobjectkey","text":"protected abstract fun getObjectKey ( obj : T ): K","title":"getObjectKey"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/many_objects_are_stored_and_loaded_without_error/","text":"store_mongodb / com.hexagonkt.store.mongodb / RepositoryTest / many_objects_are_stored_and_loaded_without_error many_objects_are_stored_and_loaded_without_error \u00b6 fun many_objects_are_stored_and_loaded_without_error (): Unit","title":"Many objects are stored and loaded without error"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/many_objects_are_stored_and_loaded_without_error/#many_objects_are_stored_and_loaded_without_error","text":"fun many_objects_are_stored_and_loaded_without_error (): Unit","title":"many_objects_are_stored_and_loaded_without_error"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/mongodb-url/","text":"store_mongodb / com.hexagonkt.store.mongodb / RepositoryTest / mongodbUrl mongodbUrl \u00b6 val mongodbUrl: String","title":"Mongodb url"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/mongodb-url/#mongodburl","text":"val mongodbUrl: String","title":"mongodbUrl"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/one_object_is_stored_and_loaded_without_error/","text":"store_mongodb / com.hexagonkt.store.mongodb / RepositoryTest / one_object_is_stored_and_loaded_without_error one_object_is_stored_and_loaded_without_error \u00b6 fun one_object_is_stored_and_loaded_without_error (): Unit","title":"One object is stored and loaded without error"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/one_object_is_stored_and_loaded_without_error/#one_object_is_stored_and_loaded_without_error","text":"fun one_object_is_stored_and_loaded_without_error (): Unit","title":"one_object_is_stored_and_loaded_without_error"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/replace_object_stores_modified_data_in_db/","text":"store_mongodb / com.hexagonkt.store.mongodb / RepositoryTest / replace_object_stores_modified_data_in_db replace_object_stores_modified_data_in_db \u00b6 fun replace_object_stores_modified_data_in_db (): Unit","title":"Replace object stores modified data in db"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/replace_object_stores_modified_data_in_db/#replace_object_stores_modified_data_in_db","text":"fun replace_object_stores_modified_data_in_db (): Unit","title":"replace_object_stores_modified_data_in_db"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/set-object-key/","text":"store_mongodb / com.hexagonkt.store.mongodb / RepositoryTest / setObjectKey setObjectKey \u00b6 protected abstract fun setObjectKey ( obj : T , id : Int ): T","title":"Set object key"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/set-object-key/#setobjectkey","text":"protected abstract fun setObjectKey ( obj : T , id : Int ): T","title":"setObjectKey"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/setup-collection/","text":"store_mongodb / com.hexagonkt.store.mongodb / RepositoryTest / setupCollection setupCollection \u00b6 protected open fun < T : Any > setupCollection ( collection : MongoRepository < T > ): Unit","title":"Setup collection"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/setup-collection/#setupcollection","text":"protected open fun < T : Any > setupCollection ( collection : MongoRepository < T > ): Unit","title":"setupCollection"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/test-objects/","text":"store_mongodb / com.hexagonkt.store.mongodb / RepositoryTest / testObjects testObjects \u00b6 protected abstract val testObjects: List < T >","title":"Test objects"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-repository-test/test-objects/#testobjects","text":"protected abstract val testObjects: List < T >","title":"testObjects"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-tag/","text":"store_mongodb / com.hexagonkt.store.mongodb / Tag Tag \u00b6 data class Tag Constructors \u00b6 Name Summary <init> Tag ( id : String = ObjectId (). toHexString (), name : String ) Properties \u00b6 Name Summary id val id: String name val name: String","title":"Home"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-tag/#tag","text":"data class Tag","title":"Tag"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-tag/#constructors","text":"Name Summary <init> Tag ( id : String = ObjectId (). toHexString (), name : String )","title":"Constructors"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-tag/#properties","text":"Name Summary id val id: String name val name: String","title":"Properties"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-tag/-init-/","text":"store_mongodb / com.hexagonkt.store.mongodb / Tag / <init> <init> \u00b6 Tag ( id : String = ObjectId (). toHexString (), name : String )","title":" init "},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-tag/-init-/#init","text":"Tag ( id : String = ObjectId (). toHexString (), name : String )","title":"&lt;init&gt;"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-tag/id/","text":"store_mongodb / com.hexagonkt.store.mongodb / Tag / id id \u00b6 val id: String","title":"Id"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-tag/id/#id","text":"val id: String","title":"id"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-tag/name/","text":"store_mongodb / com.hexagonkt.store.mongodb / Tag / name name \u00b6 val name: String","title":"Name"},{"location":"store_mongodb/com.hexagonkt.store.mongodb/-tag/name/#name","text":"val name: String","title":"name"},{"location":"templates_pebble/","text":"templates_pebble Pebble template engine adapter for Hexagon. Packages \u00b6 Name Summary com.hexagonkt.templates.pebble TODO Index \u00b6 All Types","title":"Pebble"},{"location":"templates_pebble/#packages","text":"Name Summary com.hexagonkt.templates.pebble TODO","title":"Packages"},{"location":"templates_pebble/#index","text":"All Types","title":"Index"},{"location":"templates_pebble/alltypes/","text":"Pebble template engine adapter for Hexagon. All Types \u00b6 Name Summary com.hexagonkt.templates.pebble.PebbleAdapter \u00b6 TODO Support different engines by subdir. Ie: TODO Add code to test templates (check unresolved variables in bundles, multilanguage, etc.) | com.hexagonkt.templates.pebble.PebbleAdapterTest \u00b6","title":"Home"},{"location":"templates_pebble/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"templates_pebble/alltypes/#comhexagonkttemplatespebblepebbleadapter","text":"TODO Support different engines by subdir. Ie: TODO Add code to test templates (check unresolved variables in bundles, multilanguage, etc.) |","title":"com.hexagonkt.templates.pebble.PebbleAdapter"},{"location":"templates_pebble/alltypes/#comhexagonkttemplatespebblepebbleadaptertest","text":"","title":"com.hexagonkt.templates.pebble.PebbleAdapterTest"},{"location":"templates_pebble/com.hexagonkt.templates.pebble/","text":"templates_pebble / com.hexagonkt.templates.pebble Package com.hexagonkt.templates.pebble \u00b6 TODO Types \u00b6 Name Summary PebbleAdapter TODO Support different engines by subdir. Ie: TODO Add code to test templates (check unresolved variables in bundles, multilanguage, etc.) object PebbleAdapter : TemplatePort PebbleAdapterTest class PebbleAdapterTest","title":"Home"},{"location":"templates_pebble/com.hexagonkt.templates.pebble/#package-comhexagonkttemplatespebble","text":"TODO","title":"Package com.hexagonkt.templates.pebble"},{"location":"templates_pebble/com.hexagonkt.templates.pebble/#types","text":"Name Summary PebbleAdapter TODO Support different engines by subdir. Ie: TODO Add code to test templates (check unresolved variables in bundles, multilanguage, etc.) object PebbleAdapter : TemplatePort PebbleAdapterTest class PebbleAdapterTest","title":"Types"},{"location":"templates_pebble/com.hexagonkt.templates.pebble/-pebble-adapter/","text":"templates_pebble / com.hexagonkt.templates.pebble / PebbleAdapter PebbleAdapter \u00b6 object PebbleAdapter : TemplatePort TODO Support different engines by subdir. Ie: TODO Add code to test templates (check unresolved variables in bundles, multilanguage, etc.) templates/pebble/file templates/freemarker/file ... Functions \u00b6 Name Summary render fun render ( resource : String , locale : Locale , context : Map < String , *> ): String","title":"Home"},{"location":"templates_pebble/com.hexagonkt.templates.pebble/-pebble-adapter/#pebbleadapter","text":"object PebbleAdapter : TemplatePort TODO Support different engines by subdir. Ie: TODO Add code to test templates (check unresolved variables in bundles, multilanguage, etc.) templates/pebble/file templates/freemarker/file ...","title":"PebbleAdapter"},{"location":"templates_pebble/com.hexagonkt.templates.pebble/-pebble-adapter/#functions","text":"Name Summary render fun render ( resource : String , locale : Locale , context : Map < String , *> ): String","title":"Functions"},{"location":"templates_pebble/com.hexagonkt.templates.pebble/-pebble-adapter/render/","text":"templates_pebble / com.hexagonkt.templates.pebble / PebbleAdapter / render render \u00b6 fun render ( resource : String , locale : Locale , context : Map < String , *> ): String","title":"Render"},{"location":"templates_pebble/com.hexagonkt.templates.pebble/-pebble-adapter/render/#render","text":"fun render ( resource : String , locale : Locale , context : Map < String , *> ): String","title":"render"},{"location":"templates_pebble/com.hexagonkt.templates.pebble/-pebble-adapter-test/","text":"templates_pebble / com.hexagonkt.templates.pebble / PebbleAdapterTest PebbleAdapterTest \u00b6 class PebbleAdapterTest Constructors \u00b6 Name Summary <init> PebbleAdapterTest () Functions \u00b6 Name Summary Dates are converted properly fun Dates are converted properly (): Unit","title":"Home"},{"location":"templates_pebble/com.hexagonkt.templates.pebble/-pebble-adapter-test/#pebbleadaptertest","text":"class PebbleAdapterTest","title":"PebbleAdapterTest"},{"location":"templates_pebble/com.hexagonkt.templates.pebble/-pebble-adapter-test/#constructors","text":"Name Summary <init> PebbleAdapterTest ()","title":"Constructors"},{"location":"templates_pebble/com.hexagonkt.templates.pebble/-pebble-adapter-test/#functions","text":"Name Summary Dates are converted properly fun Dates are converted properly (): Unit","title":"Functions"},{"location":"templates_pebble/com.hexagonkt.templates.pebble/-pebble-adapter-test/-dates are converted properly/","text":"templates_pebble / com.hexagonkt.templates.pebble / PebbleAdapterTest / Dates are converted properly Dates are converted properly \u00b6 fun Dates are converted properly (): Unit","title":" dates are converted properly"},{"location":"templates_pebble/com.hexagonkt.templates.pebble/-pebble-adapter-test/-dates are converted properly/#dates-are-converted-properly","text":"fun Dates are converted properly (): Unit","title":"Dates are converted properly"},{"location":"templates_pebble/com.hexagonkt.templates.pebble/-pebble-adapter-test/-init-/","text":"templates_pebble / com.hexagonkt.templates.pebble / PebbleAdapterTest / <init> <init> \u00b6 PebbleAdapterTest ()","title":" init "},{"location":"templates_pebble/com.hexagonkt.templates.pebble/-pebble-adapter-test/-init-/#init","text":"PebbleAdapterTest ()","title":"&lt;init&gt;"}]}